{"remainingRequest":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/babel-loader/lib/index.js!/Users/raviailani/Downloads/django-vue-admin/web/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/raviailani/Downloads/django-vue-admin/web/node_modules/d2p-extends/src/file-uploader/lib/cropper-uploader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/d2p-extends/src/file-uploader/lib/cropper-uploader.vue","mtime":1674694550311},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/babel.config.js","mtime":1674694301461},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/cache-loader/dist/cjs.js","mtime":1674694548948},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/babel-loader/lib/index.js","mtime":1674694549283},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/cache-loader/dist/cjs.js","mtime":1674694548948},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/index.js","mtime":1674694549360}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiL1VzZXJzL3JhdmlhaWxhbmkvRG93bmxvYWRzL2RqYW5nby12dWUtYWRtaW4vd2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9yZWdlbmVyYXRvclJ1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3JhdmlhaWxhbmkvRG93bmxvYWRzL2RqYW5nby12dWUtYWRtaW4vd2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIi9Vc2Vycy9yYXZpYWlsYW5pL0Rvd25sb2Fkcy9kamFuZ28tdnVlLWFkbWluL3dlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlci5qcyI7CmltcG9ydCBfdHlwZW9mIGZyb20gIi9Vc2Vycy9yYXZpYWlsYW5pL0Rvd25sb2Fkcy9kamFuZ28tdnVlLWFkbWluL3dlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgRDJwQ3JvcHBlciBmcm9tICcuL2Nyb3BwZXInOwppbXBvcnQgRDJwVXBsb2FkZXIgZnJvbSAnLi4vLi4vdXBsb2FkZXInOwppbXBvcnQgeyBkMkNydWRQbHVzIH0gZnJvbSAnLi4vLi4vdXRpbHMvZDItY3J1ZC1wbHVzJzsKaW1wb3J0IGxvZyBmcm9tICcuLi8uLi91dGlscy91dGlsLmxvZyc7Ci8qKg0KICog5Zu+54mH6KOB5Ymq5LiK5Lyg57uE5Lu2LOWwgeijheS6hmQycC1jcm9wcGVyLCBkMnAtY3JvcHBlcuWGhemDqOWwgeijheS6hmNyb3BwZXJqcw0KICovCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2QycC1jcm9wcGVyLXVwbG9hZGVyJywKICBtaXhpbnM6IFtkMkNydWRQbHVzLmlucHV0QmFzZV0sCiAgY29tcG9uZW50czogewogICAgRDJwQ3JvcHBlcjogRDJwQ3JvcHBlcgogIH0sCiAgcHJvcHM6IHsKICAgIC8vIOWIneWni+WbvueJh3VybAogICAgdmFsdWU6IHsKICAgICAgdHlwZTogW1N0cmluZywgQXJyYXldCiAgICB9LAogICAgLy8g5LiK5Lyg5ZCO56uv57G75Z6L77yMW2Zvcm0sIGNvcywgcWluaXUgLCBhbGlvc3NdCiAgICB0eXBlOiB7CiAgICAgIHR5cGU6IFN0cmluZwogICAgfSwKICAgIC8vIOS4iuS8oOaPkOekugogICAgdXBsb2FkVGlwOiB7CiAgICAgIHR5cGU6IFN0cmluZwogICAgfSwKICAgIC8vIOWvueivneahhuagh+mimAogICAgdGl0bGU6IFN0cmluZywKICAgIC8vIGNyb3BwZXLnmoTpq5jluqbvvIzpu5jorqTkuLrmtY/op4jlmajlj6/op4bnqpflj6Ppq5jluqbnmoQ0MCXvvIzmnIDlsI8yNzAKICAgIGNyb3BwZXJIZWlnaHQ6IHsKICAgICAgdHlwZTogW1N0cmluZywgTnVtYmVyXQogICAgfSwKICAgIC8vIOWvueivneahhuWuveW6pu+8jOm7mOiupDUwJQogICAgZGlhbG9nV2lkdGg6IHsKICAgICAgdHlwZTogW1N0cmluZywgTnVtYmVyXSwKICAgICAgZGVmYXVsdDogJzUwJScKICAgIH0sCiAgICAvLyDlm77niYflpKflsI/pmZDliLbvvIzljZXkvY1NQgogICAgbWF4U2l6ZTogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDUKICAgIH0sCiAgICAvLyDlm77niYfmlbDph4/pmZDliLYsMOS4uuS4jemZkOWItgogICAgbGltaXQ6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAxCiAgICB9LAogICAgLy8g5Y+v5o6l5pS255qE5paH5Lu25ZCO57yACiAgICBhY2NlcHQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnLmpwZywgLmpwZWcsIC5wbmcsIC5naWYsIC53ZWJwJwogICAgfSwKICAgIC8vIFtjcm9wcGVyanPnmoTlj4LmlbBdKGh0dHBzOi8vZ2l0aHViLmNvbS9mZW5neXVhbmNoZW4vY3JvcHBlcmpzKQogICAgY3JvcHBlcjogewogICAgICB0eXBlOiBPYmplY3QKICAgIH0sCiAgICAvLyDkuIrkvKDlj4LmlbDvvIzkvJrkuLTml7bopobnm5blhajlsYDkuIrkvKDphY3nva7lj4LmlbBbZDJwLXVwbG9hZGVyXSgvZ3VpZGUvZXh0ZW5kcy91cGxvYWRlci5odG1sKQogICAgdXBsb2FkZXI6IHsKICAgICAgdHlwZTogT2JqZWN0CiAgICB9LAogICAgLy8g5p6E5bu65LiL6L29dXJs5pa55rOVLOS4jeW9seWTjeaPkOS6pOeahHZhbHVlCiAgICBidWlsZFVybDogewogICAgICB0eXBlOiBGdW5jdGlvbiwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQodmFsdWUsIGl0ZW0pIHsKICAgICAgICByZXR1cm4gX3R5cGVvZih2YWx1ZSkgPT09ICdvYmplY3QnID8gaXRlbS51cmwgOiB2YWx1ZTsKICAgICAgfQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGluZGV4OiB1bmRlZmluZWQsCiAgICAgIGxpc3Q6IFtdCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIHZhbHVlOiBmdW5jdGlvbiB2YWx1ZSh2YWwpIHsKICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlJywgdmFsKTsKICAgICAgaWYgKHZhbCA9PT0gdGhpcy5lbWl0VmFsdWUpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgdGhpcy5pbml0VmFsdWUodmFsKTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmVtaXRWYWx1ZSA9IHRoaXMudmFsdWU7CiAgICB0aGlzLmluaXRWYWx1ZSh0aGlzLnZhbHVlKTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBfdXJsTGlzdDogZnVuY3Rpb24gX3VybExpc3QoKSB7CiAgICAgIHZhciB1cmxMaXN0ID0gW107CiAgICAgIGlmICh0aGlzLmxpc3QpIHsKICAgICAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIodGhpcy5saXN0KSwKICAgICAgICAgIF9zdGVwOwogICAgICAgIHRyeSB7CiAgICAgICAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOykgewogICAgICAgICAgICB2YXIgaXRlbSA9IF9zdGVwLnZhbHVlOwogICAgICAgICAgICB1cmxMaXN0LnB1c2goaXRlbS51cmwpOwogICAgICAgICAgfQogICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgICB9CiAgICAgIH0KICAgICAgcmV0dXJuIHVybExpc3Q7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0VmFsdWU6IGZ1bmN0aW9uIGluaXRWYWx1ZSh2YWx1ZSkgewogICAgICB2YXIgbGlzdCA9IFtdOwogICAgICBpZiAodmFsdWUgPT0gbnVsbCB8fCB2YWx1ZSA9PT0gJycpIHsKICAgICAgICB0aGlzLiRzZXQodGhpcywgJ2xpc3QnLCBsaXN0KTsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHsKICAgICAgICBsaXN0LnB1c2goewogICAgICAgICAgdXJsOiB0aGlzLmJ1aWxkVXJsKHZhbHVlKSwKICAgICAgICAgIHZhbHVlOiB2YWx1ZSwKICAgICAgICAgIHN0YXR1czogJ2RvbmUnCiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdmFyIF9pdGVyYXRvcjIgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcih2YWx1ZSksCiAgICAgICAgICBfc3RlcDI7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIGZvciAoX2l0ZXJhdG9yMi5zKCk7ICEoX3N0ZXAyID0gX2l0ZXJhdG9yMi5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgIHZhciBpdGVtID0gX3N0ZXAyLnZhbHVlOwogICAgICAgICAgICBsaXN0LnB1c2goewogICAgICAgICAgICAgIHVybDogdGhpcy5idWlsZFVybChpdGVtKSwKICAgICAgICAgICAgICB2YWx1ZTogaXRlbSwKICAgICAgICAgICAgICBzdGF0dXM6ICdkb25lJwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgIF9pdGVyYXRvcjIuZShlcnIpOwogICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICBfaXRlcmF0b3IyLmYoKTsKICAgICAgICB9CiAgICAgIH0KICAgICAgdGhpcy4kc2V0KHRoaXMsICdsaXN0JywgbGlzdCk7CiAgICB9LAogICAgYWRkTmV3SW1hZ2U6IGZ1bmN0aW9uIGFkZE5ld0ltYWdlKCkgewogICAgICBpZiAodGhpcy5kaXNhYmxlZCkgewogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICB0aGlzLmluZGV4ID0gdW5kZWZpbmVkOwogICAgICB0aGlzLiRyZWZzLmNyb3BwZXIuY2xlYXIoKTsKICAgICAgdGhpcy4kcmVmcy5jcm9wcGVyLm9wZW4oKTsKICAgIH0sCiAgICByZW1vdmVJbWFnZTogZnVuY3Rpb24gcmVtb3ZlSW1hZ2UoaW5kZXgsIGl0ZW0pIHsKICAgICAgdGhpcy5saXN0LnNwbGljZShpbmRleCwgMSk7CiAgICAgIHRoaXMuZW1pdCgpOwogICAgfSwKICAgIGlzSGFzVXBsb2FkaW5nSXRlbTogZnVuY3Rpb24gaXNIYXNVcGxvYWRpbmdJdGVtKCkgewogICAgICB2YXIgZmlsZUxpc3QgPSB0aGlzLmxpc3Q7CiAgICAgIGlmIChmaWxlTGlzdCAmJiBmaWxlTGlzdC5sZW5ndGggPiAwKSB7CiAgICAgICAgdmFyIF9pdGVyYXRvcjMgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihmaWxlTGlzdCksCiAgICAgICAgICBfc3RlcDM7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIGZvciAoX2l0ZXJhdG9yMy5zKCk7ICEoX3N0ZXAzID0gX2l0ZXJhdG9yMy5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgIHZhciBpdGVtID0gX3N0ZXAzLnZhbHVlOwogICAgICAgICAgICBpZiAoaXRlbS5zdGF0dXMgPT09ICd1cGxvYWRpbmcnKSB7CiAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgIF9pdGVyYXRvcjMuZShlcnIpOwogICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICBfaXRlcmF0b3IzLmYoKTsKICAgICAgICB9CiAgICAgIH0KICAgICAgcmV0dXJuIGZhbHNlOwogICAgfSwKICAgIGNyb3BDb21wbGV0ZTogZnVuY3Rpb24gY3JvcENvbXBsZXRlKHJldCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBibG9iLCBkYXRhVXJsLCBmaWxlLCBpdGVtLCBvblByb2dyZXNzLCBvbkVycm9yLCBvcHRpb24sIHVwbG9hZDsKICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBibG9iID0gcmV0LmJsb2I7CiAgICAgICAgICAgICAgZGF0YVVybCA9IHJldC5kYXRhVXJsOwogICAgICAgICAgICAgIGZpbGUgPSByZXQuZmlsZTsgLy8g5byA5aeL5LiK5LygCiAgICAgICAgICAgICAgaXRlbSA9IHsKICAgICAgICAgICAgICAgIHVybDogdW5kZWZpbmVkLAogICAgICAgICAgICAgICAgZGF0YVVybDogZGF0YVVybCwKICAgICAgICAgICAgICAgIHN0YXR1czogJ3VwbG9hZGluZycsCiAgICAgICAgICAgICAgICBwcm9ncmVzczogMAogICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgb25Qcm9ncmVzcyA9IGZ1bmN0aW9uIG9uUHJvZ3Jlc3MoZSkgewogICAgICAgICAgICAgICAgaXRlbS5wcm9ncmVzcyA9IGUucGVyY2VudDsKICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgIG9uRXJyb3IgPSBmdW5jdGlvbiBvbkVycm9yKGUpIHsKICAgICAgICAgICAgICAgIGl0ZW0uc3RhdHVzID0gJ2Vycm9yJzsKICAgICAgICAgICAgICAgIGl0ZW0ubWVzc2FnZSA9ICfmlofku7bkuIrkvKDlh7rplJk6JyArIGUubWVzc2FnZTsKICAgICAgICAgICAgICAgIGxvZy5kZWJ1ZyhlKTsKICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgIGxvZy5kZWJ1ZygnYmxvYjonLCBibG9iKTsKICAgICAgICAgICAgICBvcHRpb24gPSB7CiAgICAgICAgICAgICAgICBmaWxlOiBibG9iLAogICAgICAgICAgICAgICAgZmlsZU5hbWU6IGZpbGUubmFtZSwKICAgICAgICAgICAgICAgIG9uUHJvZ3Jlc3M6IG9uUHJvZ3Jlc3MsCiAgICAgICAgICAgICAgICBvbkVycm9yOiBvbkVycm9yCiAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICBfdGhpcy5saXN0LnB1c2goaXRlbSk7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDExOwogICAgICAgICAgICAgIHJldHVybiBfdGhpcy5kb1VwbG9hZChvcHRpb24pOwogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIHVwbG9hZCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgaXRlbS51cmwgPSBfdGhpcy5idWlsZFVybCh1cGxvYWQudXJsKTsKICAgICAgICAgICAgICBpdGVtLnZhbHVlID0gdXBsb2FkLnVybDsKICAgICAgICAgICAgICBpdGVtLnN0YXR1cyA9ICdkb25lJzsKICAgICAgICAgICAgICBfdGhpcy5lbWl0KCk7CiAgICAgICAgICAgIGNhc2UgMTY6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZG9VcGxvYWQ6IGZ1bmN0aW9uIGRvVXBsb2FkKG9wdGlvbikgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKICAgICAgb3B0aW9uLmNvbmZpZyA9IHRoaXMudXBsb2FkZXI7CiAgICAgIHJldHVybiB0aGlzLmdldFVwbG9hZGVyKCkudGhlbihmdW5jdGlvbiAodXBsb2FkZXIpIHsKICAgICAgICByZXR1cm4gdXBsb2FkZXIudXBsb2FkKG9wdGlvbikudGhlbihmdW5jdGlvbiAocmV0KSB7CiAgICAgICAgICBpZiAoX3RoaXMyLnN1ZmZpeCAhPSBudWxsKSB7CiAgICAgICAgICAgIHJldC51cmwgKz0gX3RoaXMyLnN1ZmZpeDsKICAgICAgICAgIH0KICAgICAgICAgIHJldHVybiByZXQ7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIGdldFVwbG9hZGVyOiBmdW5jdGlvbiBnZXRVcGxvYWRlcigpIHsKICAgICAgdmFyIHR5cGUgPSB0aGlzLnR5cGU7CiAgICAgIGlmICh0aGlzLnVwbG9hZGVyICE9IG51bGwgJiYgdGhpcy51cGxvYWRlci50eXBlICE9IG51bGwpIHsKICAgICAgICB0eXBlID0gdGhpcy51cGxvYWRlci50eXBlOwogICAgICB9CiAgICAgIHJldHVybiBEMnBVcGxvYWRlci5nZXRVcGxvYWRlcih0eXBlKTsKICAgIH0sCiAgICBlbWl0OiBmdW5jdGlvbiBlbWl0KCkgewogICAgICB2YXIgbGlzdCA9IFtdOwogICAgICB2YXIgX2l0ZXJhdG9yNCA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHRoaXMubGlzdCksCiAgICAgICAgX3N0ZXA0OwogICAgICB0cnkgewogICAgICAgIGZvciAoX2l0ZXJhdG9yNC5zKCk7ICEoX3N0ZXA0ID0gX2l0ZXJhdG9yNC5uKCkpLmRvbmU7KSB7CiAgICAgICAgICB2YXIgX2l0ZW0gPSBfc3RlcDQudmFsdWU7CiAgICAgICAgICBpZiAoX2l0ZW0uc3RhdHVzICE9IG51bGwgJiYgX2l0ZW0uc3RhdHVzICE9PSAnZG9uZScpIHsKICAgICAgICAgICAgLy8g5YWo6YOo5LiK5Lyg5a6M5YaN5Y+R6YCa55+lCiAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgIH0KICAgICAgICAgIGlmICh0eXBlb2YgX2l0ZW0gPT09ICdzdHJpbmcnKSB7CiAgICAgICAgICAgIGxpc3QucHVzaChfaXRlbSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBsaXN0LnB1c2goX2l0ZW0udmFsdWUpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yNC5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yNC5mKCk7CiAgICAgIH0KICAgICAgdmFyIHJldCA9IGxpc3Q7CiAgICAgIGlmICh0aGlzLmxpbWl0ID09PSAxKSB7CiAgICAgICAgcmV0ID0gbGlzdCAmJiBsaXN0Lmxlbmd0aCA+IDAgPyBsaXN0WzBdIDogdW5kZWZpbmVkOwogICAgICB9CiAgICAgIHRoaXMuZW1pdFZhbHVlID0gcmV0OwogICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIHJldCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"mappings":";;;;;;;;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;EACAA;EACAC;EACAC;IACAC;EACA;EACAC;IACA;IACAC;MACAC;IACA;IACA;IACAA;MACAA;IACA;IACA;IACAC;MACAD;IACA;IACA;IACAE;IACA;IACAC;MACAH;IACA;IACA;IACAI;MACAJ;MACAK;IACA;IACA;IACAC;MACAN;MACAK;IACA;IACA;IACAE;MACAP;MACAK;IACA;IACA;IACAG;MACAR;MACAK;IACA;IACA;IACAI;MACAT;IACA;IACA;IACAU;MACAV;IACA;IACA;IACAW;MACAX;MACAK;QAAA;MAAA;IACA;EAEA;EACAO;IACA;MACAC;MACAC;IACA;EACA;EACAC;IACAhB;MACA;MACA;QACA;MACA;MACA;IACA;EACA;EACAiB;IACA;IACA;EACA;EACAC;IACAC;MACA;MACA;QAAA,2CACA;UAAA;QAAA;UAAA;YAAA;YACAC;UACA;QAAA;UAAA;QAAA;UAAA;QAAA;MACA;MACA;IACA;EACA;EACAC;IACAC;MACA;MACA;QACA;QACA;MACA;MACA;QACAP;UAAAQ;UAAAvB;UAAAwB;QAAA;MACA;QAAA,4CACAxB;UAAA;QAAA;UAAA;YAAA;YACAe;cAAAQ;cAAAvB;cAAAwB;YAAA;UACA;QAAA;UAAA;QAAA;UAAA;QAAA;MACA;MACA;IACA;IACAC;MACA;QACA;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;MACA;QAAA,4CACAC;UAAA;QAAA;UAAA;YAAA;YACA;cACA;YACA;UACA;QAAA;UAAA;QAAA;UAAA;QAAA;MACA;MACA;IACA;IACAC;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cACAC;cACAC;cACAC,iBACA;cACAC;gBACAV;gBACAQ;gBACAP;gBACAU;cACA;cACAC;gBACAF;cACA;cACAG;gBACAH;gBACAA;gBACAI;cACA;cACAA;cACAC;gBACAN;gBACAO;gBACAJ;gBACAC;cACA;cACA;cAAA;cAAA,OACA;YAAA;cAAAI;cACAP;cACAA;cACAA;cACA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IACA;IACAQ;MAAA;MACAH;MACA;QACA;UACA;YACAI;UACA;UACA;QACA;MACA;IACA;IACAC;MACA;MACA;QACA1C;MACA;MACA;IACA;IACA2C;MACA;MAAA,4CACA;QAAA;MAAA;QAAA;UAAA;UACA;YACA;YACA;UACA;UACA;YACA7B;UACA;YACAA;UACA;QACA;MAAA;QAAA;MAAA;QAAA;MAAA;MACA;MACA;QACA2B;MACA;MACA;MACA;IACA;EAEA;AACA","names":["name","mixins","components","D2pCropper","props","value","type","uploadTip","title","cropperHeight","dialogWidth","default","maxSize","limit","accept","cropper","uploader","buildUrl","data","index","list","watch","created","computed","_urlList","urlList","methods","initValue","url","status","addNewImage","removeImage","isHasUploadingItem","fileList","cropComplete","blob","dataUrl","file","item","progress","onProgress","onError","log","option","fileName","upload","doUpload","ret","getUploader","emit"],"sourceRoot":"node_modules/d2p-extends/src/file-uploader/lib","sources":["cropper-uploader.vue"],"sourcesContent":["<template>\r\n  <div class=\"d2p-cropper-uploader\"  :class=\"{'is-disabled':disabled}\" >\r\n    <div class=\"image-list\">\r\n      <div class=\"image-item\" v-for=\"(item,index) in list\" :key=\"index\">\r\n        <el-image class=\"image\"\r\n          :src=\"item.dataUrl?item.dataUrl:item.url\"\r\n          :data-src=\"item.url\"\r\n          :preview-src-list=\"_urlList\"\r\n          fit=\"contain\" >\r\n          <div slot=\"placeholder\" class=\"image-slot\">\r\n            <img src=\"./loading-spin.svg\">\r\n          </div>\r\n        </el-image>\r\n        <div class=\"delete\" v-if=\"!disabled\"><i class=\"el-icon-delete\" @click=\"removeImage(index,item)\"></i></div>\r\n        <div class=\"status-uploading\" v-if=\"item.status==='uploading'\">\r\n          <el-progress type=\"circle\" :percentage=\"item.progress\" :width=\"70\"/>\r\n        </div>\r\n        <div class=\"status-done\" v-else-if=\"item.status==='done'\">\r\n          <i class=\"el-icon-upload-success el-icon-check\"></i>\r\n        </div>\r\n      </div>\r\n      <div v-if=\"limit <=0 || limit>list.length\" class=\"image-item image-plus\" @click=\"addNewImage\">\r\n        <i class=\"el-icon-plus cropper-uploader-icon\"></i>\r\n      </div>\r\n    </div>\r\n    <d2p-cropper ref=\"cropper\"\r\n                        :title=\"title\"\r\n                        :cropperHeight=\"cropperHeight\"\r\n                        :dialogWidth=\"dialogWidth\"\r\n                        :accept=\"accept\"\r\n                        :uploadTip=\"uploadTip\"\r\n                        :maxSize=\"maxSize\"\r\n                        :cropper=\"cropper\"\r\n                        output=\"all\"\r\n                        @done=\"cropComplete\"\r\n    ></d2p-cropper>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport D2pCropper from './cropper'\r\nimport D2pUploader from '../../uploader'\r\nimport { d2CrudPlus } from '../../utils/d2-crud-plus'\r\nimport log from '../../utils/util.log'\r\n/**\r\n * 图片裁剪上传组件,封装了d2p-cropper, d2p-cropper内部封装了cropperjs\r\n */\r\n\r\nexport default {\r\n  name: 'd2p-cropper-uploader',\r\n  mixins: [d2CrudPlus.inputBase],\r\n  components: {\r\n    D2pCropper\r\n  },\r\n  props: {\r\n    // 初始图片url\r\n    value: {\r\n      type: [String, Array]\r\n    },\r\n    // 上传后端类型，[form, cos, qiniu , alioss]\r\n    type: {\r\n      type: String\r\n    },\r\n    // 上传提示\r\n    uploadTip: {\r\n      type: String\r\n    },\r\n    // 对话框标题\r\n    title: String,\r\n    // cropper的高度，默认为浏览器可视窗口高度的40%，最小270\r\n    cropperHeight: {\r\n      type: [String, Number]\r\n    },\r\n    // 对话框宽度，默认50%\r\n    dialogWidth: {\r\n      type: [String, Number],\r\n      default: '50%'\r\n    },\r\n    // 图片大小限制，单位MB\r\n    maxSize: {\r\n      type: Number,\r\n      default: 5\r\n    },\r\n    // 图片数量限制,0为不限制\r\n    limit: {\r\n      type: Number,\r\n      default: 1\r\n    },\r\n    // 可接收的文件后缀\r\n    accept: {\r\n      type: String,\r\n      default: '.jpg, .jpeg, .png, .gif, .webp'\r\n    },\r\n    // [cropperjs的参数](https://github.com/fengyuanchen/cropperjs)\r\n    cropper: {\r\n      type: Object\r\n    },\r\n    // 上传参数，会临时覆盖全局上传配置参数[d2p-uploader](/guide/extends/uploader.html)\r\n    uploader: {\r\n      type: Object\r\n    },\r\n    // 构建下载url方法,不影响提交的value\r\n    buildUrl: {\r\n      type: Function,\r\n      default: function (value, item) { return (typeof value === 'object') ? item.url : value }\r\n    }\r\n\r\n  },\r\n  data () {\r\n    return {\r\n      index: undefined,\r\n      list: []\r\n    }\r\n  },\r\n  watch: {\r\n    value (val) {\r\n      this.$emit('change', val)\r\n      if (val === this.emitValue) {\r\n        return\r\n      }\r\n      this.initValue(val)\r\n    }\r\n  },\r\n  created () {\r\n    this.emitValue = this.value\r\n    this.initValue(this.value)\r\n  },\r\n  computed: {\r\n    _urlList () {\r\n      const urlList = []\r\n      if (this.list) {\r\n        for (const item of this.list) {\r\n          urlList.push(item.url)\r\n        }\r\n      }\r\n      return urlList\r\n    }\r\n  },\r\n  methods: {\r\n    initValue (value) {\r\n      const list = []\r\n      if (value == null || value === '') {\r\n        this.$set(this, 'list', list)\r\n        return\r\n      }\r\n      if (typeof (value) === 'string') {\r\n        list.push({ url: this.buildUrl(value), value: value, status: 'done' })\r\n      } else {\r\n        for (const item of value) {\r\n          list.push({ url: this.buildUrl(item), value: item, status: 'done' })\r\n        }\r\n      }\r\n      this.$set(this, 'list', list)\r\n    },\r\n    addNewImage () {\r\n      if (this.disabled) {\r\n        return\r\n      }\r\n      this.index = undefined\r\n      this.$refs.cropper.clear()\r\n      this.$refs.cropper.open()\r\n    },\r\n    removeImage (index, item) {\r\n      this.list.splice(index, 1)\r\n      this.emit()\r\n    },\r\n    isHasUploadingItem () {\r\n      const fileList = this.list\r\n      if (fileList && fileList.length > 0) {\r\n        for (const item of fileList) {\r\n          if (item.status === 'uploading') {\r\n            return true\r\n          }\r\n        }\r\n      }\r\n      return false\r\n    },\r\n    async cropComplete (ret) {\r\n      const blob = ret.blob\r\n      const dataUrl = ret.dataUrl\r\n      const file = ret.file\r\n      // 开始上传\r\n      const item = {\r\n        url: undefined,\r\n        dataUrl: dataUrl,\r\n        status: 'uploading',\r\n        progress: 0\r\n      }\r\n      const onProgress = (e) => {\r\n        item.progress = e.percent\r\n      }\r\n      const onError = (e) => {\r\n        item.status = 'error'\r\n        item.message = '文件上传出错:' + e.message\r\n        log.debug(e)\r\n      }\r\n      log.debug('blob:', blob)\r\n      const option = {\r\n        file: blob,\r\n        fileName: file.name,\r\n        onProgress,\r\n        onError\r\n      }\r\n      this.list.push(item)\r\n      const upload = await this.doUpload(option)\r\n      item.url = this.buildUrl(upload.url)\r\n      item.value = upload.url\r\n      item.status = 'done'\r\n      this.emit()\r\n    },\r\n    doUpload (option) {\r\n      option.config = this.uploader\r\n      return this.getUploader().then(uploader => {\r\n        return uploader.upload(option).then(ret => {\r\n          if (this.suffix != null) {\r\n            ret.url += this.suffix\r\n          }\r\n          return ret\r\n        })\r\n      })\r\n    },\r\n    getUploader () {\r\n      let type = this.type\r\n      if (this.uploader != null && this.uploader.type != null) {\r\n        type = this.uploader.type\r\n      }\r\n      return D2pUploader.getUploader(type)\r\n    },\r\n    emit () {\r\n      const list = []\r\n      for (const item of this.list) {\r\n        if (item.status != null && item.status !== 'done') {\r\n          // 全部上传完再发通知\r\n          return\r\n        }\r\n        if (typeof (item) === 'string') {\r\n          list.push(item)\r\n        } else {\r\n          list.push(item.value)\r\n        }\r\n      }\r\n      let ret = list\r\n      if (this.limit === 1) {\r\n        ret = ((list && list.length > 0) ? list[0] : undefined)\r\n      }\r\n      this.emitValue = ret\r\n      this.$emit('input', ret)\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" >\r\n  .d2p-cropper-uploader{\r\n    .el-image-viewer__close{color:#fff}\r\n    &.is-disabled {\r\n      .image-list{\r\n        .image-item{\r\n          cursor: not-allowed;\r\n        }\r\n      }\r\n      i{cursor: not-allowed}\r\n    }\r\n    .image-list{\r\n      display: flex;\r\n      justify-content: left;\r\n      align-items: center;\r\n      flex-wrap: wrap;\r\n      .image-item{\r\n        width: 100px;\r\n        height: 100px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        background-color: #fbfdff;\r\n        border: 1px solid #c0ccda;\r\n        border-radius: 6px;\r\n        position: relative;\r\n        margin-right: 8px;\r\n        margin-bottom: 8px;\r\n        cursor: pointer;\r\n        overflow: hidden;\r\n        &.image-plus{\r\n          border: 1px dashed #c0ccda;\r\n        }\r\n        .cropper-uploader-icon {\r\n          vertical-align: top;\r\n          font-size: 28px;\r\n          color: #8c939d;\r\n        }\r\n        .image{\r\n          width: 100px;\r\n          height: 100px;\r\n        }\r\n\r\n        .delete{\r\n          border-radius: 6px;\r\n          position: absolute;\r\n          width: 100%;\r\n          height: 100%;\r\n          left: 0;\r\n          top: 0;\r\n          cursor: default;\r\n          text-align: center;\r\n          color: #fff;\r\n          opacity: 0;\r\n          font-size: 20px;\r\n          background-color: rgba(0,0,0,.9);\r\n          -webkit-transition: opacity .3s;\r\n          transition: opacity .3s;\r\n          &:hover{\r\n            opacity: 0.9;\r\n          }\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          i{\r\n            cursor: pointer;\r\n          }\r\n        }\r\n        .status-uploading{\r\n          border-radius: 6px;\r\n          position: absolute;\r\n          width: 100%;\r\n          height: 100%;\r\n          left: 0;\r\n          top: 0;\r\n          cursor: default;\r\n          text-align: center;\r\n          color: #fff;\r\n          opacity: 1;\r\n          font-size: 20px;\r\n          background-color: rgba(0, 0, 0, 0.5);\r\n          -webkit-transition: opacity .3s;\r\n          transition: opacity .3s;\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          .el-progress{\r\n            width: 70px;\r\n            height: 70px;\r\n            .el-progress__text {\r\n              color:#fff;\r\n            }\r\n          }\r\n\r\n        }\r\n        .status-done{\r\n          position: absolute;\r\n          right: -15px;\r\n          top: -6px;\r\n          width: 40px;\r\n          height: 24px;\r\n          background: #13ce66;\r\n          text-align: center;\r\n          -webkit-transform: rotate(45deg);\r\n          transform: rotate(45deg);\r\n          -webkit-box-shadow: 0 0 1pc 1px rgba(0,0,0,.2);\r\n          box-shadow: 0 0 1pc 1px rgba(0,0,0,.2);\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          i{\r\n            font-size: 12px;\r\n            margin-top: 11px;\r\n            color: #fff;\r\n            -webkit-transform: rotate(-45deg);\r\n            transform: rotate(-45deg);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n</style>\r\n"]}]}