{"remainingRequest":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/babel-loader/lib/index.js!/Users/raviailani/Downloads/django-vue-admin/web/node_modules/eslint-loader/index.js??ref--14-0!/Users/raviailani/Downloads/django-vue-admin/web/src/store/modules/d2admin/modules/page.js","dependencies":[{"path":"/Users/raviailani/Downloads/django-vue-admin/web/src/store/modules/d2admin/modules/page.js","mtime":1674694301488},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/babel.config.js","mtime":1674694301461},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/cache-loader/dist/cjs.js","mtime":1674694548948},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/babel-loader/lib/index.js","mtime":1674694549283},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/eslint-loader/index.js","mtime":1674694549000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["cloneDeep","uniq","get","router","setting","isKeepAlive","data","namespaced","state","pool","opened","openedLoaded","current","keepAlive","actions","isLoaded","Promise","resolve","timer","setInterval","clearInterval","openedLoad","commit","dispatch","dbName","path","defaultValue","page","user","root","value","valid","map","fullPath","push","find","item","name","Object","assign","filter","index","opened2db","openedUpdate","params","query","splice","openedSort","oldIndex","newIndex","add","tag","newTag","open","meta","pageOpendIndex","pageOpend","same","t","close","tagName","newPage","isCurrent","len","length","i","findIndex","routerObj","closeLeft","pageSelect","pageAim","currentIndex","forEach","app","$route","closeRight","closeOther","closeAll","mutations","keepAliveRefresh","e","keepAliveRemove","list","keepAlivePush","keep","keepAliveClean","currentSet","init","routes","route","children","hidden"],"sources":["/Users/raviailani/Downloads/django-vue-admin/web/src/store/modules/d2admin/modules/page.js"],"sourcesContent":["import { cloneDeep, uniq, get } from 'lodash'\nimport router from '@/router'\nimport setting from '@/setting.js'\n\n// 判定是否需要缓存\nconst isKeepAlive = data => get(data, 'meta.cache', false)\n\nexport default {\n  namespaced: true,\n  state: {\n    // 可以在多页 tab 模式下显示的页面\n    pool: [],\n    // 当前显示的多页面列表\n    opened: get(setting, 'page.opened', []),\n    // 已经加载多标签页数据 https://github.com/d2-projects/d2-admin/issues/201\n    openedLoaded: false,\n    // 当前页面\n    current: '',\n    // 需要缓存的页面 name\n    keepAlive: []\n  },\n  actions: {\n    /**\n     * @description 确认已经加载多标签页数据 https://github.com/d2-projects/d2-admin/issues/201\n     * @param {Object} context\n     */\n    isLoaded ({ state }) {\n      if (state.openedLoaded) return Promise.resolve()\n      return new Promise(resolve => {\n        const timer = setInterval(() => {\n          if (state.openedLoaded) resolve(clearInterval(timer))\n        }, 10)\n      })\n    },\n    /**\n     * @class opened\n     * @description 从持久化数据载入标签页列表\n     * @param {Object} context\n     */\n    async openedLoad ({ state, commit, dispatch }) {\n      // store 赋值\n      const value = await dispatch('d2admin/db/get', {\n        dbName: 'sys',\n        path: 'page.opened',\n        defaultValue: setting.page.opened,\n        user: true\n      }, { root: true })\n      // 在处理函数中进行数据优化 过滤掉现在已经失效的页签或者已经改变了信息的页签\n      // 以 fullPath 字段为准\n      // 如果页面过多的话可能需要优化算法\n      // valid 有效列表 1, 1, 0, 1 => 有效, 有效, 失效, 有效\n      const valid = []\n      // 处理数据\n      state.opened = value\n        .map(opened => {\n          // 忽略控制台\n          if (opened.fullPath === '/index') {\n            valid.push(1)\n            return opened\n          }\n          // 尝试在所有的支持多标签页的页面里找到 name 匹配的页面\n          const find = state.pool.find(item => item.name === opened.name)\n          // 记录有效或无效信息\n          valid.push(find ? 1 : 0)\n          // 返回合并后的数据 新的覆盖旧的\n          // 新的数据中一般不会携带 params 和 query, 所以旧的参数会留存\n          return Object.assign({}, opened, find)\n        })\n        .filter((opened, index) => valid[index] === 1)\n      // 标记已经加载多标签页数据 https://github.com/d2-projects/d2-admin/issues/201\n      state.openedLoaded = true\n      // 根据 opened 数据生成缓存设置\n      commit('keepAliveRefresh')\n    },\n    /**\n     * 将 opened 属性赋值并持久化 在这之前请先确保已经更新了 state.opened\n     * @param {Object} context\n     */\n    async opened2db ({ state, dispatch }) {\n      // 设置数据\n      dispatch('d2admin/db/set', {\n        dbName: 'sys',\n        path: 'page.opened',\n        value: state.opened,\n        user: true\n      }, { root: true })\n    },\n    /**\n     * @class opened\n     * @description 更新页面列表上的某一项\n     * @param {Object} context\n     * @param {Object} payload { index, params, query, fullPath } 路由信息\n     */\n    async openedUpdate ({ state, commit, dispatch }, { index, params, query, fullPath }) {\n      // 更新页面列表某一项\n      const page = state.opened[index]\n      page.params = params || page.params\n      page.query = query || page.query\n      page.fullPath = fullPath || page.fullPath\n      state.opened.splice(index, 1, page)\n      // 持久化\n      await dispatch('opened2db')\n    },\n    /**\n     * @class opened\n     * @description 重排页面列表上的某一项\n     * @param {Object} context\n     * @param {Object} payload { oldIndex, newIndex } 位置信息\n     */\n    async openedSort ({ state, commit, dispatch }, { oldIndex, newIndex }) {\n      // 重排页面列表某一项\n      const page = state.opened[oldIndex]\n      state.opened.splice(oldIndex, 1)\n      state.opened.splice(newIndex, 0, page)\n      // 持久化\n      await dispatch('opened2db')\n    },\n    /**\n     * @class opened\n     * @description 新增一个 tag (打开一个页面)\n     * @param {Object} context\n     * @param {Object} payload new tag info\n     */\n    async add ({ state, commit, dispatch }, { tag, params, query, fullPath }) {\n      // 设置新的 tag 在新打开一个以前没打开过的页面时使用\n      const newTag = tag\n      newTag.params = params || newTag.params\n      newTag.query = query || newTag.query\n      newTag.fullPath = fullPath || newTag.fullPath\n      // 添加进当前显示的页面数组\n      state.opened.push(newTag)\n      // 如果这个页面需要缓存 将其添加到缓存设置\n      if (isKeepAlive(newTag)) commit('keepAlivePush', tag.name)\n      // 持久化\n      await dispatch('opened2db')\n    },\n    /**\n     * @class current\n     * @description 打开一个新的页面\n     * @param {Object} context\n     * @param {Object} payload 从路由钩子的 to 对象上获取 { name, params, query, fullPath, meta } 路由信息\n     */\n    async open ({ state, commit, dispatch }, { name, params, query, fullPath, meta }) {\n      // 已经打开的页面\n      const opened = state.opened\n      // 判断此页面是否已经打开 并且记录位置\n      let pageOpendIndex = 0\n      const pageOpend = opened.find((page, index) => {\n        const same = page.fullPath === fullPath\n        pageOpendIndex = same ? index : pageOpendIndex\n        return same\n      })\n      if (pageOpend) {\n        // 页面以前打开过\n        await dispatch('openedUpdate', {\n          index: pageOpendIndex,\n          params,\n          query,\n          fullPath\n        })\n      } else {\n        // 页面以前没有打开过\n        const page = state.pool.find(t => t.name === name)\n        // 如果这里没有找到 page 代表这个路由虽然在框架内 但是不参与标签页显示\n        if (page) {\n          await dispatch('add', {\n            tag: Object.assign({}, page),\n            params,\n            query,\n            fullPath\n          })\n        }\n      }\n      // 如果这个页面需要缓存 将其添加到缓存设置\n      if (isKeepAlive({ meta })) commit('keepAlivePush', name)\n      // 设置当前的页面\n      commit('currentSet', fullPath)\n    },\n    /**\n     * @class opened\n     * @description 关闭一个 tag (关闭一个页面)\n     * @param {Object} context\n     * @param {Object} payload { tagName: 要关闭的标签名字 }\n     */\n    async close ({ state, commit, dispatch }, { tagName }) {\n      // 预定下个新页面\n      let newPage = {}\n      const isCurrent = state.current === tagName\n      // 如果关闭的页面就是当前显示的页面\n      if (isCurrent) {\n        // 去找一个新的页面\n        const len = state.opened.length\n        for (let i = 0; i < len; i++) {\n          if (state.opened[i].fullPath === tagName) {\n            newPage = i < len - 1 ? state.opened[i + 1] : state.opened[i - 1]\n            break\n          }\n        }\n      }\n      // 找到这个页面在已经打开的数据里是第几个\n      const index = state.opened.findIndex(page => page.fullPath === tagName)\n      if (index >= 0) {\n        // 如果这个页面是缓存的页面 将其在缓存设置中删除\n        commit('keepAliveRemove', state.opened[index].name)\n        // 更新数据 删除关闭的页面\n        state.opened.splice(index, 1)\n      }\n      // 持久化\n      await dispatch('opened2db')\n      // 决定最后停留的页面\n      if (isCurrent) {\n        const { name = 'index', params = {}, query = {} } = newPage\n        const routerObj = { name, params, query }\n        await router.push(routerObj)\n      }\n    },\n    /**\n     * @class opened\n     * @description 关闭当前标签左边的标签\n     * @param {Object} context\n     * @param {Object} payload { pageSelect: 当前选中的tagName }\n     */\n    async closeLeft ({ state, commit, dispatch }, { pageSelect } = {}) {\n      const pageAim = pageSelect || state.current\n      let currentIndex = 0\n      state.opened.forEach((page, index) => {\n        if (page.fullPath === pageAim) currentIndex = index\n      })\n      if (currentIndex > 0) {\n        // 删除打开的页面 并在缓存设置中删除\n        for (let i = state.opened.length - 1; i >= 0; i--) {\n          if (state.opened[i].name === 'index' || i >= currentIndex) {\n            continue\n          }\n\n          commit('keepAliveRemove', state.opened[i].name)\n          state.opened.splice(i, 1)\n        }\n      }\n      // 持久化\n      await dispatch('opened2db')\n      // 设置当前的页面\n      state.current = pageAim\n      if (router.app.$route.fullPath !== pageAim) await router.push(pageAim)\n    },\n    /**\n     * @class opened\n     * @description 关闭当前标签右边的标签\n     * @param {Object} context\n     * @param {Object} payload { pageSelect: 当前选中的tagName }\n     */\n    async closeRight ({ state, commit, dispatch }, { pageSelect } = {}) {\n      const pageAim = pageSelect || state.current\n      let currentIndex = 0\n      state.opened.forEach((page, index) => {\n        if (page.fullPath === pageAim) currentIndex = index\n      })\n      // 删除打开的页面 并在缓存设置中删除\n      for (let i = state.opened.length - 1; i >= 0; i--) {\n        if (state.opened[i].name === 'index' || currentIndex >= i) {\n          continue\n        }\n\n        commit('keepAliveRemove', state.opened[i].name)\n        state.opened.splice(i, 1)\n      }\n      // 持久化\n      await dispatch('opened2db')\n      // 设置当前的页面\n      state.current = pageAim\n      if (router.app.$route.fullPath !== pageAim) await router.push(pageAim)\n    },\n    /**\n     * @class opened\n     * @description 关闭当前激活之外的 tag\n     * @param {Object} context\n     * @param {Object} payload { pageSelect: 当前选中的tagName }\n     */\n    async closeOther ({ state, commit, dispatch }, { pageSelect } = {}) {\n      const pageAim = pageSelect || state.current\n      let currentIndex = 0\n      state.opened.forEach((page, index) => {\n        if (page.fullPath === pageAim) currentIndex = index\n      })\n      // 删除打开的页面数据 并更新缓存设置\n      for (let i = state.opened.length - 1; i >= 0; i--) {\n        if (state.opened[i].name === 'index' || currentIndex === i) {\n          continue\n        }\n\n        commit('keepAliveRemove', state.opened[i].name)\n        state.opened.splice(i, 1)\n      }\n      // 持久化\n      await dispatch('opened2db')\n      // 设置新的页面\n      state.current = pageAim\n      if (router.app.$route.fullPath !== pageAim) await router.push(pageAim)\n    },\n    /**\n     * @class opened\n     * @description 关闭所有 tag\n     * @param {Object} context\n     */\n    async closeAll ({ state, commit, dispatch }) {\n      // 删除打开的页面 并在缓存设置中删除\n      for (let i = state.opened.length - 1; i >= 0; i--) {\n        if (state.opened[i].name === 'index') {\n          continue\n        }\n\n        commit('keepAliveRemove', state.opened[i].name)\n        state.opened.splice(i, 1)\n      }\n      // 持久化\n      await dispatch('opened2db')\n      // 关闭所有的标签页后需要判断一次现在是不是在首页\n      if (router.app.$route.name !== 'index') {\n        await router.push({ name: 'index' })\n      }\n    }\n  },\n  mutations: {\n    /**\n     * @class keepAlive\n     * @description 从已经打开的页面记录中更新需要缓存的页面记录\n     * @param {Object} state state\n     */\n    keepAliveRefresh (state) {\n      state.keepAlive = state.opened.filter(item => isKeepAlive(item)).map(e => e.name)\n    },\n    /**\n     * @description 删除一个页面的缓存设置\n     * @param {Object} state state\n     * @param {String} name name\n     */\n    keepAliveRemove (state, name) {\n      const list = cloneDeep(state.keepAlive)\n      const index = list.findIndex(item => item === name)\n      if (index !== -1) {\n        list.splice(index, 1)\n        state.keepAlive = list\n      }\n    },\n    /**\n     * @description 增加一个页面的缓存设置\n     * @param {Object} state state\n     * @param {String} name name\n     */\n    keepAlivePush (state, name) {\n      const keep = cloneDeep(state.keepAlive)\n      keep.push(name)\n      state.keepAlive = uniq(keep)\n    },\n    /**\n     * @description 清空页面缓存设置\n     * @param {Object} state state\n     */\n    keepAliveClean (state) {\n      state.keepAlive = []\n    },\n    /**\n     * @class current\n     * @description 设置当前激活的页面 fullPath\n     * @param {Object} state state\n     * @param {String} fullPath new fullPath\n     */\n    currentSet (state, fullPath) {\n      state.current = fullPath\n    },\n    /**\n     * @class pool\n     * @description 保存 pool (候选池)\n     * @param {Object} state state\n     * @param {Array} routes routes\n     */\n    init (state, routes) {\n      const pool = []\n      const push = function (routes) {\n        routes.forEach(route => {\n          if (route.children && route.children.length > 0) {\n            push(route.children)\n          } else {\n            if (!route.hidden) {\n              const { meta, name, path } = route\n              pool.push({ meta, name, path })\n            }\n          }\n        })\n      }\n      push(routes)\n      state.pool = pool\n    }\n  }\n}\n"],"mappings":"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"}]}