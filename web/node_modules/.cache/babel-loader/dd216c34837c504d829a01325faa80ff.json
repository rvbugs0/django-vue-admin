{"remainingRequest":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/babel-loader/lib/index.js!/Users/raviailani/Downloads/django-vue-admin/web/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/raviailani/Downloads/django-vue-admin/web/src/components/table-selector/table-selector.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/raviailani/Downloads/django-vue-admin/web/src/components/table-selector/table-selector.vue","mtime":1674694301482},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/babel.config.js","mtime":1674694301461},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/cache-loader/dist/cjs.js","mtime":1674694548948},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/babel-loader/lib/index.js","mtime":1674694549283},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/cache-loader/dist/cjs.js","mtime":1674694548948},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/index.js","mtime":1674694549360}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;AAsGA;AACA;AACA;AACA;AACA;EACAA;EACAC;EACAC;IACA;IACAC;MACAC;IACA;IACA;IACAC;MACAD;MACAE;IACA;IACA;IACAC;MACAH;MACAI;IACA;IACAC;MACAL;MACAI;IACA;IACAE;MACAN;MACAI;IACA;IACAG;MACAP;MACAI;IACA;IACAI;MACAR;MACAI;IACA;IACA;IACAK;MACAT;MACAE;MACAE;IACA;IACA;IACAM;MACAV;MACAI;IACA;IACA;IACAO;MACAX;MACAI;IACA;IACA;IACAQ;MACAZ;MACAI;IACA;IACA;IACAS;MACAb;MACAI;IACA;IACA;IACAU;MACAd;IACA;IACA;AACA;AACA;IACAe;MACAf;MACAI;IACA;IACA;IACAY;MACAhB;MACAE;IACA;IACA;IACAe;MACAjB;MACAI;IACA;EACA;EACAc;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;IACA;IACA;IACA;IACA;IACA;EACA;EACAC;IACAC;MACA;QACA;QACAC;QACA9B;QACA+B;QACAC;QACAC;MACA;MACA;QACA;UACAC;QACA;QACA;UACAA;QACA;QACA;UACAA;QACA;QACA;QACA;UACAA;QACA;MACA;MACAA;MACAC;MAEA;QACAD,8DACA,8BACA;QACAA,0BACA;UACAhC;UACAkC;QACA,6BACAF,wBACA;MACA;QACAA,4CACA,2BACA;QACAA,0BACA;UACAhC;UACAkC;QACA,6BACAF,wBACA;MACA;MAEA;IACA;IACAG;MACA;IACA;EACA;EACAC;IACAb;MACA;MACA;IACA;EACA;EACAc;IACA;IACA;IACA;IACA;IACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MAAA;MACA;MACA;QACA;MACA;MACA;MACA;QACA;MACA;MAEA;QACAC;MACA;MACA;QACA;QACA;UACA;QACA;MACA;QACA;QACA;UACA;QACA;QAAA,2CACAA;UAAA;QAAA;UAAA;YAAA;YACA;YACA;YACA;cACAC;YACA;UACA;QAAA;UAAA;QAAA;UAAA;QAAA;QACA;MACA;IACA;IACAC;MACA;MAAA,4CACAD;QAAA;MAAA;QAAA;UAAA;UACAE;UACAtB;QACA;QACA;MAAA;QAAA;MAAA;QAAA;MAAA;MACA;MACA;IACA;IACAuB;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;QACA;MACA;MACAC;MACA;QACAA;UACA;UACA;UACA;YACAC;UACA;YACAA;UACA;QACA;MACA;IACA;IACAC;MACA;QACA;MACA;MACAN;IACA;IACA;IACAO;MACA;QACA;MACA;QACA;MACA;IACA;IACA;IACAC;MACA;QACA;MACA;QACA;MACA;IACA;IACA;IACAC;MACA;MACA;QACAC;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;QACAC;MACA;MACA;MACA;QACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;QACAjB;MACA;QACA;QACA;UACAA;QACA;UACAA;QACA;MACA;MAEA;QACAA;MACA;MACA;QACAA;MACA;MACA;MACA;MACA;IACA;IACAkB;MAAA;MACA;MACA;QACA;QACA;QACA,2BACAC,iBACA;UAAA;QAAA,EACA;QACA;QACA;QACA,aACA,+BACAC,mBACAC,SACAC,OACAA,8DACA,GACAF,UACA;QACAG;QACA;UACA;QACA;MACA;IACA;IACA;IACAC;MACA;MAAA,4CACAxB;QAAA;MAAA;QAAA;UAAA;UACA;UACA;YAAA,4CACAY;cAAA;YAAA;cAAA;gBAAA;gBACAa;cACA;YAAA;cAAA;YAAA;cAAA;YAAA;UACA;QACA;MAAA;QAAA;MAAA;QAAA;MAAA;MACA;MAAA,4CACAzB;QAAA;MAAA;QAAA;UAAA;UACA;UACA;YACAe;UACA;QACA;MAAA;QAAA;MAAA;QAAA;MAAA;MACA;IACA;IACAW;MACA;MAAA,4CACA1B;QAAA;MAAA;QAAA;UAAA;UACAe;QACA;MAAA;QAAA;MAAA;QAAA;MAAA;MACA;IACA;IACAY;MACA;MACA;IACA;IACAC;MACA;MAEA;QACA;MACA;IACA;IACA;IACAC,kDAGA;MAAA,IAFAC;QACAC;MAEA;MACAzB;MACAA;MACAA;IACA;IACA;IACA0B;MACA;MACA;MAEA;QACAC;UACAC;UACAC;UACAC;QACA;MACA;QACAH;UACAG;QACA;MACA;MACA;MACA;QACA;QACAC;UAAAC;QAAA;MACA;QACAD;MACA;MACAE;QACAF;QACAJ;MACA;QACA3B;QACAA;QACAA;QACAA;MACA;IACA;IACA;AACA;AACA;IACAkC;MAAA;QAAAC;QAAAC;QAAAC;QAAAC;QAAAC;QAAAC;QAAAC;MACA;QACAN;QACAC;MACA;IACA;IACA;AACA;AACA;IACAM;MAAA;QAAAP;QAAAC;QAAAC;QAAAC;QAAAC;QAAAC;QAAAC;MACA;QACAE;QAAAR;QAAAC;QAAAC;QAAAC;QAAAC;QAAAC;QAAAC;MACA;IACA;EACA;AACA","names":["name","mixins","props","value","type","filter","require","filterPlaceholder","default","placeholder","dialogTitle","cancelText","confirmText","treeFilter","multiple","ignoreFullCheckedChildren","leafOnly","includeHalfChecked","elProps","clearable","dict","pagination","data","currentValue","collapseTags","selected","dialogVisible","filterText","requestUrl","created","computed","_elProps","highlightCurrent","columns","border","resizable","defaultElProps","lodash","width","collapseTagSize","watch","methods","onDictLoaded","setValue","arrValue","nodes","selectedNodes","node","handleCheckChange","handleCurrentChange","openDialog","that","elTree","doExpandParent","getValueKey","getValueLabel","getValueChildren","children","selectSubmit","doValueInputChanged","values","itemClosed","refreshSelected","resetInputHeight","inputChildNodes","sizeInMap","Math","tags","input","filterFullCheckedChildren","ignored","formatValue","filterNode","onChange","handlePageChange","currentPage","pageSize","searchTableData","params","page","limit","search","url","form","request","radioChange","row","rowIndex","$rowIndex","column","columnIndex","$columnIndex","$event","checkboxChange","checked"],"sourceRoot":"src/components/table-selector","sources":["table-selector.vue"],"sourcesContent":["<template>\n  <div class=\"d2p-tree-selector\">\n    <div\n      class=\"el-cascader el-cascader--default\"\n      :class=\"{ 'is-disabled': disabled }\"\n      @click=\"openDialog\"\n    >\n      <div\n        class=\"el-input el-input--default el-input--suffix\"\n        :class=\"{ 'is-disabled': disabled }\"\n      >\n        <el-input\n          ref=\"reference\"\n          :disabled=\"disabled\"\n          :placeholder=\"selected.length === 0 ? placeholder : ''\"\n        />\n        <span class=\"el-input__suffix\">\n          <span class=\"el-input__suffix-inner\">\n            <i class=\"el-input__icon el-icon-arrow-down\" @click=\"openDialog\"/>\n          </span>\n        </span>\n      </div>\n      <div class=\"el-cascader__tags\" ref=\"tags\">\n        <transition-group @after-leave=\"resetInputHeight\">\n          <el-tag\n            v-for=\"item in selected\"\n            :key=\"getValueKey(item)\"\n            :closable=\"clearable\"\n            :size=\"collapseTagSize\"\n            :hit=\"false\"\n            type=\"info\"\n            @close=\"itemClosed(item)\"\n            disable-transitions\n          >\n            <span class=\"el-select__tags-text\">{{ getValueLabel(item) }}</span>\n          </el-tag>\n        </transition-group>\n      </div>\n    </div>\n    <el-dialog\n      custom-class=\"d2p-tree-selector-dialog\"\n      :title=\"dialogTitle\"\n      :visible.sync=\"dialogVisible\"\n      width=\"50%\"\n      append-to-body\n    >\n      <div class=\"tree-wrapper\">\n        <div v-if=\"treeFilter\" class=\"filter-bar\" style=\"padding-bottom: 20px\">\n          <el-input\n            prefix-icon=\"el-icon-search\"\n            :placeholder=\"filterPlaceholder\"\n            v-model=\"filterText\"\n            size=\"small\"\n          >\n          </el-input>\n        </div>\n\n        <div class=\"tree-body\">\n          <vxe-grid\n            v-bind=\"_elProps\"\n            :data=\"_options\"\n            ref=\"elTree\"\n            :auto-resize=\"true\"\n            @radio-change=\"radioChange\"\n            @checkbox-change=\"checkboxChange\"\n          >\n            <template #pager>\n              <vxe-pager\n                v-if=\"pagination\"\n                style=\"margin-top: 10px\"\n                :layouts=\"[\n                  'Sizes',\n                  'PrevJump',\n                  'PrevPage',\n                  'Number',\n                  'NextPage',\n                  'NextJump',\n                  'FullJump',\n                  'Total',\n                ]\"\n                :current-page.sync=\"_elProps.page\"\n                :page-size.sync=\"_elProps.limit\"\n                :total=\"_elProps.total\"\n                @page-change=\"handlePageChange\"\n              >\n              </vxe-pager>\n            </template>\n          </vxe-grid>\n        </div>\n      </div>\n\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">{{ cancelText }}</el-button>\n        <el-button type=\"primary\" @click=\"selectSubmit\">{{\n            confirmText\n          }}</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport lodash from 'lodash'\nimport { d2CrudPlus } from 'd2-crud-plus'\nimport { request } from '@/api/service'\n// 表格选择组件\nexport default {\n  name: 'table-selector-input',\n  mixins: [d2CrudPlus.input, d2CrudPlus.inputDict],\n  props: {\n    // 值\n    value: {\n      type: [Number, String, Boolean, Array, Object]\n    },\n    // 过滤，value中的nodes过滤方法 参数为nodes\n    filter: {\n      type: Function,\n      require: false\n    },\n    // 过滤的placeholder\n    filterPlaceholder: {\n      type: String,\n      default: '输入关键字进行过滤'\n    },\n    placeholder: {\n      type: String,\n      default: '请选择'\n    },\n    dialogTitle: {\n      type: String,\n      default: '选择'\n    },\n    cancelText: {\n      type: String,\n      default: '取消'\n    },\n    confirmText: {\n      type: String,\n      default: '确定'\n    },\n    // 树形组件节点过滤，可以配置elProps.filterNodeMethod ，覆盖默认的过滤方法\n    treeFilter: {\n      type: Boolean,\n      require: false,\n      default: true\n    },\n    // 是否多选，传入false为单选\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    // 是否忽略选中节点的子节点\n    ignoreFullCheckedChildren: {\n      type: Boolean,\n      default: true\n    },\n    // 是否只返回叶子节点\n    leafOnly: {\n      type: Boolean,\n      default: false\n    },\n    // 是否包含半选节点\n    includeHalfChecked: {\n      type: Boolean,\n      default: false\n    },\n    // el-tree的属性配置\n    elProps: {\n      type: Object\n    },\n    /**\n     * 是否可以清除\n     */\n    clearable: {\n      type: Boolean,\n      default: true\n    },\n    // 数据字典配置\n    dict: {\n      type: Object,\n      require: false\n    },\n    // 是否开启分页\n    pagination: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    return {\n      currentValue: undefined,\n      collapseTags: false,\n      selected: [],\n      dialogVisible: false,\n      filterText: undefined,\n      requestUrl: null\n    }\n  },\n  created () {\n    // if (this.dict) {\n    //   this.dict = d2CrudPlus.util.dict.mergeDefault(this.dict, true)\n    // }\n    // this.initData()\n    // console.log(this)\n    this.searchTableData()\n  },\n  computed: {\n    _elProps () {\n      const defaultElProps = {\n        // showCheckbox: this.multiple,\n        highlightCurrent: !this.multiple,\n        props: {},\n        columns: [],\n        border: true,\n        resizable: true\n      }\n      if (this.dict != null) {\n        if (this.dict.label != null) {\n          defaultElProps.props.label = this.dict.label\n        }\n        if (this.dict.value != null) {\n          defaultElProps.props.value = this.dict.value\n        }\n        if (this.dict.children != null) {\n          defaultElProps.props.children = this.dict.children\n        }\n        // 加上树形的配置\n        if (this.dict.isTree) {\n          defaultElProps.treeConfig = this.elProps.treeConfig\n        }\n      }\n      defaultElProps.nodeKey = defaultElProps.props.value\n      lodash.merge(defaultElProps, this.elProps)\n\n      if (this.multiple) {\n        defaultElProps.checkboxConfig = this.elProps.checkboxConfig\n          ? this.elProps.checkboxConfig\n          : {}\n        defaultElProps.columns = [\n          {\n            type: 'checkbox',\n            width: 60\n          },\n          ...defaultElProps.columns\n        ]\n      } else {\n        defaultElProps.radioConfig = this.elProps\n          ? this.elProps.radioConfig\n          : {}\n        defaultElProps.columns = [\n          {\n            type: 'radio',\n            width: 60\n          },\n          ...defaultElProps.columns\n        ]\n      }\n\n      return defaultElProps\n    },\n    collapseTagSize () {\n      return ['small', 'mini'].indexOf(this.selectSize) > -1 ? 'mini' : 'small'\n    }\n  },\n  watch: {\n    filterText (val) {\n      // this.$refs.elTree.filter(val);\n      this.searchTableData()\n    }\n  },\n  methods: {\n    // initData () {\n    //   d2CrudPlus.util.dict.get(this.dict).then(ret => {\n    //     this.$set(this, 'data', ret)\n    //     this.setValue(this.value)\n    //   })\n    // },\n    onDictLoaded () {\n      // log.danger(\"onDictLoaded\", this.dict, this.value);\n      this.setValue(this.value)\n    },\n    setValue (value) {\n      // log.danger(\"setValue:\", this.currentValue, this.value, this._options);\n      if (this.currentValue === this.value) {\n        return\n      }\n      let arrValue = value\n      if (value == null) {\n        this.selected = []\n      }\n\n      if (!(arrValue instanceof Array)) {\n        arrValue = [arrValue]\n      }\n      if (this.dict && this.dict.getNodes) {\n        // log.danger(\"getNodes:\", arrValue);\n        this.dict.getNodes(arrValue).then((nodes) => {\n          this.selectedNodes(nodes, value)\n        })\n      } else {\n        const nodes = []\n        if (this._options == null || this._options.length === 0) {\n          return\n        }\n        for (const item of arrValue) {\n          const data = this._options\n          const node = d2CrudPlus.util.dict.getByValue(item, data, this.dict)\n          if (node != null) {\n            nodes.push(node)\n          }\n        }\n        this.selectedNodes(nodes, value)\n      }\n    },\n    selectedNodes (nodes, value) {\n      const selected = []\n      for (const node of nodes) {\n        node.id = node[this.dict.value]\n        selected.push(node)\n      }\n      // log.danger(\"selected:\", selected);\n      this.$set(this, 'selected', selected)\n      this.resetInputHeight()\n    },\n    handleCheckChange (event) {\n      this.$emit('check-change', event)\n    },\n    handleCurrentChange (event) {\n      this.$emit('current-change', event)\n    },\n    openDialog () {\n      const that = this\n      if (that.disabled) {\n        return\n      }\n      that.dialogVisible = true\n      if (that.value != null) {\n        that.$nextTick(() => {\n          const refs = Object.assign({}, that.$refs)\n          const { elTree } = refs\n          if (that.multiple) {\n            elTree.setCheckboxRow(that.selected, true)\n          } else {\n            elTree.setRadioRow(that.selected[0])\n          }\n        })\n      }\n    },\n    doExpandParent (node) {\n      if (node.parent != null) {\n        this.doExpandParent(node.parent)\n      }\n      node.expanded = true\n    },\n    // 处理value,是否为原生value还是自定义value\n    getValueKey (item) {\n      if (this._elProps.props.value != null) {\n        return item[this._elProps.props.value]\n      } else {\n        return item.value\n      }\n    },\n    // 处理label,是否为原生label还是自定义label\n    getValueLabel (item) {\n      if (this._elProps.props.label != null) {\n        return item[this._elProps.props.label]\n      } else {\n        return item.label\n      }\n    },\n    // 处理children,是否为原生children还是自定义children\n    getValueChildren (item) {\n      let children = 'children'\n      if (this._elProps.props.children != null) {\n        children = this._elProps.props.children\n      }\n      return item[children]\n    },\n    // 确定按钮事件\n    selectSubmit () {\n      const nodes = this.refreshSelected()\n      this.dialogVisible = false\n      this.doValueInputChanged(nodes)\n    },\n    // 将值传出去\n    doValueInputChanged (nodes) {\n      let values = this.formatValue(nodes)\n      this.resetInputHeight()\n      if (!this.multiple) {\n        values = values && values.length > 0 ? values[0] : undefined\n      }\n      this.currentValue = values\n      if (this.dispatch) {\n        this.dispatch('ElFormItem', 'el.form.blur')\n      }\n      this.$emit('input', values)\n    },\n    itemClosed (item) {\n      const newNodes = lodash.without(this.selected, item)\n      // console.log(\"new value\", item, newNodes);\n      this.$set(this, 'selected', newNodes)\n      this.doValueInputChanged(newNodes)\n    },\n    // 获取选中的行数据\n    refreshSelected () {\n      let nodes = null\n      if (this.multiple) {\n        nodes = this.$refs.elTree.getCheckboxRecords()\n      } else {\n        const node = this.$refs.elTree.getRadioRecord()\n        if (node == null) {\n          nodes = []\n        } else {\n          nodes = [node]\n        }\n      }\n\n      if (this.ignoreFullCheckedChildren) {\n        nodes = this.filterFullCheckedChildren(nodes)\n      }\n      if (this.filter != null) {\n        nodes = this.filter(nodes)\n      }\n      // log.danger(\"selected\", this.selected);\n      this.$set(this, 'selected', nodes)\n      return nodes\n    },\n    resetInputHeight () {\n      if (this.collapseTags && !this.filterable) return\n      this.$nextTick(() => {\n        if (!this.$refs.reference) return\n        const inputChildNodes = this.$refs.reference.$el.childNodes\n        const input = [].filter.call(\n          inputChildNodes,\n          (item) => item.tagName === 'INPUT'\n        )[0]\n        const tags = this.$refs.tags\n        const sizeInMap = this.initialInputHeight || 40\n        const height =\n          this.selected.length === 0\n            ? sizeInMap + 'px'\n            : Math.max(\n              tags\n                ? tags.clientHeight + (tags.clientHeight > sizeInMap ? 6 : 0)\n                : 0,\n              sizeInMap\n            ) + 'px'\n        input.style.height = height\n        if (this.visible && this.emptyText !== false) {\n          this.broadcast('ElSelectDropdown', 'updatePopper')\n        }\n      })\n    },\n    // 过滤叶子节点\n    filterFullCheckedChildren (nodes) {\n      const ignored = new Set()\n      for (const item of nodes) {\n        const children = this.getValueChildren(item)\n        if (children != null) {\n          for (const child of children) {\n            ignored.add(this.getValueKey(child))\n          }\n        }\n      }\n      const values = []\n      for (const item of nodes) {\n        const key = this.getValueKey(item)\n        if (!ignored.has(key)) {\n          values.push(item)\n        }\n      }\n      return values\n    },\n    formatValue (nodes) {\n      const values = []\n      for (const item of nodes) {\n        values.push(this.getValueKey(item))\n      }\n      return values\n    },\n    filterNode (value, data) {\n      if (!value) return true\n      return this.getValueLabel(data).indexOf(value) !== -1\n    },\n    onChange (value) {\n      this.$emit('change', value)\n\n      if (this.dispatch) {\n        this.dispatch('ElFormItem', 'el.form.blur')\n      }\n    },\n    // 分页事件\n    handlePageChange ({\n      currentPage,\n      pageSize\n    }) {\n      const that = this\n      that._elProps.page = currentPage\n      that._elProps.limit = pageSize\n      that.searchTableData()\n    },\n    // 获取数据事件\n    searchTableData () {\n      const that = this\n      let params\n\n      if (that.pagination) {\n        params = {\n          page: that._elProps.page,\n          limit: that._elProps.limit,\n          search: that.filterText\n        }\n      } else {\n        params = {\n          search: that.filterText\n        }\n      }\n      let url\n      if (typeof that.dict.url === 'function') {\n        const form = that.d2CrudContext.getForm()\n        url = that.dict.url(that.dict, { form })\n      } else {\n        url = that.dict.url\n      }\n      request({\n        url: url,\n        params: params\n      }).then((ret) => {\n        that._elProps.page = ret.data.page\n        that._elProps.limit = ret.data.limit\n        that._elProps.total = ret.data.total\n        that.$set(that, 'dictOptions', ret.data.data)\n      })\n    },\n    /**\n     * 表格单选事件\n     */\n    radioChange ({ checked, row, rowIndex, $rowIndex, column, columnIndex, $columnIndex, $event }) {\n      this.$emit('radioChange', {\n        row,\n        rowIndex\n      })\n    },\n    /**\n     * 表格多选事件\n     */\n    checkboxChange ({ checked, row, rowIndex, $rowIndex, column, columnIndex, $columnIndex, $event }) {\n      this.$emit('checkboxChange', {\n        checked, row, rowIndex, $rowIndex, column, columnIndex, $columnIndex, $event\n      })\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n\n.d2p-tree-selector {\n  width: 100%;\n\n  .el-cascader {\n    width: 100%;\n  }\n\n  .is-disabled .el-tag__close.el-icon-close {\n    display: none;\n  }\n}\n\n.d2p-tree-selector-dialog {\n  &.el-dialog {\n    max-height: 80vh;\n    display: flex;\n    flex-direction: column;\n\n    .el-dialog__body {\n      flex: 1;\n      overflow-y: auto;\n    }\n\n    .el-dialog__header {\n      padding: 20px 20px 20px;\n      border-bottom: 1px solid #eee;\n    }\n\n    .el-dialog__footer {\n      padding: 10px 20px 10px;\n      border-top: 1px solid #eee;\n    }\n  }\n}\n\n</style>\n"]}]}