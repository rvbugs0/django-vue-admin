{"remainingRequest":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/babel-loader/lib/index.js!/Users/raviailani/Downloads/django-vue-admin/web/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/raviailani/Downloads/django-vue-admin/web/src/views/sensory_data/charts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/raviailani/Downloads/django-vue-admin/web/src/views/sensory_data/charts.vue","mtime":1675028679145},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/babel.config.js","mtime":1674694301461},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/cache-loader/dist/cjs.js","mtime":1674694548948},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/babel-loader/lib/index.js","mtime":1674694549283},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/cache-loader/dist/cjs.js","mtime":1674694548948},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/index.js","mtime":1674694549360}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;AAgBA;AACA;AACA;AACA;AACA;EACAA;EACAC;IACA;MACAC;MACAC;IAEA;EAEA;EACAC,UAEA;EAAAC;IACA;;IAEA;IACA;IACA;MACAC;MACAC;IACA;IACA;MACAC;QACAC;QACAC;MACA;MACAC;QACAC;QACAX;MACA;MACAY;QACAD;MACA;MACAE,SACA;QACAb;QACAW;MACA;IAEA;IACA;IACAG;MAAAC;MAAAC;IAAA;MAEAC;MAEA;QACAA;QAEAA;MACA;MACA;QACAC;MACA;IAGA;;IAGA;IACA;IACA;IACA;MACAX;QACAC;QACAC;MACA;MACAU,UACA;QACAC;QACAC;MAEA,GACA;QACAC;UACAX;UACAY;YAAAC;YAAAC;UAAA;QACA;MACA,EACA;MACAf;QACAC;QACAe;UAAAC;UAAAC;QAAA;MACA;MACAhB;MACAC;QACAF;QACAkB;UAAAC;UAAAC;QAAA;QACAC;MACA;IACA;IACA;IACAlB;MAAAC;MAAAC;IAAA;MAGA;QACAC;MAEA;MACAA;MACA;QAEAgB;MACA;MACA;MACA;IAGA;;IAGA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACAC;QACAC;QACAC;UACA;QACA;MACA;MACA7B;QACAE;QACAD;MACA;MACA6B;QACAC;UACAC;YACAC;UACA;UACAC;UACAC;QACA;MACA;MACAhC;QACAC;QACAgC;QACA3C;MACA;MACAY;QACAD;QACAgC;MACA;MACAJ,WACA;QACA5B;QACAiC;QACAC;MACA,GACA;QACAD;QACAC;MACA,EACA;MACAhC,SACA;QACAd;QACAY;QACAmC;QACAC;QACAC;UACAC;QACA;QACAC;UACAD,uDACA;YACAE;YACAF;UACA,GACA;YACAE;YACAF;UACA,EACA;QACA;QACAjD;MACA;IAEA;IAEA;IACAc;MAAAC;MAAAC;IAAA;MAEAoC;MACAnC;MAEA;QAEAoC;QAEAC;MAEA;MACA;QAEAC;MACA;IAGA;;IAGA;IACA;IACA;IAEA;MACAhD;QACAE;QACAD;MACA;MACAE;QACAC;QACAgC;QACA3C;MACA;MACAY;QACAD;MACA;MACAE,SACA;QACAb;QACAW;QACAuC;MACA;IAEA;IACA;IACApC;MAAAC;MAAAC;IAAA;MAEAC;MAEA;QACAA;QAEAA;MACA;MACA;QACAuC;MACA;IAGA;IAMAC;IACAA;IACAA;IACAA;EACA;AAEA","names":["name","data","chart1results","chart2results","methods","mounted","renderer","useDirtyRect","title","text","left","xAxis","type","yAxis","series","request","url","method","address","chart1","dataset","dimensions","source","transform","config","dimension","order","axisLabel","interval","rotate","encode","x","y","datasetIndex","chart2","tooltip","trigger","position","toolbox","feature","dataZoom","yAxisIndex","restore","saveAsImage","boundaryGap","start","end","symbol","sampling","itemStyle","color","areaStyle","offset","finalRes","chart3data","date","chart3","chart4","window"],"sourceRoot":"src/views/sensory_data","sources":["charts.vue"],"sourcesContent":["<template>\n    <div class=\"container\" style=\"background-color: white;min-width: 100%;min-height: 100%;\">\n\n        <div id=\"chart1Container\"></div>\n        <div id=\"chart3Container\"></div>\n        <div id=\"chart4Container\"></div>\n        <div id=\"chart2Container\"></div>\n\n    </div>\n\n\n\n\n</template>\n  \n<script>\nimport * as echarts from '../static/echarts.min'\nconst urlPrefix = '/api/system/sensory_data/'\nimport { request } from '@/api/service'\nimport { copyFileSync } from 'fs'\nexport default {\n    name: 'sensory_charts',\n    data() {\n        return {\n            chart1results: [],\n            chart2results: []\n\n        }\n\n    },\n    methods: {\n\n    }, mounted() {\n        var address = this;\n\n        // chart-1\n        var chart1Container = document.getElementById('chart1Container');\n        var chart1 = echarts.init(chart1Container, null, {\n            renderer: 'canvas',\n            useDirtyRect: false\n        });\n        this.chart1option = {\n            title: {\n                text: 'Month vs Average Sea water Temp. (deg. C)',\n                left: 'center'\n            },\n            xAxis: {\n                type: 'category',\n                data: []\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    data: [],\n                    type: 'line'\n                }\n            ]\n        };\n        this.chart1results = []\n        request({ url: urlPrefix + 'get_average_temperatures/', method: 'get', }).then(function (finalRes) {\n\n            address.chart1results = finalRes;\n\n            for (var i in finalRes) {\n                address.chart1option.xAxis.data.push(finalRes[i].month);\n\n                address.chart1option.series[0].data.push(finalRes[i].average_temp);\n            }\n            if (address.chart1option && typeof address.chart1option === 'object') {\n                chart1.setOption(address.chart1option);\n            }\n\n\n        });\n\n\n        // chart-2\n        var chart2Container = document.getElementById('chart2Container');\n        var chart2 = echarts.init(chart2Container);\n        this.chart2option = {\n            title: {\n                text: 'Month vs Average Salinity',\n                left: 'center'\n            },\n            dataset: [\n                {\n                    dimensions: ['month', 'salinity', 'index'],\n                    source: [\n                    ]\n                },\n                {\n                    transform: {\n                        type: 'sort',\n                        config: { dimension: 'index', order: 'asc' }\n                    }\n                }\n            ],\n            xAxis: {\n                type: 'category',\n                axisLabel: { interval: 0, rotate: 30 }\n            },\n            yAxis: {},\n            series: {\n                type: 'bar',\n                encode: { x: 'month', y: 'salinity' },\n                datasetIndex: 1\n            }\n        };\n        this.chart2results = []\n        request({ url: urlPrefix + 'get_average_salinity/', method: 'get', }).then(function (finalRes) {\n\n\n            for (var i in finalRes) {\n                address.chart2option.dataset[0].source.push([finalRes[i].month, finalRes[i].average_salinity, i]);\n\n            }\n            address.chart2results = address.chart2option.dataset[0].source;\n            if (address.chart2option && typeof address.chart2option === 'object') {\n\n                chart2.setOption(address.chart2option);\n            }\n            // console.log(address.chart2results);\n            // console.log(address.chart2option.dataset[0].source);\n\n\n        });\n\n\n        // chart-3  \n        var chart3Container = document.getElementById('chart3Container');\n        var chart3 = echarts.init(chart3Container);\n        let base = +new Date(1968, 9, 3);\n        let oneDay = 24 * 3600 * 1000;\n        let date = [];\n        let chart3data = [];\n        this.chart3option = {\n            tooltip: {\n                trigger: 'axis',\n                position: function (pt) {\n                    return [pt[0], '10%'];\n                }\n            },\n            title: {\n                left: 'center',\n                text: 'Date v. Salinity'\n            },\n            toolbox: {\n                feature: {\n                    dataZoom: {\n                        yAxisIndex: 'none'\n                    },\n                    restore: {},\n                    saveAsImage: {}\n                }\n            },\n            xAxis: {\n                type: 'category',\n                boundaryGap: false,\n                data: date\n            },\n            yAxis: {\n                type: 'value',\n                boundaryGap: [0, '100%']\n            },\n            dataZoom: [\n                {\n                    type: 'inside',\n                    start: 0,\n                    end: 10\n                },\n                {\n                    start: 0,\n                    end: 10\n                }\n            ],\n            series: [\n                {\n                    name: 'Salinity',\n                    type: 'line',\n                    symbol: 'none',\n                    sampling: 'lttb',\n                    itemStyle: {\n                        color: 'rgb(255, 70, 131)'\n                    },\n                    areaStyle: {\n                        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                            {\n                                offset: 0,\n                                color: 'rgb(255, 158, 68)'\n                            },\n                            {\n                                offset: 1,\n                                color: 'rgb(255, 70, 131)'\n                            }\n                        ])\n                    },\n                    data: chart3data\n                }\n            ]\n        };\n\n        this.chart3results = []\n        request({ url: urlPrefix + '', method: 'get', }).then(function (finalRes) {\n\n            finalRes = finalRes.data.data;\n            address.chart3results = finalRes;\n\n            for (var i in finalRes) {\n                \n                chart3data.push(finalRes[i].salinity);\n                \n                date.push(finalRes[i].date_recorded);\n\n            }\n            if (address.chart3option && typeof address.chart3option === 'object') {\n\n                chart3.setOption(address.chart3option);\n            }\n\n\n        });\n\n\n        // chart-4\n        var chart4Container = document.getElementById('chart4Container');\n        var chart4 = echarts.init(chart4Container);\n\n        this.chart4option = {            \n            title: {\n                left: 'center',\n                text: 'Month v. Average pH'\n            },\n            xAxis: {\n                type: 'category',\n                boundaryGap: false,\n                data: []\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    data: [],\n                    type: 'line',\n                    areaStyle: {}\n                }\n            ]\n        };\n        this.chart4results = []\n        request({ url: urlPrefix + 'get_average_ph/', method: 'get', }).then(function (finalRes) {\n\n            address.chart4results = finalRes;\n\n            for (var i in finalRes) {\n                address.chart4option.xAxis.data.push(finalRes[i].month);\n\n                address.chart4option.series[0].data.push(finalRes[i].average_ph);\n            }\n            if (address.chart4option && typeof address.chart4option === 'object') {\n                chart4.setOption(address.chart4option);\n            }\n\n\n        });\n\n\n\n\n\n        window.addEventListener('resize', chart1.resize);\n        window.addEventListener('resize', chart2.resize);\n        window.addEventListener('resize', chart3.resize);\n        window.addEventListener('resize', chart4.resize);\n    }\n\n}\n\n\n\n</script>\n\n<style scoped>\n* {\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n}\n\nhtml,\nbody {\n    height: 100%;\n    width: 100%;\n}\n\ndiv {\n    width: 50%;\n    height: 50%;\n    float: left;\n}\n\ndiv:nth-of-type(1) {\n    padding-top: 10px;\n    background: #fff;\n}\n\ndiv:nth-of-type(2) {\n    background: #fff;\n    border-left: 1px solid #f00;\n}\n\ndiv:nth-of-type(3) {\n    padding-top: 10px;\n    background: #fff;\n    border-top: 1px solid #f00;\n}\n\ndiv:nth-of-type(4) {\n    padding-top: 10px;\n    background: #fff;\n    border-top: 1px solid #f00;\n    border-left: 1px solid #f00;\n}\n</style>\n\n"]}]}