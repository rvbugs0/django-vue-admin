{"remainingRequest":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/babel-loader/lib/index.js!/Users/raviailani/Downloads/django-vue-admin/web/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/raviailani/Downloads/django-vue-admin/web/src/views/sensory_data/charts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/raviailani/Downloads/django-vue-admin/web/src/views/sensory_data/charts.vue","mtime":1674692617938},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/babel.config.js","mtime":1674694301461},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/cache-loader/dist/cjs.js","mtime":1674694548948},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/babel-loader/lib/index.js","mtime":1674694549283},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/cache-loader/dist/cjs.js","mtime":1674694548948},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/index.js","mtime":1674694549360}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90eXBlb2YgZnJvbSAiL1VzZXJzL3JhdmlhaWxhbmkvRG93bmxvYWRzL2RqYW5nby12dWUtYWRtaW4vd2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90eXBlb2YuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5wdXNoLmpzIjsKaW1wb3J0ICogYXMgZWNoYXJ0cyBmcm9tICcuLi9zdGF0aWMvZWNoYXJ0cy5taW4nOwp2YXIgdXJsUHJlZml4ID0gJy9hcGkvc3lzdGVtL3dlYXRoZXJpbmZvLyc7CmltcG9ydCB7IHJlcXVlc3QgfSBmcm9tICdAL2FwaS9zZXJ2aWNlJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdjaGFydHZpZXcnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICByZXN1bHRzOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHt9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgZG9tID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbnRhaW5lcicpOwogICAgdmFyIG15Q2hhcnQgPSBlY2hhcnRzLmluaXQoZG9tLCBudWxsLCB7CiAgICAgIHJlbmRlcmVyOiAnY2FudmFzJywKICAgICAgdXNlRGlydHlSZWN0OiBmYWxzZQogICAgfSk7CiAgICB0aGlzLm9wdGlvbiA9IHsKICAgICAgdGl0bGU6IHsKICAgICAgICB0ZXh0OiAnTW9udGggdnMgQXZlcmFnZSBUZW1wZXJhdHVyZSBpbiBEZWdyZWUgQ2VsY2l1cycsCiAgICAgICAgbGVmdDogJ2NlbnRlcicKICAgICAgfSwKICAgICAgeEF4aXM6IHsKICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLAogICAgICAgIGRhdGE6IFtdCiAgICAgIH0sCiAgICAgIHlBeGlzOiB7CiAgICAgICAgdHlwZTogJ3ZhbHVlJwogICAgICB9LAogICAgICBzZXJpZXM6IFt7CiAgICAgICAgZGF0YTogW10sCiAgICAgICAgdHlwZTogJ2xpbmUnCiAgICAgIH1dCiAgICB9OwogICAgdGhpcy5yZXN1bHRzID0gW107CiAgICB2YXIgYWRkcmVzcyA9IHRoaXM7CiAgICByZXF1ZXN0KHsKICAgICAgdXJsOiB1cmxQcmVmaXggKyAnZ2V0X2F2ZXJhZ2VfdGVtcGVyYXR1cmVzLycsCiAgICAgIG1ldGhvZDogJ2dldCcKICAgIH0pLnRoZW4oZnVuY3Rpb24gKGZpbmFsUmVzKSB7CiAgICAgIGFkZHJlc3MucmVzdWx0cyA9IGZpbmFsUmVzOwogICAgICBmb3IgKHZhciBpIGluIGZpbmFsUmVzKSB7CiAgICAgICAgYWRkcmVzcy5vcHRpb24ueEF4aXMuZGF0YS5wdXNoKGZpbmFsUmVzW2ldLm1vbnRoKTsKICAgICAgICBhZGRyZXNzLm9wdGlvbi5zZXJpZXNbMF0uZGF0YS5wdXNoKGZpbmFsUmVzW2ldLmF2ZXJhZ2VfdGVtcCk7CiAgICAgIH0KICAgICAgaWYgKGFkZHJlc3Mub3B0aW9uICYmIF90eXBlb2YoYWRkcmVzcy5vcHRpb24pID09PSAnb2JqZWN0JykgewogICAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKGFkZHJlc3Mub3B0aW9uKTsKICAgICAgfQogICAgfSk7CiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgbXlDaGFydC5yZXNpemUpOwogIH0KfTs="},{"version":3,"mappings":";;AAUA;AACA;AACA;AACA;EACAA;EACAC;IACA;MACAC;IACA;EAEA;EACAC,UAEA;EAAAC;IAEA;IACA;MACAC;MACAC;IACA;IAEA;MACAC;QACAC;QACAC;MACA;MACAC;QACAC;QACAV;MACA;MACAW;QACAD;MACA;MACAE,SACA;QACAZ;QACAU;MACA;IAEA;IAEA;IACA;IACAG;MAAAC;MAAAC;IAAA;MAEAC;MAEA;QACAA;QAEAA;MACA;MACA;QACAC;MACA;IAGA;IAEAC;EACA;AAEA","names":["name","data","results","methods","mounted","renderer","useDirtyRect","title","text","left","xAxis","type","yAxis","series","request","url","method","address","myChart","window"],"sourceRoot":"src/views/sensory_data","sources":["charts.vue"],"sourcesContent":["<template>\n        <div class=\"container\" style=\"padding-top:32px;background-color: white;min-width: 100%;min-height: 100%;\">\n            <div id=\"container\" style=\"height: 320px; width: 480px;\"></div>\n        </div>\n\n\n\n</template>\n  \n<script>\nimport * as echarts from '../static/echarts.min'\nconst urlPrefix = '/api/system/weatherinfo/'\nimport { request } from '@/api/service'\nexport default {\n    name: 'chartview',\n    data() {\n        return {\n            results: []\n        }\n\n    },\n    methods: {\n\n    }, mounted() {\n\n        var dom = document.getElementById('container');\n        var myChart = echarts.init(dom, null, {\n            renderer: 'canvas',\n            useDirtyRect: false\n        });\n\n        this.option = {\n            title: {\n                text: 'Month vs Average Temperature in Degree Celcius',\n                left: 'center'\n            },\n            xAxis: {\n                type: 'category',\n                data: []\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    data: [],\n                    type: 'line'\n                }\n            ]\n        };\n\n        this.results = []\n        var address = this;\n        request({ url: urlPrefix + 'get_average_temperatures/', method: 'get', }).then(function (finalRes) {\n\n            address.results = finalRes;\n\n            for (var i in finalRes) {\n                address.option.xAxis.data.push(finalRes[i].month);\n\n                address.option.series[0].data.push(finalRes[i].average_temp);\n            }\n            if (address.option && typeof address.option === 'object') {\n                myChart.setOption(address.option);\n            }\n\n\n        });\n\n        window.addEventListener('resize', myChart.resize);\n    }\n\n}\n\n\n\n</script>\n\n\n"]}]}