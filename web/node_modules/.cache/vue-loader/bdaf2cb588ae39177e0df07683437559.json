{"remainingRequest":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/raviailani/Downloads/django-vue-admin/web/src/views/system/config/components/formContent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/raviailani/Downloads/django-vue-admin/web/src/views/system/config/components/formContent.vue","mtime":1674694301490},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/cache-loader/dist/cjs.js","mtime":1674694548948},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/babel-loader/lib/index.js","mtime":1674694549283},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/cache-loader/dist/cjs.js","mtime":1674694548948},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/index.js","mtime":1674694549360}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["formContent.vue"],"names":[],"mappingsfile":"formContent.vue","sourceRoot":"src/views/system/config/components","sourcesContent":["<template>\n  <div>\n    <el-row :gutter=\"10\">\n      <el-col :span=\"4\">变量标题</el-col>\n      <el-col :span=\"10\">变量值</el-col>\n      <el-col :span=\"4\" >变量名</el-col>\n      <el-col :span=\"2\">是否前端配置</el-col>\n      <el-col :span=\"3\" :offset=\"1\">操作</el-col>\n    </el-row>\n    <el-form ref=\"form\" :model=\"form\" label-width=\"240px\" label-position=\"left\" style=\"margin-top: 20px\">\n      <el-form-item :label=\"item.title\" :prop=\"['array'].indexOf(item.form_item_type_label) >-1?'':item.key\"\n                    :key=\"index\" :rules=\"item.rule || []\"\n                    v-for=\"(item,index) in formList\"\n\n      >\n        <template slot=\"label\">\n          <el-input v-if=\"item.edit\" v-model=\"item.title\" style=\"display: inline-block;width: 200px;\" placeholder=\"请输入标题\"></el-input>\n          <span v-else>{{item.title}}</span>\n        </template>\n        <el-col :span=\"11\" >\n          <!--    文本      -->\n          <el-input :key=\"index\" v-if=\"['text','textarea'].indexOf(item.form_item_type_label) >-1\"\n                    :type=\"item.form_item_type_label\"\n                    v-model=\"form[item.key]\" :placeholder=\"item.placeholder\" clearable></el-input>\n\n          <el-input-number :key=\"index\" v-else-if=\"item.form_item_type_label === 'number'\" v-model=\"form[item.key]\"\n                           :min=\"0\"></el-input-number>\n          <!--     datetime、date、time     -->\n          <el-date-picker\n            v-else-if=\"['datetime','date','time'].indexOf(item.form_item_type_label) >-1\"\n            v-model=\"form[item.key]\"\n            :key=\"index\"\n            :type=\"item.form_item_type_label\"\n            :placeholder=\"item.placeholder\">\n          </el-date-picker>\n          <!--    select      -->\n          <el-select\n            :key=\"index\"\n            v-else-if=\"item.form_item_type_label === 'select'\"\n            v-model=\"form[item.key]\"\n            :placeholder=\"item.placeholder\"\n            clearable\n          >\n            <el-option\n              v-for=\"item in dictionary(item.setting)  || []\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\">\n            </el-option>\n          </el-select>\n          <!--    checkbox      -->\n          <el-checkbox-group\n            :key=\"index\"\n            v-else-if=\"item.form_item_type_label === 'checkbox'\"\n            v-model=\"form[item.key]\"\n            :placeholder=\"item.placeholder\"\n          >\n            <el-checkbox\n              v-for=\"item in dictionary(item.setting)  || []\"\n              :key=\"item.value\"\n              :label=\"item.value\"\n              :value=\"item.value\">\n              {{ item.label }}\n            </el-checkbox>\n          </el-checkbox-group>\n          <!--    radio      -->\n          <el-radio-group\n            :key=\"index\"\n            v-else-if=\"item.form_item_type_label === 'radio'\"\n            v-model=\"form[item.key]\"\n            :placeholder=\"item.placeholder\"\n            clearable\n          >\n            <el-radio\n              v-for=\"item in dictionary(item.setting)  || []\"\n              :key=\"item.value\"\n              :label=\"item.value\"\n              :value=\"item.value\">\n              {{ item.label }}\n            </el-radio>\n          </el-radio-group>\n          <!--    switch      -->\n          <el-switch\n            :key=\"index\"\n            v-else-if=\"item.form_item_type_label === 'switch'\"\n            v-model=\"form[item.key]\"\n            active-color=\"#13ce66\"\n            inactive-color=\"#ff4949\">\n          </el-switch>\n          <!--     图片     -->\n          <div v-else-if=\"['img','imgs'].indexOf(item.form_item_type_label) >-1\" :key=\"index\">\n            <el-upload\n              :action=\"uploadUrl\"\n              :headers=\"uploadHeaders\"\n              name=\"file\"\n              :accept=\"'image/*'\"\n              :on-preview=\"handlePictureCardPreview\"\n              :on-success=\"(response, file, fileList)=>{handleUploadSuccess(response, file, fileList,item.key)}\"\n              :on-error=\"handleError\"\n              :on-exceed=\"handleExceed\"\n              :before-remove=\"(file, fileList)=>{beforeRemove(file, fileList, item.key)}\"\n              :multiple=\"item.form_item_type_label!=='img'\"\n              :limit=\"item.form_item_type_label==='img'?1:5\"\n              :ref=\"'imgUpload_'+item.key\"\n              :data-keyname=\"item.key\"\n              :file-list=\"item.value?item.value:[]\"\n              list-type=\"picture-card\"\n            >\n              <i class=\"el-icon-plus\"></i>\n              <div slot=\"tip\" class=\"el-upload__tip\">选取图片后,需手动上传到服务器,并且只能上传jpg/png文件</div>\n            </el-upload>\n            <el-dialog :visible.sync=\"dialogImgVisible\">\n              <img width=\"100%\" :src=\"dialogImageUrl\" alt=\"\">\n            </el-dialog>\n          </div>\n          <!--     文件     -->\n          <div v-else-if=\"['file'].indexOf(item.form_item_type_label) >-1\" :key=\"index\">\n            <el-upload\n              :action=\"uploadUrl\"\n              :headers=\"uploadHeaders\"\n              name=\"file\"\n              :on-preview=\"handlePictureCardPreview\"\n              :on-success=\"(response, file, fileList)=>{handleUploadSuccess(response, file, fileList,item.key)}\"\n              :on-error=\"handleError\"\n              :on-exceed=\"handleExceed\"\n              :before-remove=\"(file, fileList)=>{beforeRemove(file, fileList, item.key)}\"\n              :limit=\"5\"\n              :ref=\"'fileUpload_'+item.key\"\n              :data-keyname=\"item.key\"\n              :file-list=\"item.value\"\n              list-type=\"picture-card\"\n            >\n              <i class=\"el-icon-plus\"></i>\n              <div slot=\"tip\" class=\"el-upload__tip\">选取图片后,需手动上传到服务器,并且只能上传jpg/png文件</div>\n            </el-upload>\n            <el-dialog :visible.sync=\"dialogImgVisible\">\n              <img width=\"100%\" :src=\"dialogImageUrl\" alt=\"\">\n            </el-dialog>\n          </div>\n          <!--    关联表      -->\n          <div v-else-if=\"['foreignkey','manytomany'].indexOf(item.form_item_type_label) >-1\" :key=\"index\">\n            <table-selector\n              v-model=\"form[item.key]\"\n              :el-props='{\n              pagination: true,\n              columns: item.setting.searchField}'\n            :dict=\"{\n              url:'/api/system/system_config/get_table_data/'+item.id+'/',\n               value: item.setting.primarykey,\n                label: item.setting.field,\n            }\"\n            :pagination=\"true\"\n              :multiple=\"item.form_item_type_label ==='manytomany'\"\n            ></table-selector>\n          </div>\n          <!--   数组       -->\n          <div v-else-if=\"item.form_item_type_label==='array'\" :key=\"index\">\n            <vxe-table\n              border\n              resizable\n              auto-resize\n              show-overflow\n              keep-source\n              :ref=\"'xTable_'+item.key\"\n              height=\"200\"\n              :edit-rules=\"validRules\"\n              :edit-config=\"{trigger: 'click', mode: 'row', showStatus: true}\">\n              <vxe-column field=\"title\" title=\"标题\" :edit-render=\"{autofocus: '.vxe-input--inner'}\">\n                <template #edit=\"{ row }\">\n                  <vxe-input v-model=\"row.title\" type=\"text\"></vxe-input>\n                </template>\n              </vxe-column>\n              <vxe-column field=\"key\" title=\"键名\" :edit-render=\"{autofocus: '.vxe-input--inner'}\">\n                <template #edit=\"{ row }\">\n                  <vxe-input v-model=\"row.key\" type=\"text\"></vxe-input>\n                </template>\n              </vxe-column>\n              <vxe-column field=\"value\" title=\"键值\" :edit-render=\"{}\">\n                <template #edit=\"{ row }\">\n                  <vxe-input v-model=\"row.value\" type=\"text\"></vxe-input>\n                </template>\n              </vxe-column>\n              <vxe-column title=\"操作\" width=\"100\" show-overflow>\n                <template #default=\"{ row,index }\">\n                  <el-popover\n                    placement=\"top\"\n                    width=\"160\"\n                    v-model=\"childRemoveVisible\">\n                    <p>删除后无法恢复,确定删除吗？</p>\n                    <div style=\"text-align: right; margin: 0\">\n                      <el-button size=\"mini\" type=\"text\" @click=\"childRemoveVisible = false\">取消</el-button>\n                      <el-button type=\"primary\" size=\"mini\" @click=\"onRemoveChild(row,index,item.key)\">确定</el-button>\n                    </div>\n                    <el-button type=\"text\" slot=\"reference\">删除</el-button>\n                  </el-popover>\n                </template>\n              </vxe-column>\n            </vxe-table>\n            <div>\n              <el-button size=\"mini\" @click=\"onAppend('xTable_'+item.key)\">追加</el-button>\n            </div>\n          </div>\n        </el-col>\n        <el-col :span=\"4\" :offset=\"1\">\n          <el-input v-if=\"item.edit\" v-model=\"item.new_key\" style=\"width: 200px;\" placeholder=\"请输入变量key\">\n            <template slot=\"prepend\">\n              <span style=\"padding: 0px 5px\">{{ editableTabsItem.key }}</span>\n              </template>\n          </el-input>\n          <span v-else>{{ editableTabsItem.key }}.{{ item.key }}</span>\n          </el-col>\n        <el-col :span=\"3\" :offset=\"1\">\n          <el-switch\n          v-model=\"item.status\"\n          active-color=\"#13ce66\"\n          inactive-color=\"#ff4949\">\n        </el-switch>\n        </el-col>\n        <el-col :span=\"2\">\n          <el-button v-if=\"item.edit\" size=\"mini\" type=\"primary\"  icon=\"el-icon-success\" @click=\"onEditSave(item)\"></el-button>\n          <el-button v-else size=\"mini\" type=\"primary\"  icon=\"el-icon-edit\" @click=\"onEdit(index)\"></el-button>\n           <el-popconfirm\n              title=\"确定删除该条数据吗？\"\n              @confirm=\"onDelRow(item)\"\n            >\n              <el-button size=\"mini\" type=\"danger\" icon=\"el-icon-delete\" slot=\"reference\"></el-button>\n            </el-popconfirm>\n\n        </el-col>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"onSubmit\">确定</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport * as api from '../api'\nimport util from '@/libs/util'\nimport tableSelector from '@/components/table-selector/table-selector'\n\nexport default {\n  name: 'formContent',\n  inject: ['refreshView'],\n  components: {\n    tableSelector\n  },\n  props: {\n    options: {\n      type: Object\n    },\n    editableTabsItem: {\n      type: Object\n    }\n  },\n  watch: {\n    options: {\n      handler (nv) {\n        if (nv && nv.id) {\n          this.getInit()\n        }\n      },\n      immediate: true\n    }\n  },\n  data () {\n    return {\n      formList: [],\n      form: {},\n      childTableData: [],\n      childRemoveVisible: false,\n      validRules: {\n        title: [\n          {\n            required: true,\n            message: '必须填写'\n          }\n        ],\n        key: [\n          {\n            required: true,\n            message: '必须填写'\n          }\n        ],\n        value: [\n          {\n            required: true,\n            message: '必须填写'\n          }\n        ]\n      },\n      uploadUrl: util.baseURL() + 'api/system/file/',\n      uploadHeaders: {\n        Authorization: 'JWT ' + util.cookies.get('token')\n      },\n      dialogImageUrl: '',\n      dialogImgVisible: false,\n      uploadImgKey: null\n    }\n  },\n  methods: {\n    // 获取数据\n    getInit () {\n      const that = this\n      api.GetList({ parent: this.options.id, limit: 999 }).then(res => {\n        const { data } = res.data\n        this.formList = data\n        const form = {}\n        for (const item of data) {\n          const key = item.key\n          if (item.value) {\n            form[key] = item.value\n          } else {\n            if ([5, 12, 14].indexOf(item.form_item_type) !== -1) {\n              form[key] = []\n            } else {\n              form[key] = undefined\n            }\n          }\n          if (item.form_item_type_label === 'array') {\n            that.$nextTick(() => {\n              const tableName = 'xTable_' + key\n              const $table = this.$refs[tableName][0]\n              $table.loadData(item.chinldern)\n            })\n          }\n        }\n        this.form = JSON.parse(JSON.stringify(form))\n      })\n    },\n    // 提交数据\n    onSubmit () {\n      const that = this\n      const form = JSON.parse(JSON.stringify(this.form))\n      const keys = Object.keys(form)\n      const values = Object.values(form)\n      for (const index in this.formList) {\n        const item = this.formList[index]\n        // eslint-disable-next-line camelcase\n        const form_item_type_label = item.form_item_type_label\n\n        // eslint-disable-next-line camelcase\n        if (form_item_type_label === 'array') {\n          const parentId = item.id\n          const tableName = 'xTable_' + item.key\n          const $table = this.$refs[tableName][0]\n          const { tableData } = $table.getTableData()\n          for (const child of tableData) {\n            if (!child.id && child.key && child.value) {\n              child.parent = parentId\n              child.id = null\n              this.formList.push(child)\n            }\n          }\n          // 必填项的判断\n          for (const arr of item.rule) {\n            if (arr.required && tableData.length === 0) {\n              that.$message.error(item.title + '不能为空')\n              return\n            }\n          }\n          item.value = tableData\n        }\n        // 赋值操作\n        keys.map((mapKey, mapIndex) => {\n          if (mapKey === item.key) {\n            if (item.form_item_type_label !== 'array') {\n              item.value = values[mapIndex]\n            }\n            // 必填项的验证\n            if (['img', 'imgs'].indexOf(item.form_item_type_label) > -1) {\n              for (const arr of item.rule) {\n                if (arr.required && item.value === null) {\n                  that.$message.error(item.title + '不能为空')\n                  return\n                }\n              }\n            }\n          }\n        })\n      }\n      that.$refs.form.clearValidate()\n      that.$refs.form.validate((valid) => {\n        if (valid) {\n          api.saveContent(this.options.id,\n            this.formList).then(res => {\n            this.$message.success('保存成功')\n            this.refreshView()\n          })\n        } else {\n          console.log('error submit!!')\n          return false\n        }\n      })\n    },\n    // 追加\n    async onAppend (tableName) {\n      const $table = this.$refs[tableName][0]\n      const { tableData } = $table.getTableData()\n      const tableLength = tableData.length\n      if (tableLength === 0) {\n        const { row: newRow } = $table.insert()\n        console.log(newRow)\n      } else {\n        const errMap = await $table.validate().catch(errMap => errMap)\n        if (errMap) {\n          this.$message.error('校验不通过！')\n        } else {\n          const { row: newRow } = $table.insert()\n          console.log(newRow)\n        }\n      }\n    },\n    // 子表删除\n    onRemoveChild (row, index, refName) {\n      console.log(row, index)\n      if (row.id) {\n        api.DelObj(row.id).then(res => {\n          this.refreshView()\n        })\n      } else {\n        this.childTableData.splice(index, 1)\n        const tableName = 'xTable_' + refName\n        const tableData = this.$refs[tableName][0].remove(row)\n        console.log(tableData)\n      }\n    },\n    // 图片预览\n    handlePictureCardPreview (file) {\n      this.dialogImageUrl = file.url\n      this.dialogImgVisible = true\n    },\n    // 判断是否为图片\n    // 封装一个判断图片文件后缀名的方法\n    isImage (fileName) {\n      if (typeof fileName !== 'string') return\n      const name = fileName.toLowerCase()\n      return name.endsWith('.png') || name.endsWith('.jpeg') || name.endsWith('.jpg') || name.endsWith('.png') || name.endsWith('.bmp')\n    },\n    // 上传成功\n    handleUploadSuccess (response, file, fileList, imgKey) {\n      const that = this\n      const {\n        code,\n        msg\n      } = response\n      if (code === 2000) {\n        const { url } = response.data\n        const { name } = file\n        const type = that.isImage(name)\n        if (!type) {\n          this.$message.error('只允许上传图片')\n        } else {\n          const uploadImgKey = that.form[imgKey]\n          if (!uploadImgKey || uploadImgKey === '') {\n            that.form[imgKey] = []\n          }\n          // console.log(len)\n          const dict = {\n            name: name,\n            url: util.baseURL() + url\n          }\n          that.form[imgKey].push(dict)\n        }\n      } else {\n        this.$message.error('上传失败,' + JSON.stringify(msg))\n      }\n    },\n    // 上传失败\n    handleError () {\n      this.$message.error('上传失败')\n    },\n    // 上传超出限制\n    handleExceed () {\n      this.$message.error('超过文件上传数量')\n    },\n    // 删除时的钩子\n    beforeRemove (file, fileList, key) {\n      var index = 0\n      this.form[key].map((value, inx) => {\n        if (value.uid === file.uid) index = inx\n      })\n      this.form[key].splice(index, 1)\n    },\n    // 配置的行删除\n    onDelRow (obj) {\n      api.DelObj(obj.id).then(res => {\n        this.refreshView()\n      })\n    },\n    // 行编辑\n    onEdit (index) {\n      const that = this\n      that.$set(that.formList[index], 'new_key', that.formList[index].key)\n      that.$set(that.formList[index], 'edit', true)\n    },\n    // 行编辑保存\n    onEditSave (obj) {\n      obj.key = JSON.parse(JSON.stringify(obj.new_key))\n      api.UpdateObj(obj).then(res => {\n        this.refreshView()\n      })\n    }\n  },\n  mounted () {\n    // this.getInit()\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}