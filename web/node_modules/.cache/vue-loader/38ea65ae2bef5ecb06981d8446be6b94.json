{"remainingRequest":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/raviailani/Downloads/django-vue-admin/web/node_modules/d2p-extends/src/file-uploader/lib/images-format.vue?vue&type=style&index=0&id=a255f2a2&lang=scss&","dependencies":[{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/d2p-extends/src/file-uploader/lib/images-format.vue","mtime":1674694550315},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/css-loader/dist/cjs.js","mtime":1674694549148},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1674694549593},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/postcss-loader/src/index.js","mtime":1674694549280},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/sass-loader/dist/cjs.js","mtime":1674694548949},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/cache-loader/dist/cjs.js","mtime":1674694548948},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/index.js","mtime":1674694549360}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouZDJwLWltYWdlLWZvcm1hdHsNCiAgLmltYWdlLXNsb3R7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOw0KICAgIGhlaWdodDogMTAwJTsNCiAgfQ0KICAuZWwtaW1hZ2Utdmlld2VyX19jbG9zZSB7DQogICAgY29sb3I6ICNmZmY7DQogIH0NCn0NCg0K"},{"version":3,"sources":["images-format.vue"],"names":[],"mappings":";AAwHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"images-format.vue","sourceRoot":"node_modules/d2p-extends/src/file-uploader/lib","sourcesContent":["<template>\r\n  <span class=\"d2p-image-format\">\r\n     <el-image\r\n       :style=\"{width:imgWidth,height:imgHeight,'margin-right':'10px',border:'1px solid #eee'}\"\r\n       v-for=\"url in urls\"  :key=\"url\" :src=\"url\"\r\n       v-bind=\"_elProps\" >\r\n        <div slot=\"placeholder\" class=\"image-slot\">\r\n            <img style=\"max-width:50%\" src=\"./loading-spin.svg\">\r\n          </div>\r\n       <template v-if=\"error==='slot'\">\r\n         <div slot=\"error\" class=\"image-slot\">\r\n            <slot name=\"error\"/>\r\n         </div>\r\n       </template>\r\n       <template v-else-if=\"error\">\r\n         <div slot=\"error\" class=\"image-slot\">\r\n            <img :src=\"error\" width=\"50%\"/>\r\n         </div>\r\n       </template>\r\n     </el-image>\r\n  </span>\r\n</template>\r\n\r\n<script>\r\n// 图片行展示组件\r\nexport default {\r\n  name: 'd2p-images-format',\r\n  props: {\r\n    // 图片的url\r\n    // 'url' 或 ['url1','url2']\r\n    value: {\r\n      type: [String, Array],\r\n      require: true\r\n    },\r\n    // 图片的宽度设置\r\n    width: {\r\n      require: false,\r\n      default: 30\r\n    },\r\n    // 图片的高度设置\r\n    height: {\r\n      require: false,\r\n      default: 30\r\n    },\r\n    fit: {\r\n      default: 'contain'\r\n    },\r\n    // 内部封装[el-image](https://element.eleme.cn/#/zh-CN/component/image)组件的属性参数<br/>\r\n    elProps: {\r\n      type: Object\r\n    },\r\n    error: {\r\n      default: undefined\r\n    },\r\n    // 构建下载url方法\r\n    buildUrl: {\r\n      type: Function,\r\n      default: function (value, item) { return value }\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n    }\r\n  },\r\n  computed: {\r\n    urls () {\r\n      const urls = []\r\n      if (this.value == null || this.value === '') {\r\n        return urls\r\n      }\r\n      if (typeof (this.value) === 'string') {\r\n        urls.push(this.value)\r\n      } else if (this.value instanceof Array) {\r\n        for (const item of this.value) {\r\n          if (item == null) {\r\n            continue\r\n          }\r\n          if (item.url != null) {\r\n            urls.push(item.url)\r\n          } else {\r\n            urls.push(item)\r\n          }\r\n        }\r\n      } else {\r\n        urls.push(this.value.url)\r\n      }\r\n      const arr = []\r\n      for (const url of urls) {\r\n        arr.push(this.buildUrl(url))\r\n      }\r\n      return arr\r\n    },\r\n    imgHeight () {\r\n      if (typeof (this.height) === 'number') {\r\n        return this.height + 'px'\r\n      }\r\n      return this.height\r\n    },\r\n    imgWidth () {\r\n      if (typeof (this.width) === 'number') {\r\n        return this.width + 'px'\r\n      }\r\n      return this.width\r\n    },\r\n    _elProps () {\r\n      const defaultElProps = { fit: this.fit, previewSrcList: this.urls }\r\n      Object.assign(defaultElProps, this.elProps)\r\n      return defaultElProps\r\n    }\r\n  },\r\n  mounted () {\r\n  },\r\n  methods: {\r\n    handleClick () {\r\n      // this.$emit('input', !this.value)\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n.d2p-image-format{\r\n  .image-slot{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 100%;\r\n  }\r\n  .el-image-viewer__close {\r\n    color: #fff;\r\n  }\r\n}\r\n\r\n</style>\r\n"]}]}