{"remainingRequest":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/raviailani/Downloads/django-vue-admin/web/node_modules/d2p-extends/src/full-editor/lib/d2-ueditor/index.vue?vue&type=style&index=0&id=a2e47132&lang=scss&","dependencies":[{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/d2p-extends/src/full-editor/lib/d2-ueditor/index.vue","mtime":1674694550331},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/css-loader/dist/cjs.js","mtime":1674694549148},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1674694549593},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/postcss-loader/src/index.js","mtime":1674694549280},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/sass-loader/dist/cjs.js","mtime":1674694548949},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/cache-loader/dist/cjs.js","mtime":1674694548948},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/index.js","mtime":1674694549360}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5kMnAtdWVkaXRvcnsKICAuZWR1aS1kZWZhdWx0IC5lZHVpLXRvb2xiYXIgLmVkdWktYnV0dG9uLCAuZWR1aS1kZWZhdWx0IC5lZHVpLXRvb2xiYXIgLmVkdWktc3BsaXRidXR0b24sIC5lZHVpLWRlZmF1bHQgLmVkdWktdG9vbGJhciAuZWR1aS1tZW51YnV0dG9uLCAuZWR1aS1kZWZhdWx0IC5lZHVpLXRvb2xiYXIgLmVkdWktY29tYm94IHsKICAgIGxpbmUtaGVpZ2h0OiBub3JtYWw7CiAgfQogIC5lZHVpLWVkaXRvcntsaW5lLWhlaWdodDogbm9ybWFsO2JveC1zaXppbmc6IGJvcmRlci1ib3g7fQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAoMA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/d2p-extends/src/full-editor/lib/d2-ueditor","sourcesContent":["<template>\n  <div class=\"d2p-ueditor\">\n    <script ref=\"script\" :name=\"name\" type=\"text/plain\"></script>\n  </div>\n</template>\n\n<script>\nimport LoadEvent from './utils/Event'\nimport { d2CrudPlus } from '../../../utils/d2-crud-plus'\nimport defaultConfig from './utils/config'\n/**\n * ueditor富文本编辑器包装，支持v-model绑定\n */\nexport default {\n  name: 'd2p-ueditor',\n  mixins: [d2CrudPlus.inputBase],\n  props: {\n    // 富文本\n    value: {\n      type: String,\n      default: ''\n    },\n    // 编辑器配置\n    // 请参考：http://fex.baidu.com/ueditor/#start-config\n    config: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    // 编辑器名称\n    name: {\n      type: String,\n      default: ''\n    }\n  },\n  data () {\n    return {\n      editor: undefined,\n      mixedConfig: {}\n    }\n  },\n  watch: {\n    disabled (value) {\n      if (this.editor) {\n        value ? this.editor.setDisabled() : this.editor.setEnabled()\n      }\n    },\n    // 对外提供 v-model\n    value (value) {\n      if (this.dispatch) {\n        this.dispatch('ElFormItem', 'el.form.blur')\n      }\n      this.$emit('change', value)\n      if (this.editor.getContent() === value) {\n        return\n      }\n      this.setValue(value)\n    }\n  },\n  created () {\n    this.initValue = this.value\n  },\n  mounted () {\n    Object.assign(this.mixedConfig, defaultConfig)\n    Object.assign(this.mixedConfig, this.config)\n    this._checkDependencies().then(() => {\n      this.$refs.script ? this._initEditor() : this.$nextTick(() => this._initEditor())\n    })\n  },\n  methods: {\n    onInput (event) {\n      this.currentValue = event\n      this.$emit('input', event)\n    },\n    onChange (event) {\n      this.$emit('change', event)\n    },\n    // 实例化编辑器\n    _initEditor () {\n      this.$refs.script.id = this.id = 'editor_' + Math.random().toString(16).slice(-6) // 这么做是为了支持 Vue SSR，因为如果把 id 属性放在 data 里会导致服务端和客户端分别计算该属性的值，而造成 id 不匹配无法初始化的 BUG\n      this.$emit('beforeInit', this.id, this.mixedConfig)\n      this.editor = window.UE.getEditor(this.id, this.mixedConfig)\n      this.editor.addListener('ready', () => {\n        if (this.status === 2) { // 使用 keep-alive 组件会出现这种情况\n          this.editor.setContent(this.value)\n        } else {\n          this.status = 2\n          this.$emit('ready', { vm: this, editor: this.editor })\n          if (this.initValue) {\n            this.editor.setContent(this.initValue)\n          }\n        }\n        if (this.editor) {\n          this.disabled ? this.editor.setDisabled() : this.editor.setEnabled()\n        }\n\n        this.editor.addListener('contentChange', this.contentChangeHandler)\n      })\n    },\n    // 检测依赖,确保 UEditor 资源文件已加载完毕\n    _checkDependencies () {\n      return new Promise((resolve, reject) => {\n        // 判断ueditor.config.js和ueditor.all.js是否均已加载(仅加载完ueditor.config.js时UE对象和UEDITOR_CONFIG对象存在,仅加载完ueditor.all.js时UEDITOR_CONFIG对象存在,但为空对象)\n        const scriptsLoaded = !!window.UE && !!window.UEDITOR_CONFIG && Object.keys(window.UEDITOR_CONFIG).length !== 0 && !!window.UE.getEditor\n        if (scriptsLoaded) {\n          resolve()\n        } else if (window.$loadEnv) { // 利用订阅发布，确保同时渲染多个组件时，不会重复创建script标签\n          window.$loadEnv.on('scriptsLoaded', () => {\n            resolve()\n          })\n        } else {\n          window.$loadEnv = new LoadEvent()\n          // 如果在其他地方只引用ueditor.all.min.js，在加载ueditor.config.js之后仍需要重新加载ueditor.all.min.js，所以必须确保ueditor.config.js已加载\n          this._loadConfig().then(() => this._loadCore()).then(() => {\n            resolve()\n            window.$loadEnv.emit('scriptsLoaded')\n          })\n        }\n      })\n    },\n    _loadConfig () {\n      return new Promise((resolve, reject) => {\n        if (window.UE && window.UEDITOR_CONFIG && Object.keys(window.UEDITOR_CONFIG).length !== 0) {\n          resolve()\n          return\n        }\n        const configScript = document.createElement('script')\n        configScript.type = 'text/javascript'\n        configScript.src = this.mixedConfig.UEDITOR_HOME_URL + 'ueditor.config.js'\n        document.getElementsByTagName('head')[0].appendChild(configScript)\n        configScript.onload = function () {\n          if (window.UE && window.UEDITOR_CONFIG && Object.keys(window.UEDITOR_CONFIG).length !== 0) {\n            resolve()\n          } else {\n            console.error('加载ueditor.config.js失败,请检查您的配置地址UEDITOR_HOME_URL填写是否正确!\\n', configScript.src)\n          }\n        }\n      })\n    },\n    _loadCore () {\n      return new Promise((resolve, reject) => {\n        if (window.UE && window.UE.getEditor) {\n          resolve()\n          return\n        }\n        const coreScript = document.createElement('script')\n        coreScript.type = 'text/javascript'\n        coreScript.src = this.mixedConfig.UEDITOR_HOME_URL + 'ueditor.all.min.js'\n        document.getElementsByTagName('head')[0].appendChild(coreScript)\n        coreScript.onload = function () {\n          if (window.UE && window.UE.getEditor) {\n            resolve()\n          } else {\n            console.error('加载ueditor.all.min.js失败,请检查您的配置地址UEDITOR_HOME_URL填写是否正确!\\n', coreScript.src)\n          }\n        }\n      })\n    },\n    contentChangeHandler () {\n      this.$emit('input', this.editor.getContent())\n    },\n    // 设置内容\n    _setContent (value) {\n      if (value !== this.editor.getContent()) {\n        this.editor.setContent(value)\n      }\n    },\n    setValue (value) {\n      switch (this.status) {\n        case 0:\n        case 1:\n          this.initValue = value\n          break\n        case 2:\n          this._setContent(value)\n          break\n      }\n    }\n  },\n  beforeDestroy () {\n    if (this.editor && this.editor.destroy) {\n      this.editor.destroy()\n    }\n  }\n}\n</script>\n<style lang=\"scss\">\n  .d2p-ueditor{\n    .edui-default .edui-toolbar .edui-button, .edui-default .edui-toolbar .edui-splitbutton, .edui-default .edui-toolbar .edui-menubutton, .edui-default .edui-toolbar .edui-combox {\n      line-height: normal;\n    }\n    .edui-editor{line-height: normal;box-sizing: border-box;}\n  }\n</style>\n"]}]}