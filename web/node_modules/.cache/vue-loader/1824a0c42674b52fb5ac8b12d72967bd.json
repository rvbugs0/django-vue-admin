{"remainingRequest":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/raviailani/Downloads/django-vue-admin/web/node_modules/d2p-extends/src/file-uploader/lib/cropper/index.vue?vue&type=style&index=0&id=cdcaeeda&lang=scss&scoped=true&","dependencies":[{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/d2p-extends/src/file-uploader/lib/cropper/index.vue","mtime":1674694550323},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/css-loader/dist/cjs.js","mtime":1674694549148},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1674694549593},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/postcss-loader/src/index.js","mtime":1674694549280},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/sass-loader/dist/cjs.js","mtime":1674694548949},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/cache-loader/dist/cjs.js","mtime":1674694548948},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/index.js","mtime":1674694549360}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiRhcmVhLWhlaWdodDogMjgwcHg7Ci5jcm9wcGVyLXVwbG9hZGVyIHsKICAmLXdyYXAgewogICAgZGlzcGxheTogZmxleDsKICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICAgIHdpZHRoOiAxMDAlOwogICAgaGVpZ2h0OiAxMDAlOwogIH0KCiAgJl9sZWZ0IHsKICAgIGZvbnQtc2l6ZTogMTNweDsKICAgIGNvbG9yOiAjOTk5OTk5OwogICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgYmFja2dyb3VuZDogI2VjZjJmNjsKICAgIGZsZXgtZ3Jvdzo1OwogICAgbWFyZ2luOjEwcHg7CiAgICBkaXNwbGF5OiBmbGV4OwogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgZmxleC1kaXJlY3Rpb246ICBjb2x1bW4KICB9CgogICZfX2Nob29zZSB7CiAgICBwIHsKICAgICAgd2lkdGg6IDEwMCU7CiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIH0KICB9CgogICZfX2VkaXQgewogICAgJi1hcmVhIHsKICAgICAgd2lkdGg6MTAwJTsKICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsKCiAgICAgICYtaW1nIHsKICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjsKICAgICAgfQogICAgfQogICAgLnRvb2wtYmFyewogICAgICBtYXJnaW46MTBweDtwb3NpdGlvbjogYWJzb2x1dGU7Ym90dG9tOiAtNTBweDsKICAgIH0KICB9CgogICR0b3A6IDMwcHg7CgogICZfX3ByZXZpZXcgewogICAgYmFja2dyb3VuZDogI2VjZjJmNjsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIHdpZHRoOiAyMDBweDsKICAgIHBhZGRpbmctdG9wOiAkdG9wOwogICAgZGlzcGxheTogZmxleDsKICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgZm9udC1zaXplOiAxM3B4OwogICAgbWFyZ2luOjEwcHg7CiAgICBwYWRkaW5nOjEwcHg7CiAgICAmLXRpdGxlIHsKICAgICAgY29sb3I6ICM5OTk5OTk7CiAgICB9CiAgICAucHJldmlld3sKICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsKICAgICAgbWFyZ2luOjEwcHg7CiAgICAgIGJvcmRlcjogMXB4ICNjYWNhY2Egc29saWQ7CiAgICB9CiAgICAucm91bmR7CiAgICAgIGJvcmRlci1yYWRpdXM6IDUwMHB4OwogICAgfQoKICAgIGltZyB7CiAgICAgIGJhY2tncm91bmQ6ICNmZmY7CiAgICAgIG1hcmdpbi10b3A6IDVweDsKICAgICAgYm9yZGVyLXJhZGl1czogNTAwcHg7CiAgICB9CgogICAgJi0xMjAgewogICAgICBoZWlnaHQ6IDEyMHB4OwogICAgICB3aWR0aDogMTIwcHg7CiAgICB9CgogICAgJi02NSB7CiAgICAgIGhlaWdodDogNjVweDsKICAgICAgd2lkdGg6IDY1cHg7CiAgICB9CgogICAgJi00MCB7CiAgICAgIGhlaWdodDogMzBweDsKICAgICAgd2lkdGg6IDMwcHg7CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAqaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/d2p-extends/src/file-uploader/lib/cropper","sourcesContent":["<template>\n    <el-dialog class=\"cropper-uploader quying-dialog\" :title=\"title\" :visible.sync=\"dialogVisible\" append-to-body\n               :before-close=\"handleClose\" :close-on-click-modal=\"true\" ref=\"editAvatar\" :width=\"_dialogWidth\" >\n          <div class=\"cropper-uploader-wrap\" >\n            <input type=\"file\" v-show=\"false\" ref=\"fileinput\" :accept=\"accept\" @change=\"handleChange\">\n            <!-- step1 -->\n            <div class=\"cropper-uploader__choose cropper-uploader_left\" v-show=\"!isLoaded\">\n              <el-button round @click=\"handleClick\">+选择图片</el-button>\n              <p>{{_uploadTip}}</p>\n            </div>\n            <!-- step2 -->\n            <div class=\"cropper-uploader__edit cropper-uploader_left\" v-show=\"isLoaded\">\n              <div class=\"cropper-uploader__edit-area\" >\n                    <vue-cropper\n                      ref=\"cropper\"\n                      :src=\"imgSrc\"\n                      preview=\".preview\"\n                      :style=\"{height:_cropperHeight}\"\n                      v-bind=\"_cropper\"\n                    />\n              </div>\n              <div class=\"tool-bar\">\n                <el-button-group>\n                  <el-button round size=\"mini\"  icon=\"el-icon-edit\" @click=\"handleClick\">重新选择</el-button>\n                  <el-button round size=\"mini\" type=\"\"  @click=\"flipX\">左右翻转</el-button>\n                  <el-button round size=\"mini\" type=\"\"  @click=\"flipY\">上下翻转</el-button>\n                  <el-button round size=\"mini\" type=\"\"  icon=\"el-icon-zoom-in\" @click=\"zoom(0.1)\"></el-button>\n                  <el-button round size=\"mini\" type=\"\"  icon=\"el-icon-zoom-out\" @click=\"zoom(-0.1)\"></el-button>\n                  <el-button round size=\"mini\" type=\"\" icon=\"el-icon-refresh-right\" @click=\"rotate(90)\">旋转</el-button>\n                  <el-button round size=\"mini\" type=\"\" icon=\"el-icon-refresh\" @click=\"reset\">重置</el-button>\n                </el-button-group>\n              </div>\n            </div>\n            <div class=\"cropper-uploader__preview\">\n              <span class=\"cropper-uploader__preview-title\">预览</span>\n              <div class=\"cropper-uploader__preview-120 preview\"></div>\n              <div class=\"cropper-uploader__preview-65 preview\" :class=\"{'round': _cropper.aspectRatio===1}\"></div>\n            </div>\n          </div>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"handleClose\" size=\"mini\">取 消</el-button>\n        <el-button type=\"primary\" size=\"mini\" @click=\"doCropper()\">确 定</el-button>\n      </div>\n    </el-dialog>\n</template>\n\n<script>\nimport VueCropper from './vue-cropper'\nimport log from '../../../utils/util.log'\n// 图片裁剪对话框，封装cropperjs\nexport default {\n  name: 'd2p-cropper',\n  components: {\n    VueCropper\n  },\n  props: {\n    // 对话框标题\n    title: {\n      type: String,\n      default: '图片裁剪'\n    },\n    // cropper的高度，默认为浏览器可视窗口高度的40%，最小270\n    cropperHeight: {\n      type: [String, Number]\n    },\n    // 对话框宽度，默认50%\n    dialogWidth: {\n      type: [String, Number],\n      default: '50%'\n    },\n    // 图片大小限制，单位MB，0为不限制\n    maxSize: {\n      type: Number,\n      default: 5\n    },\n    // 上传提示\n    uploadTip: {\n      type: String\n    },\n    // cropperjs的参数，详见：https://github.com/fengyuanchen/cropperjs\n    cropper: {\n      type: Object\n    },\n    // 可接收的文件后缀\n    accept: {\n      type: String,\n      default: '.jpg, .jpeg, .png, .gif, .webp'\n    },\n    // 输出类型，blob,dataUrl,all\n    output: {\n      type: String,\n      default: 'blob'// blob\n    }\n  },\n  data () {\n    return {\n      dialogVisible: false,\n      isLoaded: false,\n      imgSrc: '',\n      data: null,\n      file: undefined,\n      scale: {\n        x: 1,\n        y: 1\n      }\n    }\n  },\n  computed: {\n    _uploadTip () {\n      if (this.uploadTip != null && this.uploadTip !== '') {\n        return this.uploadTip\n      }\n      if (this.maxSize > 0) {\n        return `只支持${this.accept.replace(/,/g, '、')},大小不超过${this.maxSize}M`\n      } else {\n        return `只支持${this.accept},大小无限制`\n      }\n    },\n    _cropper () {\n      const def = {\n        aspectRatio: 1,\n        ready: this.ready\n      }\n      if (this.cropper == null) {\n        return def\n      }\n      const assign = Object.assign(def, this.cropper)\n      log.debug('cropper options:', assign)\n      return assign\n    },\n    _cropperHeight () {\n      let height = this.cropperHeight\n      if (height == null) {\n        height = document.documentElement.clientHeight * 0.55\n        if (height < 270) {\n          height = 270\n        }\n      }\n      if (typeof (height) === 'number') {\n        height += 'px'\n      }\n      return height\n    },\n    _dialogWidth () {\n      let width = this.dialogWidth\n      if (width == null) {\n        width = '50%'\n      }\n      if (typeof (width) === 'number') {\n        width += 'px'\n      }\n      return width\n    }\n  },\n  methods: {\n    open (url) {\n      this.dialogVisible = true\n      if (url != null && url !== '') {\n        this.imgSrc = url\n      }\n    },\n    close () {\n      this.dialogVisible = false\n    },\n    clear () {\n      this.isLoaded = false\n      if (this.$refs.fileinput != null) {\n        this.$refs.fileinput.value = null\n      }\n      if (this.$refs.cropper != null) {\n        this.$refs.cropper.clear()\n      }\n    },\n    // 获取vue-cropper组件对象\n    getCropper () {\n      return this.$refs.cropper\n    },\n    ready (event) {\n      log.debug('cropper ready:', event)\n      // this.zoom(-0.3)\n    },\n    preventDefault (e) {\n      e.preventDefault()\n      return false\n    },\n    // 点击按钮打开文件资源窗口\n    handleClick (e) {\n      this.$refs.fileinput.click()\n    },\n    // 检测选择的文件是否合适\n    checkFile (file) {\n      // 仅限图片\n      if (file.type.indexOf('image') === -1) {\n        this.$message({\n          message: '请选择合适的文件类型',\n          type: 'warning'\n        })\n        return false\n      }\n      // 超出大小\n      if (this.maxSize > 0 && file.size / 1024 / 1024 > this.maxSize) {\n        this.$message({\n          message: '图片大小超出最大限制（' + this.maxSize + 'MB），请重新选择',\n          type: 'warning'\n        })\n        return false\n      }\n      return true\n    },\n\n    // 触发input框的change事件选择图片\n    handleChange (e) {\n      e.preventDefault()\n      const files = e.target.files || e.dataTransfer.files\n      this.isLoaded = true\n      const file = files[0]\n      if (this.checkFile(file)) {\n        this.file = file\n        this.setImage(e)\n        // setTimeout(() => {\n        //   this.zoom(-0.3)\n        // }, 1)\n      }\n    },\n    // 点击关闭弹窗\n    handleClose () {\n      this.dialogVisible = false\n      this.$emit('cancel')\n    },\n    doCropper () {\n      if (!this.isLoaded) {\n        this.$message('请先选择图片')\n        return\n      }\n      this.dialogVisible = false\n      this.doOutput(this.file)\n    },\n    doOutput (file) {\n      log.debug('output this:', this)\n      const ret = { file }\n      if (this.output === 'all') {\n        this.getCropImageBlob((blob) => {\n          const dataUrl = this.cropImageDataUrl()\n          ret.blob = blob\n          ret.dataUrl = dataUrl\n          this.$emit('done', ret)\n        })\n      }\n\n      if (this.output === 'blob') {\n        this.getCropImageBlob((blob) => {\n          ret.blob = blob\n          this.$emit('done', ret)\n        })\n      }\n      if (this.output === 'dataUrl') {\n        ret.dataUrl = this.cropImageDataUrl()\n        this.$emit('done', ret)\n      }\n    },\n    emit (result) {\n      this.$emit('done', result)\n    },\n    cropImageDataUrl () {\n      // get image data for post processing, e.g. upload or setting image src\n      return this.$refs.cropper.getCroppedCanvas().toDataURL()\n    },\n    getCropImageBlob (callback, type, quality) {\n      this.$refs.cropper.getCroppedCanvas().toBlob(callback, type, quality)\n    },\n    flipX () {\n      this.$refs.cropper.scaleX(this.scale.x *= -1)\n    },\n    flipY () {\n      this.$refs.cropper.scaleY(this.scale.y *= -1)\n    },\n    getCropBoxData () {\n      this.data = JSON.stringify(this.$refs.cropper.getCropBoxData(), null, 4)\n    },\n    getData () {\n      this.data = JSON.stringify(this.$refs.cropper.getData(), null, 4)\n    },\n    move (offsetX, offsetY) {\n      this.$refs.cropper.move(offsetX, offsetY)\n    },\n    reset () {\n      this.$refs.cropper.reset()\n    },\n    rotate (deg) {\n      this.$refs.cropper.rotate(deg)\n    },\n    setCropBoxData () {\n      if (!this.data) return\n      this.$refs.cropper.setCropBoxData(JSON.parse(this.data))\n    },\n    setData () {\n      if (!this.data) return\n      this.$refs.cropper.setData(JSON.parse(this.data))\n    },\n    setImage (e) {\n      const file = e.target.files[0]\n      if (file.type.indexOf('image/') === -1) {\n        this.$message('Please select an image file')\n        return\n      }\n      if (typeof FileReader === 'function') {\n        const reader = new FileReader()\n        reader.onload = (event) => {\n          this.imgSrc = event.target.result\n          // rebuild cropperjs with the updated source\n          this.$refs.cropper.replace(event.target.result)\n        }\n        reader.readAsDataURL(file)\n      } else {\n        this.$message('Sorry, FileReader API not supported')\n      }\n    },\n    showFileChooser () {\n      this.$refs.input.click()\n    },\n    zoom (percent) {\n      this.$refs.cropper.relativeZoom(percent)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  $area-height: 280px;\n  .cropper-uploader {\n    &-wrap {\n      display: flex;\n      justify-content: space-between;\n      width: 100%;\n      height: 100%;\n    }\n\n    &_left {\n      font-size: 13px;\n      color: #999999;\n      position: relative;\n      background: #ecf2f6;\n      flex-grow:5;\n      margin:10px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      flex-direction:  column\n    }\n\n    &__choose {\n      p {\n        width: 100%;\n        text-align: center;\n      }\n    }\n\n    &__edit {\n      &-area {\n        width:100%;\n        overflow: hidden;\n\n        &-img {\n          object-fit: cover;\n        }\n      }\n      .tool-bar{\n        margin:10px;position: absolute;bottom: -50px;\n      }\n    }\n\n    $top: 30px;\n\n    &__preview {\n      background: #ecf2f6;\n      text-align: center;\n      width: 200px;\n      padding-top: $top;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      font-size: 13px;\n      margin:10px;\n      padding:10px;\n      &-title {\n        color: #999999;\n      }\n      .preview{\n        overflow: hidden;\n        margin:10px;\n        border: 1px #cacaca solid;\n      }\n      .round{\n        border-radius: 500px;\n      }\n\n      img {\n        background: #fff;\n        margin-top: 5px;\n        border-radius: 500px;\n      }\n\n      &-120 {\n        height: 120px;\n        width: 120px;\n      }\n\n      &-65 {\n        height: 65px;\n        width: 65px;\n      }\n\n      &-40 {\n        height: 30px;\n        width: 30px;\n      }\n    }\n  }\n</style>\n"]}]}