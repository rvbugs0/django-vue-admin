{"remainingRequest":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/raviailani/Downloads/django-vue-admin/web/src/views/system/user/index.vue?vue&type=style&index=0&id=1930a3c4&lang=scss&","dependencies":[{"path":"/Users/raviailani/Downloads/django-vue-admin/web/src/views/system/user/index.vue","mtime":1674694301504},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/css-loader/dist/cjs.js","mtime":1674694549148},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1674694549593},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/postcss-loader/src/index.js","mtime":1674694549280},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/sass-loader/dist/cjs.js","mtime":1674694548949},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/cache-loader/dist/cjs.js","mtime":1674694548948},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/index.js","mtime":1674694549360}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci55eHRJbnB1dCB7CiAgLmVsLWZvcm0taXRlbV9fbGFiZWwgewogICAgY29sb3I6ICM0OWExZmY7CiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AA0NA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/system/user","sourcesContent":["<template>\n  <d2-container :class=\"{ 'page-compact': crud.pageOptions.compact }\">\n    <d2-crud-x\n      ref=\"d2Crud\"\n      v-bind=\"_crudProps\"\n      v-on=\"_crudListeners\"\n      @resetPassword=\"resetPassword\"\n    >\n      <div slot=\"header\">\n        <crud-search\n          ref=\"search\"\n          :options=\"crud.searchOptions\"\n          @submit=\"handleSearch\"\n        />\n        <el-button-group>\n          <el-button\n            size=\"small\"\n            v-permission=\"'Create'\"\n            type=\"primary\"\n            @click=\"addRow\"\n          >\n            <i class=\"el-icon-plus\" /> 新增\n          </el-button>\n          <el-button size=\"small\" type=\"danger\" @click=\"batchDelete\">\n            <i class=\"el-icon-delete\"></i> 批量删除\n          </el-button>\n          <el-button\n            size=\"small\"\n            type=\"warning\"\n            @click=\"onExport\"\n            v-permission=\"'Export'\"\n            ><i class=\"el-icon-download\" /> 导出\n          </el-button>\n          <importExcel\n            api=\"api/system/user/\"\n            v-permission=\"'Import'\"\n            >导入\n          </importExcel>\n        </el-button-group>\n        <crud-toolbar\n          :search.sync=\"crud.searchOptions.show\"\n          :compact.sync=\"crud.pageOptions.compact\"\n          :columns=\"crud.columns\"\n          @refresh=\"doRefresh()\"\n          @columns-filter-changed=\"handleColumnsFilterChanged\"\n        />\n      </div>\n      <span slot=\"PaginationPrefixSlot\" class=\"prefix\">\n        <el-button\n          class=\"square\"\n          size=\"mini\"\n          title=\"批量删除\"\n          @click=\"batchDelete\"\n          icon=\"el-icon-delete\"\n          :disabled=\"!multipleSelection || multipleSelection.length == 0\"\n        />\n      </span>\n    </d2-crud-x>\n    <el-dialog\n      title=\"密码重置\"\n      :visible.sync=\"dialogFormVisible\"\n      :close-on-click-modal=\"false\"\n      width=\"30%\"\n    >\n      <el-form :model=\"resetPwdForm\" ref=\"resetPwdForm\" :rules=\"passwordRules\">\n        <el-form-item label=\"密码\" prop=\"pwd\">\n          <el-input\n            v-model=\"resetPwdForm.pwd\"\n            type=\"password\"\n            show-password\n            clearable\n            autocomplete=\"off\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"再次输入密码\" prop=\"pwd2\">\n          <el-input\n            v-model=\"resetPwdForm.pwd2\"\n            type=\"password\"\n            show-password\n            clearable\n            autocomplete=\"off\"\n          ></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"resetPwdSubmit\">重 置</el-button>\n      </div>\n    </el-dialog>\n  </d2-container>\n</template>\n\n<script>\nimport * as api from './api'\nimport { crudOptions } from './crud'\nimport { d2CrudPlus } from 'd2-crud-plus'\nexport default {\n  name: 'user',\n  mixins: [d2CrudPlus.crud],\n  data () {\n    var validatePass = (rule, value, callback) => {\n      const pwdRegex = new RegExp('(?=.*[0-9])(?=.*[a-zA-Z]).{8,30}')\n      if (value === '') {\n        callback(new Error('请输入密码'))\n      } else if (!pwdRegex.test(value)) {\n        callback(new Error('您的密码复杂度太低(密码中必须包含字母、数字)'))\n      } else {\n        if (this.resetPwdForm.pwd2 !== '') {\n          this.$refs.resetPwdForm.validateField('pwd2')\n        }\n        callback()\n      }\n    }\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'))\n      } else if (value !== this.resetPwdForm.pwd) {\n        callback(new Error('两次输入密码不一致!'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      dialogFormVisible: false,\n      resetPwdForm: {\n        id: null,\n        pwd: null,\n        pwd2: null\n      },\n      passwordRules: {\n        pwd: [\n          { required: true, message: '必填项' },\n          { validator: validatePass, trigger: 'blur' }\n        ],\n        pwd2: [\n          { required: true, message: '必填项' },\n          { validator: validatePass2, trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    getCrudOptions () {\n      this.crud.searchOptions.form.user_type = 0\n      return crudOptions(this)\n    },\n    pageRequest (query) {\n      return api.GetList(query)\n    },\n    addRequest (row) {\n      return api.AddObj(row)\n    },\n    updateRequest (row) {\n      return api.UpdateObj(row)\n    },\n    delRequest (row) {\n      return api.DelObj(row.id)\n    },\n    batchDelRequest (ids) {\n      return api.BatchDel(ids)\n    },\n    onExport () {\n      const that = this\n      this.$confirm('是否确认导出所有数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        const query = that.getSearch().getForm()\n        return api.exportData({ ...query })\n      })\n    },\n    // 重置密码弹框\n    resetPassword ({ row }) {\n      this.dialogFormVisible = true\n      this.resetPwdForm.id = row.id\n    },\n    // 重置密码确认\n    resetPwdSubmit () {\n      const that = this\n      that.$refs.resetPwdForm.validate((valid) => {\n        if (valid) {\n          const params = {\n            id: that.resetPwdForm.id,\n            newPassword: that.$md5(that.resetPwdForm.pwd),\n            newPassword2: that.$md5(that.resetPwdForm.pwd2)\n          }\n          api.ResetPwd(params).then((res) => {\n            that.dialogFormVisible = false\n            that.resetPwdForm = {\n              id: null,\n              pwd: null,\n              pwd2: null\n            }\n            that.$message.success('修改成功')\n          })\n        } else {\n          that.$message.error('表单校验失败，请检查')\n        }\n      })\n    },\n    // 部门懒加载\n    loadChildrenMethod ({ row }) {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          const childs = [\n            { id: row.id + 100000, parent: row.id, name: row.name + 'Test45', type: 'mp4', size: null, date: '2021-10-03', hasChild: true },\n            { id: row.id + 150000, parent: row.id, name: row.name + 'Test56', type: 'mp3', size: null, date: '2021-07-09', hasChild: false }\n          ]\n          resolve(childs)\n        }, 500)\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.yxtInput {\n  .el-form-item__label {\n    color: #49a1ff;\n  }\n}\n</style>\n"]}]}