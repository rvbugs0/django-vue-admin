{"remainingRequest":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/raviailani/Downloads/django-vue-admin/web/node_modules/d2p-extends/src/full-editor/lib/d2-wang-editor/index.vue?vue&type=style&index=0&id=01e1467c&lang=scss&","dependencies":[{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/d2p-extends/src/full-editor/lib/d2-wang-editor/index.vue","mtime":1674694550335},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/css-loader/dist/cjs.js","mtime":1674694549148},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1674694549593},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/postcss-loader/src/index.js","mtime":1674694549280},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/sass-loader/dist/cjs.js","mtime":1674694548949},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/cache-loader/dist/cjs.js","mtime":1674694548948},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/index.js","mtime":1674694549360}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5kMnAtd2FuZ2VkaXRvcnsKICAud2FuZy1lZGl0b3ItcHJldmlld3tkaXNwbGF5OiBub25lO30KCiAgLnctZS1tZW51IC53LWUtcGFuZWwtY29udGFpbmVyIC53LWUtcGFuZWwtdGFiLWNvbnRlbnQgaW5wdXRbdHlwZT10ZXh0XSB7CiAgICBoZWlnaHQ6IGF1dG87CiAgICB9Cgp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAkJA;AACA;;AAEA;AACA;AACA;;AAEA","file":"index.vue","sourceRoot":"node_modules/d2p-extends/src/full-editor/lib/d2-wang-editor","sourcesContent":["<template>\n  <div class=\"d2p-wangeditor\">\n    <div :id=\"id\"></div>\n    <textarea name=\"\" class=\"wang-editor-preview\" readonly v-model=\"currentValue\"></textarea>\n  </div>\n</template>\n\n<script>\n\nimport WangEditor from 'wangeditor'\n// import { D2pUploader } from 'd2p-extends'\nimport lodash from 'lodash'\nimport wangConfig from './utils/config'\nimport D2pUploader from '../../../uploader'\nimport { d2CrudPlus } from '../../../utils/d2-crud-plus'\nimport log from '../../../utils/util.log'\nexport default {\n  name: 'd2p-wang-editor',\n  mixins: [d2CrudPlus.inputBase],\n  props: {\n    value: {\n      type: String,\n      required: false,\n      default: ''\n    },\n    config: {\n      type: Object\n    },\n    /**\n     * 同一个页面多个edit时，需要配置不同的index\n     */\n    index: {\n      default: '1'\n    },\n    uploader: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    }\n  },\n  data () {\n    return {\n      editor: null,\n      currentValue: '',\n      options: {}\n    }\n  },\n  computed: {\n    id () {\n      return 'wangeditor' + this.index\n    }\n  },\n  watch: {\n    value: {\n      handler (val) {\n        // 确认是新的值\n        if (val !== this.currentValue) {\n          this.currentValue = val\n          // 尝试更新\n          if (this.editor) {\n            if (this.dispatch) {\n              this.dispatch('ElFormItem', 'el.form.blur')\n            }\n            this.$emit('change', val)\n            // this.editor.txt.html(this.value)\n          }\n        }\n      },\n      immediate: true\n    }\n  },\n  mounted () {\n    this.init()\n  },\n  methods: {\n    init () {\n      const editor = new WangEditor('#' + this.id)\n      lodash.merge(wangConfig, this.config)\n      lodash.merge(editor.config, wangConfig)\n      editor.config.onchange = (newHtml) => {\n        this.$emit('input', newHtml)\n        this.currentValue = newHtml\n      }\n\n      if (!editor.config.uploadImgServer) {\n        editor.config.customUploadImg = async (resultFiles, insertImgFn) => {\n          // resultFiles 是 input 中选中的文件列表\n          // insertImgFn 是获取图片 url 后，插入到编辑器的方法\n          var file = resultFiles[0]\n\n          const item = {\n            status: 'uploading',\n            progress: 0\n          }\n\n          const onProgress = (e) => {\n            item.progress = e.percent\n          }\n          const onError = (e) => {\n            item.status = 'error'\n            item.message = '文件上传出错:' + e.message\n            log.debug(e)\n          }\n          const option = {\n            file: file,\n            fileName: file.name,\n            onProgress,\n            onError\n          }\n\n          const ret = await this.doUpload(option)\n          // 上传图片，返回结果，将图片插入到编辑器中\n          insertImgFn(ret.url)\n        }\n      }\n\n      editor.create()\n      editor.txt.html(this.currentValue)\n      this.editor = editor\n    },\n    doUpload (option) {\n      option.config = this.uploader\n      return this.getUploader().then(uploader => {\n        return uploader.upload(option)\n      })\n    },\n    getUploader () {\n      let type = this.type\n      if (this.uploader != null && this.uploader.type != null) {\n        type = this.uploader.type\n      }\n      return D2pUploader.getUploader(type)\n    },\n    beforeUpload (file) {\n      return this.getUploader().beforeUpload(file)\n    }\n  },\n  beforeDestroy () {\n    // 调用销毁 API 对当前编辑器实例进行销毁\n    this.editor.destroy()\n    this.editor = null\n  }\n}\n</script>\n<style lang=\"scss\">\n.d2p-wangeditor{\n  .wang-editor-preview{display: none;}\n\n  .w-e-menu .w-e-panel-container .w-e-panel-tab-content input[type=text] {\n    height: auto;\n    }\n\n}\n</style>\n"]}]}