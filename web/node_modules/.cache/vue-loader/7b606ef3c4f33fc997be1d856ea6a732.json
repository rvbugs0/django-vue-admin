{"remainingRequest":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/raviailani/Downloads/django-vue-admin/web/src/layout/header-aside/components/header-message/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/raviailani/Downloads/django-vue-admin/web/src/layout/header-aside/components/header-message/index.vue","mtime":1674694301483},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/cache-loader/dist/cjs.js","mtime":1674694548948},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/babel-loader/lib/index.js","mtime":1674694549283},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/cache-loader/dist/cjs.js","mtime":1674694548948},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/index.js","mtime":1674694549360}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBtc2dMaXN0IGZyb20gJy4vY29tcG9uZW50cy9tc2ctbGlzdCcKaW1wb3J0IHsgcmVxdWVzdCB9IGZyb20gJ0AvYXBpL3NlcnZpY2UnCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcEdldHRlcnMoJ2QyYWRtaW4nLCB7CiAgICAgIHVucmVhZDogJ21lc3NhZ2VjZW50ZXIvdW5yZWFkJwogICAgfSkKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIG1zZ0xpc3QKICB9LAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgbXNnT2JqOiBudWxsCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRMaXN0ICgpIHsKICAgICAgcmVxdWVzdCh7CiAgICAgICAgdXJsOiAnL2FwaS9zeXN0ZW0vbWVzc2FnZV9jZW50ZXIvZ2V0X25ld2VzdF9tc2cvJywKICAgICAgICBtZXRob2Q6ICdnZXQnLAogICAgICAgIHBhcmFtczoge30KICAgICAgfSkudGhlbihyZXMgPT4gewogICAgICAgIGNvbnN0IHsgZGF0YSB9ID0gcmVzCiAgICAgICAgdGhpcy5tc2dPYmogPSBkYXRhCiAgICAgIH0pCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/layout/header-aside/components/header-message","sourcesContent":["<template>\n  <div>\n\n    <el-tooltip\n      effect=\"dark\"\n      content=\"通知\"\n      placement=\"bottom\">\n      <el-popover\n        placement=\"bottom\"\n        width=\"400\"\n        trigger=\"click\">\n        <msg-list :msgObj=\"msgObj\"></msg-list>\n      <el-button\n        class=\"d2-ml-0 d2-mr btn-text can-hover\"\n        type=\"text\"\n        slot=\"reference\"  @click=\"getList\">\n        <el-badge\n          v-if=\"unread > 0\"\n          :max=\"99\"\n          :value=\"unread\"\n          :is-dot=\"unread === 0\"\n        >\n          <d2-icon\n            :name=\"unread === 0 ? 'dot-circle-o' : 'bell-o'\"\n            style=\"font-size: 20px\"\n          />\n        </el-badge>\n        <d2-icon\n          v-else\n          name=\"bell-o\"\n          style=\"font-size: 16px\"/>\n      </el-button>\n    </el-popover>\n    </el-tooltip>\n  </div>\n</template>\n\n<script>\nimport msgList from './components/msg-list'\nimport { request } from '@/api/service'\nimport { mapGetters } from 'vuex'\nexport default {\n  computed: {\n    ...mapGetters('d2admin', {\n      unread: 'messagecenter/unread'\n    })\n  },\n  components: {\n    msgList\n  },\n  data () {\n    return {\n      msgObj: null\n    }\n  },\n  methods: {\n    getList () {\n      request({\n        url: '/api/system/message_center/get_newest_msg/',\n        method: 'get',\n        params: {}\n      }).then(res => {\n        const { data } = res\n        this.msgObj = data\n      })\n    }\n  }\n}\n</script>\n"]}]}