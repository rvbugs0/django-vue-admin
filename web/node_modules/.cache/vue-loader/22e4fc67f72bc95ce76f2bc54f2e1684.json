{"remainingRequest":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/raviailani/Downloads/django-vue-admin/web/node_modules/d2p-extends/src/full-editor/lib/d2-quill/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/d2p-extends/src/full-editor/lib/d2-quill/index.vue","mtime":1674694550326},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/cache-loader/dist/cjs.js","mtime":1674694548948},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/babel-loader/lib/index.js","mtime":1674694549283},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/cache-loader/dist/cjs.js","mtime":1674694548948},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/index.js","mtime":1674694549360}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"node_modules/d2p-extends/src/full-editor/lib/d2-quill","sourcesContent":["<template>\n  <div ref=\"editor\"  class=\"ql-editor d2p-quill\" :class=\"{'is-disabled':'disabled'}\" style=\"width:100%;min-height: 300px;\"></div>\n</template>\n\n<script>\nimport Quill from 'quill'\nimport 'quill/dist/quill.core.css'\nimport 'quill/dist/quill.snow.css'\nimport 'quill/dist/quill.bubble.css'\nimport D2pUploader from '../../../uploader'\nimport lodash from 'lodash'\nimport { d2CrudPlus } from '../../../utils/d2-crud-plus'\nimport log from '../../../utils/util.log'\nconst fontSizeStyle = Quill.import('attributors/style/size')\nfontSizeStyle.whitelist = ['10px', '14px', '16px', '18px', '22px', '26px', '30px', '34px', '38px', '45px']\nQuill.register(fontSizeStyle, true)\n\n// quill编辑器的字体\nconst fonts = ['SimSun', 'SimHei', 'Microsoft-YaHei', 'KaiTi', 'FangSong', 'Arial', 'Times-New-Roman', 'sans-serif']\nconst Font = Quill.import('formats/font')\nFont.whitelist = fonts // 将字体加入到白名单\nQuill.register(Font, true)\n\n// quill富文本编辑器\nexport default {\n  name: 'd2p-quill',\n  mixins: [d2CrudPlus.inputBase],\n  props: {\n    value: {\n      type: String,\n      required: false,\n      default: ''\n    },\n    config: {\n      type: Object\n    },\n    // 上传参数，会临时覆盖全局上传配置参数[d2p-uploader](/guide/extends/uploader.html)\n    uploader: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    }\n  },\n  data () {\n    return {\n      Quill: undefined,\n      currentValue: '',\n      options: {\n        theme: 'snow',\n        bounds: document.body,\n        debug: 'warn',\n        modules: {\n          toolbar: [\n            ['bold', 'italic', 'underline', 'strike'],\n            ['blockquote', 'code-block'],\n            [{ list: 'ordered' }, { list: 'bullet' }],\n            [{ script: 'sub' }, { script: 'super' }],\n            [{ indent: '-1' }, { indent: '+1' }],\n            [{ direction: 'rtl' }],\n            [{ size: fontSizeStyle.whitelist }], // 解决字体大小 normal太小的问题\n            // [{ size: ['small', false, 'large', 'huge'] }],\n            [{ header: [1, 2, 3, 4, 5, 6, false] }],\n            [{ color: [] }, { background: [] }],\n            [{ font: ['Microsoft-YaHei', 'SimSun', 'SimHei', 'KaiTi', 'Arial', 'Times-New-Roman'] }],\n            [{ align: [] }],\n            ['clean'],\n            ['link', 'image', 'video']\n          ]\n        },\n        placeholder: '书写你的内容',\n        readOnly: false\n      }\n    }\n  },\n  watch: {\n    disabled: {\n      handler (value) {\n        if (this.Quill) {\n          this.Quill.enable(!value)\n        }\n      },\n      immediate: true\n    },\n    value: {\n      handler (val) {\n        // 确认是新的值\n        if (val !== this.currentValue) {\n          this.currentValue = val\n          // 尝试更新\n          if (this.Quill) {\n            if (this.dispatch) {\n              this.dispatch('ElFormItem', 'el.form.blur')\n            }\n            this.$emit('change', val)\n            this.Quill.pasteHTML(this.value)\n          }\n        }\n      },\n      immediate: true\n    }\n  },\n  mounted () {\n    this.init()\n  },\n  methods: {\n    init () {\n      const editor = this.$refs.editor\n      // 初始化编辑器\n      lodash.merge(this.options, this.config)\n      this.Quill = new Quill(editor, this.options)\n\n      const toolbar = this.Quill.getModule('toolbar')\n      toolbar.addHandler('image', () => {\n        this.handlerImage()\n      })\n\n      // 默认值\n      this.Quill.enable(false)\n      this.Quill.pasteHTML(this.currentValue)\n      if (!this.disabled) {\n        this.$nextTick(() => {\n          this.Quill.enable(true)\n        })\n      }\n\n      // 绑定事件\n      this.Quill.on('text-change', (delta, oldDelta, source) => {\n        const html = this.$refs.editor.children[0].innerHTML\n        // const text = this.Quill.getText()\n        // const quill = this.Quill\n        // 更新内部的值\n        this.currentValue = html\n        // 发出事件 v-model\n        this.$emit('input', html)\n        // 发出事件 change\n        this.$emit('change', html)\n      })\n      // 将一些 quill 自带的事件传递出去\n      this.Quill.on('text-change', (delta, oldDelta, source) => {\n        // 文本变更事件\n        this.$emit('text-change', delta, oldDelta, source)\n      })\n      this.Quill.on('selection-change', (range, oldRange, source) => {\n        // 选择框变更事件\n        this.$emit('selection-change', range, oldRange, source)\n      })\n      this.Quill.on('editor-change', (eventName, ...args) => {\n        // editor-change事件\n        this.$emit('editor-change', eventName, ...args)\n      })\n      this.$nextTick(() => {\n        // 编辑器ready事件\n        this.$emit('ready', { vm: this, quill: this.Quill })\n      })\n    },\n    handlerImage () {\n      const quill = this.Quill\n      var Imageinput = document.createElement('input')\n      Imageinput.setAttribute('type', 'file')\n      Imageinput.setAttribute('name', 'upload_file')\n      Imageinput.setAttribute('accept', 'image/png, image/gif, image/jpeg')\n      Imageinput.classList.add('ql-image')\n      Imageinput.addEventListener('change', () => {\n        var file = Imageinput.files[0]\n\n        const item = {\n          status: 'uploading',\n          progress: 0\n        }\n\n        const onProgress = (e) => {\n          item.progress = e.percent\n        }\n        const onError = (e) => {\n          item.status = 'error'\n          item.message = '文件上传出错:' + e.message\n          log.debug(e)\n        }\n        const option = {\n          file: file,\n          fileName: file.name,\n          onProgress,\n          onError\n        }\n\n        this.doUpload(option).then(upload => {\n          const url = item.url = upload.url\n          item.status = 'done'\n          const range = quill.getSelection(true)\n          // let index = range.index + range.length\n          quill.insertEmbed(range.index, 'image', url)\n        })\n      })\n      Imageinput.click()\n    },\n    doUpload (option) {\n      option.config = this.uploader\n      return this.getUploader().then(uploader => {\n        return uploader.upload(option)\n      })\n    },\n    getUploader () {\n      let type = this.type\n      if (this.uploader != null && this.uploader.type != null) {\n        type = this.uploader.type\n      }\n      return D2pUploader.getUploader(type)\n    },\n    beforeUpload (file) {\n      return this.getUploader().beforeUpload(file)\n    }\n  }\n}\n</script>\n<style lang=\"scss\">\n  .ql-toolbar{\n    line-height: 24px;\n  }\n  .ql-disabled{\n    cursor: not-allowed;\n    .ql-editor{\n      cursor: not-allowed;\n    }\n  }\n  /**设置默认字体显示\n  **/\n  .ql-container {\n    font-size:16px;\n  }\n\n  .ql-snow .ql-picker.ql-size .ql-picker-label[data-value='10px']::before, .ql-snow .ql-picker.ql-size .ql-picker-item[data-value='10px']::before {\n    content: '10px';\n  }\n  .ql-snow .ql-picker.ql-size .ql-picker-label[data-value='12px']::before, .ql-snow .ql-picker.ql-size .ql-picker-item[data-value='12px']::before {\n    content: '12px';\n  }\n  .ql-snow .ql-picker.ql-size .ql-picker-label[data-value='14px']::before, .ql-snow .ql-picker.ql-size .ql-picker-item[data-value='14px']::before {\n    content: '14px';\n  }\n  .ql-snow .ql-picker.ql-size .ql-picker-label[data-value='16px']::before, .ql-snow .ql-picker.ql-size .ql-picker-item[data-value='16px']::before {\n    content: '16px';\n  }\n  .ql-snow .ql-picker.ql-size .ql-picker-label[data-value='18px']::before, .ql-snow .ql-picker.ql-size .ql-picker-item[data-value='18px']::before {\n    content: '18px';\n  }\n  .ql-snow .ql-picker.ql-size .ql-picker-label[data-value='20px']::before, .ql-snow .ql-picker.ql-size .ql-picker-item[data-value='20px']::before {\n    content: '20px';\n  }\n  .ql-snow .ql-picker.ql-size .ql-picker-label[data-value='22px']::before, .ql-snow .ql-picker.ql-size .ql-picker-item[data-value='22px']::before {\n    content: '22px';\n  }\n  .ql-snow .ql-picker.ql-size .ql-picker-label[data-value='24px']::before, .ql-snow .ql-picker.ql-size .ql-picker-item[data-value='24px']::before {\n    content: '24px';\n  }\n  .ql-snow .ql-picker.ql-size .ql-picker-label[data-value='26px']::before, .ql-snow .ql-picker.ql-size .ql-picker-item[data-value='26px']::before {\n    content: '26px';\n  }\n  .ql-snow .ql-picker.ql-size .ql-picker-label[data-value='28px']::before, .ql-snow .ql-picker.ql-size .ql-picker-item[data-value='28px']::before {\n    content: '28px';\n  }\n  .ql-snow .ql-picker.ql-size .ql-picker-label[data-value='30px']::before, .ql-snow .ql-picker.ql-size .ql-picker-item[data-value='30px']::before {\n    content: '30px';\n  }\n  .ql-snow .ql-picker.ql-size .ql-picker-label[data-value='32px']::before, .ql-snow .ql-picker.ql-size .ql-picker-item[data-value='32px']::before {\n    content: '32px';\n  }\n  .ql-snow .ql-picker.ql-size .ql-picker-label[data-value='34px']::before, .ql-snow .ql-picker.ql-size .ql-picker-item[data-value='34px']::before {\n    content: '34px';\n  }\n  .ql-snow .ql-picker.ql-size .ql-picker-label[data-value='36px']::before, .ql-snow .ql-picker.ql-size .ql-picker-item[data-value='36px']::before {\n    content: '36px';\n  }\n  .ql-snow .ql-picker.ql-size .ql-picker-label[data-value='38px']::before, .ql-snow .ql-picker.ql-size .ql-picker-item[data-value='38px']::before {\n    content: '38px';\n  }\n  .ql-snow .ql-picker.ql-size .ql-picker-label[data-value='40px']::before, .ql-snow .ql-picker.ql-size .ql-picker-item[data-value='40px']::before {\n    content: '40px';\n  }\n  .ql-snow .ql-picker.ql-size .ql-picker-label[data-value='45px']::before, .ql-snow .ql-picker.ql-size .ql-picker-item[data-value='45px']::before {\n    content: '45px';\n  }\n  .ql-snow .ql-picker.ql-size .ql-picker-label[data-value='50px']::before, .ql-snow .ql-picker.ql-size .ql-picker-item[data-value='50px']::before {\n    content: '50px';\n  }\n\n/*字体*/\n  .ql-snow .ql-picker.ql-font .ql-picker-label[data-value=SimSun]::before,\n  .ql-snow .ql-picker.ql-font .ql-picker-item[data-value=SimSun]::before {\n    content: \"宋体\";\n    font-family: \"SimSun\";\n  }\n  .ql-snow .ql-picker.ql-font .ql-picker-label[data-value=SimHei]::before,\n  .ql-snow .ql-picker.ql-font .ql-picker-item[data-value=SimHei]::before {\n    content: \"黑体\";\n    font-family: \"SimHei\";\n  }\n  .ql-snow .ql-picker.ql-font .ql-picker-label[data-value=Microsoft-YaHei]::before,\n  .ql-snow .ql-picker.ql-font .ql-picker-item[data-value=Microsoft-YaHei]::before {\n    content: \"微软雅黑\";\n    font-family: \"Microsoft YaHei\";\n  }\n  .ql-snow .ql-picker.ql-font .ql-picker-label[data-value=KaiTi]::before,\n  .ql-snow .ql-picker.ql-font .ql-picker-item[data-value=KaiTi]::before {\n    content: \"楷体\";\n    font-family: \"KaiTi\";\n  }\n  .ql-snow .ql-picker.ql-font .ql-picker-label[data-value=FangSong]::before,\n  .ql-snow .ql-picker.ql-font .ql-picker-item[data-value=FangSong]::before {\n    content: \"仿宋\";\n    font-family: \"FangSong\";\n  }\n  .ql-snow .ql-picker.ql-font .ql-picker-label[data-value=Arial]::before,\n  .ql-snow .ql-picker.ql-font .ql-picker-item[data-value=Arial]::before {\n    content: \"Arial\";\n    font-family: \"Arial\";\n  }\n  .ql-snow .ql-picker.ql-font .ql-picker-label[data-value=Times-New-Roman]::before,\n  .ql-snow .ql-picker.ql-font .ql-picker-item[data-value=Times-New-Roman]::before {\n    content: \"T New Roman\";\n    font-family: \"Times New Roman\";\n  }\n  .ql-snow .ql-picker.ql-font .ql-picker-label[data-value=sans-serif]::before,\n  .ql-snow .ql-picker.ql-font .ql-picker-item[data-value=sans-serif]::before {\n    content: \"sans-serif\";\n    font-family: \"sans-serif\";\n  }\n\n  .ql-font-SimSun {\n    font-family: \"SimSun\";\n  }\n  .ql-font-SimHei {\n    font-family: \"SimHei\";\n  }\n  .ql-font-Microsoft-YaHei {\n    font-family: \"Microsoft YaHei\";\n  }\n  .ql-font-KaiTi {\n    font-family: \"KaiTi\";\n  }\n  .ql-font-FangSong {\n    font-family: \"FangSong\";\n  }\n  .ql-font-Arial {\n    font-family: \"Arial\";\n  }\n  .ql-font-Times-New-Roman {\n    font-family: \"Times New Roman\";\n  }\n  .ql-font-sans-serif {\n    font-family: \"sans-serif\";\n  }\n\n</style>\n"]}]}