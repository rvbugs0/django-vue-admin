{"remainingRequest":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/raviailani/Downloads/django-vue-admin/web/src/components/table-selector/table-selector.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/raviailani/Downloads/django-vue-admin/web/src/components/table-selector/table-selector.vue","mtime":1674694301482},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/cache-loader/dist/cjs.js","mtime":1674694548948},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/babel-loader/lib/index.js","mtime":1674694549283},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/cache-loader/dist/cjs.js","mtime":1674694548948},{"path":"/Users/raviailani/Downloads/django-vue-admin/web/node_modules/vue-loader/lib/index.js","mtime":1674694549360}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBsb2Rhc2ggZnJvbSAnbG9kYXNoJwppbXBvcnQgeyBkMkNydWRQbHVzIH0gZnJvbSAnZDItY3J1ZC1wbHVzJwppbXBvcnQgeyByZXF1ZXN0IH0gZnJvbSAnQC9hcGkvc2VydmljZScKLy8g6KGo5qC86YCJ5oup57uE5Lu2CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAndGFibGUtc2VsZWN0b3ItaW5wdXQnLAogIG1peGluczogW2QyQ3J1ZFBsdXMuaW5wdXQsIGQyQ3J1ZFBsdXMuaW5wdXREaWN0XSwKICBwcm9wczogewogICAgLy8g5YC8CiAgICB2YWx1ZTogewogICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmcsIEJvb2xlYW4sIEFycmF5LCBPYmplY3RdCiAgICB9LAogICAgLy8g6L+H5ruk77yMdmFsdWXkuK3nmoRub2Rlc+i/h+a7pOaWueazlSDlj4LmlbDkuLpub2RlcwogICAgZmlsdGVyOiB7CiAgICAgIHR5cGU6IEZ1bmN0aW9uLAogICAgICByZXF1aXJlOiBmYWxzZQogICAgfSwKICAgIC8vIOi/h+a7pOeahHBsYWNlaG9sZGVyCiAgICBmaWx0ZXJQbGFjZWhvbGRlcjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICfovpPlhaXlhbPplK7lrZfov5vooYzov4fmu6QnCiAgICB9LAogICAgcGxhY2Vob2xkZXI6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAn6K+36YCJ5oupJwogICAgfSwKICAgIGRpYWxvZ1RpdGxlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ+mAieaLqScKICAgIH0sCiAgICBjYW5jZWxUZXh0OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ+WPlua2iCcKICAgIH0sCiAgICBjb25maXJtVGV4dDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICfnoa7lrponCiAgICB9LAogICAgLy8g5qCR5b2i57uE5Lu26IqC54K56L+H5ruk77yM5Y+v5Lul6YWN572uZWxQcm9wcy5maWx0ZXJOb2RlTWV0aG9kIO+8jOimhueblum7mOiupOeahOi/h+a7pOaWueazlQogICAgdHJlZUZpbHRlcjogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICByZXF1aXJlOiBmYWxzZSwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfSwKICAgIC8vIOaYr+WQpuWkmumAie+8jOS8oOWFpWZhbHNl5Li65Y2V6YCJCiAgICBtdWx0aXBsZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIC8vIOaYr+WQpuW/veeVpemAieS4reiKgueCueeahOWtkOiKgueCuQogICAgaWdub3JlRnVsbENoZWNrZWRDaGlsZHJlbjogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9LAogICAgLy8g5piv5ZCm5Y+q6L+U5Zue5Y+25a2Q6IqC54K5CiAgICBsZWFmT25seTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIC8vIOaYr+WQpuWMheWQq+WNiumAieiKgueCuQogICAgaW5jbHVkZUhhbGZDaGVja2VkOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgLy8gZWwtdHJlZeeahOWxnuaAp+mFjee9rgogICAgZWxQcm9wczogewogICAgICB0eXBlOiBPYmplY3QKICAgIH0sCiAgICAvKioKICAgICAqIOaYr+WQpuWPr+S7pea4hemZpAogICAgICovCiAgICBjbGVhcmFibGU6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfSwKICAgIC8vIOaVsOaNruWtl+WFuOmFjee9rgogICAgZGljdDogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIHJlcXVpcmU6IGZhbHNlCiAgICB9LAogICAgLy8g5piv5ZCm5byA5ZCv5YiG6aG1CiAgICBwYWdpbmF0aW9uOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9CiAgfSwKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIGN1cnJlbnRWYWx1ZTogdW5kZWZpbmVkLAogICAgICBjb2xsYXBzZVRhZ3M6IGZhbHNlLAogICAgICBzZWxlY3RlZDogW10sCiAgICAgIGRpYWxvZ1Zpc2libGU6IGZhbHNlLAogICAgICBmaWx0ZXJUZXh0OiB1bmRlZmluZWQsCiAgICAgIHJlcXVlc3RVcmw6IG51bGwKICAgIH0KICB9LAogIGNyZWF0ZWQgKCkgewogICAgLy8gaWYgKHRoaXMuZGljdCkgewogICAgLy8gICB0aGlzLmRpY3QgPSBkMkNydWRQbHVzLnV0aWwuZGljdC5tZXJnZURlZmF1bHQodGhpcy5kaWN0LCB0cnVlKQogICAgLy8gfQogICAgLy8gdGhpcy5pbml0RGF0YSgpCiAgICAvLyBjb25zb2xlLmxvZyh0aGlzKQogICAgdGhpcy5zZWFyY2hUYWJsZURhdGEoKQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIF9lbFByb3BzICgpIHsKICAgICAgY29uc3QgZGVmYXVsdEVsUHJvcHMgPSB7CiAgICAgICAgLy8gc2hvd0NoZWNrYm94OiB0aGlzLm11bHRpcGxlLAogICAgICAgIGhpZ2hsaWdodEN1cnJlbnQ6ICF0aGlzLm11bHRpcGxlLAogICAgICAgIHByb3BzOiB7fSwKICAgICAgICBjb2x1bW5zOiBbXSwKICAgICAgICBib3JkZXI6IHRydWUsCiAgICAgICAgcmVzaXphYmxlOiB0cnVlCiAgICAgIH0KICAgICAgaWYgKHRoaXMuZGljdCAhPSBudWxsKSB7CiAgICAgICAgaWYgKHRoaXMuZGljdC5sYWJlbCAhPSBudWxsKSB7CiAgICAgICAgICBkZWZhdWx0RWxQcm9wcy5wcm9wcy5sYWJlbCA9IHRoaXMuZGljdC5sYWJlbAogICAgICAgIH0KICAgICAgICBpZiAodGhpcy5kaWN0LnZhbHVlICE9IG51bGwpIHsKICAgICAgICAgIGRlZmF1bHRFbFByb3BzLnByb3BzLnZhbHVlID0gdGhpcy5kaWN0LnZhbHVlCiAgICAgICAgfQogICAgICAgIGlmICh0aGlzLmRpY3QuY2hpbGRyZW4gIT0gbnVsbCkgewogICAgICAgICAgZGVmYXVsdEVsUHJvcHMucHJvcHMuY2hpbGRyZW4gPSB0aGlzLmRpY3QuY2hpbGRyZW4KICAgICAgICB9CiAgICAgICAgLy8g5Yqg5LiK5qCR5b2i55qE6YWN572uCiAgICAgICAgaWYgKHRoaXMuZGljdC5pc1RyZWUpIHsKICAgICAgICAgIGRlZmF1bHRFbFByb3BzLnRyZWVDb25maWcgPSB0aGlzLmVsUHJvcHMudHJlZUNvbmZpZwogICAgICAgIH0KICAgICAgfQogICAgICBkZWZhdWx0RWxQcm9wcy5ub2RlS2V5ID0gZGVmYXVsdEVsUHJvcHMucHJvcHMudmFsdWUKICAgICAgbG9kYXNoLm1lcmdlKGRlZmF1bHRFbFByb3BzLCB0aGlzLmVsUHJvcHMpCgogICAgICBpZiAodGhpcy5tdWx0aXBsZSkgewogICAgICAgIGRlZmF1bHRFbFByb3BzLmNoZWNrYm94Q29uZmlnID0gdGhpcy5lbFByb3BzLmNoZWNrYm94Q29uZmlnCiAgICAgICAgICA/IHRoaXMuZWxQcm9wcy5jaGVja2JveENvbmZpZwogICAgICAgICAgOiB7fQogICAgICAgIGRlZmF1bHRFbFByb3BzLmNvbHVtbnMgPSBbCiAgICAgICAgICB7CiAgICAgICAgICAgIHR5cGU6ICdjaGVja2JveCcsCiAgICAgICAgICAgIHdpZHRoOiA2MAogICAgICAgICAgfSwKICAgICAgICAgIC4uLmRlZmF1bHRFbFByb3BzLmNvbHVtbnMKICAgICAgICBdCiAgICAgIH0gZWxzZSB7CiAgICAgICAgZGVmYXVsdEVsUHJvcHMucmFkaW9Db25maWcgPSB0aGlzLmVsUHJvcHMKICAgICAgICAgID8gdGhpcy5lbFByb3BzLnJhZGlvQ29uZmlnCiAgICAgICAgICA6IHt9CiAgICAgICAgZGVmYXVsdEVsUHJvcHMuY29sdW1ucyA9IFsKICAgICAgICAgIHsKICAgICAgICAgICAgdHlwZTogJ3JhZGlvJywKICAgICAgICAgICAgd2lkdGg6IDYwCiAgICAgICAgICB9LAogICAgICAgICAgLi4uZGVmYXVsdEVsUHJvcHMuY29sdW1ucwogICAgICAgIF0KICAgICAgfQoKICAgICAgcmV0dXJuIGRlZmF1bHRFbFByb3BzCiAgICB9LAogICAgY29sbGFwc2VUYWdTaXplICgpIHsKICAgICAgcmV0dXJuIFsnc21hbGwnLCAnbWluaSddLmluZGV4T2YodGhpcy5zZWxlY3RTaXplKSA+IC0xID8gJ21pbmknIDogJ3NtYWxsJwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGZpbHRlclRleHQgKHZhbCkgewogICAgICAvLyB0aGlzLiRyZWZzLmVsVHJlZS5maWx0ZXIodmFsKTsKICAgICAgdGhpcy5zZWFyY2hUYWJsZURhdGEoKQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgLy8gaW5pdERhdGEgKCkgewogICAgLy8gICBkMkNydWRQbHVzLnV0aWwuZGljdC5nZXQodGhpcy5kaWN0KS50aGVuKHJldCA9PiB7CiAgICAvLyAgICAgdGhpcy4kc2V0KHRoaXMsICdkYXRhJywgcmV0KQogICAgLy8gICAgIHRoaXMuc2V0VmFsdWUodGhpcy52YWx1ZSkKICAgIC8vICAgfSkKICAgIC8vIH0sCiAgICBvbkRpY3RMb2FkZWQgKCkgewogICAgICAvLyBsb2cuZGFuZ2VyKCJvbkRpY3RMb2FkZWQiLCB0aGlzLmRpY3QsIHRoaXMudmFsdWUpOwogICAgICB0aGlzLnNldFZhbHVlKHRoaXMudmFsdWUpCiAgICB9LAogICAgc2V0VmFsdWUgKHZhbHVlKSB7CiAgICAgIC8vIGxvZy5kYW5nZXIoInNldFZhbHVlOiIsIHRoaXMuY3VycmVudFZhbHVlLCB0aGlzLnZhbHVlLCB0aGlzLl9vcHRpb25zKTsKICAgICAgaWYgKHRoaXMuY3VycmVudFZhbHVlID09PSB0aGlzLnZhbHVlKSB7CiAgICAgICAgcmV0dXJuCiAgICAgIH0KICAgICAgbGV0IGFyclZhbHVlID0gdmFsdWUKICAgICAgaWYgKHZhbHVlID09IG51bGwpIHsKICAgICAgICB0aGlzLnNlbGVjdGVkID0gW10KICAgICAgfQoKICAgICAgaWYgKCEoYXJyVmFsdWUgaW5zdGFuY2VvZiBBcnJheSkpIHsKICAgICAgICBhcnJWYWx1ZSA9IFthcnJWYWx1ZV0KICAgICAgfQogICAgICBpZiAodGhpcy5kaWN0ICYmIHRoaXMuZGljdC5nZXROb2RlcykgewogICAgICAgIC8vIGxvZy5kYW5nZXIoImdldE5vZGVzOiIsIGFyclZhbHVlKTsKICAgICAgICB0aGlzLmRpY3QuZ2V0Tm9kZXMoYXJyVmFsdWUpLnRoZW4oKG5vZGVzKSA9PiB7CiAgICAgICAgICB0aGlzLnNlbGVjdGVkTm9kZXMobm9kZXMsIHZhbHVlKQogICAgICAgIH0pCiAgICAgIH0gZWxzZSB7CiAgICAgICAgY29uc3Qgbm9kZXMgPSBbXQogICAgICAgIGlmICh0aGlzLl9vcHRpb25zID09IG51bGwgfHwgdGhpcy5fb3B0aW9ucy5sZW5ndGggPT09IDApIHsKICAgICAgICAgIHJldHVybgogICAgICAgIH0KICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgYXJyVmFsdWUpIHsKICAgICAgICAgIGNvbnN0IGRhdGEgPSB0aGlzLl9vcHRpb25zCiAgICAgICAgICBjb25zdCBub2RlID0gZDJDcnVkUGx1cy51dGlsLmRpY3QuZ2V0QnlWYWx1ZShpdGVtLCBkYXRhLCB0aGlzLmRpY3QpCiAgICAgICAgICBpZiAobm9kZSAhPSBudWxsKSB7CiAgICAgICAgICAgIG5vZGVzLnB1c2gobm9kZSkKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgdGhpcy5zZWxlY3RlZE5vZGVzKG5vZGVzLCB2YWx1ZSkKICAgICAgfQogICAgfSwKICAgIHNlbGVjdGVkTm9kZXMgKG5vZGVzLCB2YWx1ZSkgewogICAgICBjb25zdCBzZWxlY3RlZCA9IFtdCiAgICAgIGZvciAoY29uc3Qgbm9kZSBvZiBub2RlcykgewogICAgICAgIG5vZGUuaWQgPSBub2RlW3RoaXMuZGljdC52YWx1ZV0KICAgICAgICBzZWxlY3RlZC5wdXNoKG5vZGUpCiAgICAgIH0KICAgICAgLy8gbG9nLmRhbmdlcigic2VsZWN0ZWQ6Iiwgc2VsZWN0ZWQpOwogICAgICB0aGlzLiRzZXQodGhpcywgJ3NlbGVjdGVkJywgc2VsZWN0ZWQpCiAgICAgIHRoaXMucmVzZXRJbnB1dEhlaWdodCgpCiAgICB9LAogICAgaGFuZGxlQ2hlY2tDaGFuZ2UgKGV2ZW50KSB7CiAgICAgIHRoaXMuJGVtaXQoJ2NoZWNrLWNoYW5nZScsIGV2ZW50KQogICAgfSwKICAgIGhhbmRsZUN1cnJlbnRDaGFuZ2UgKGV2ZW50KSB7CiAgICAgIHRoaXMuJGVtaXQoJ2N1cnJlbnQtY2hhbmdlJywgZXZlbnQpCiAgICB9LAogICAgb3BlbkRpYWxvZyAoKSB7CiAgICAgIGNvbnN0IHRoYXQgPSB0aGlzCiAgICAgIGlmICh0aGF0LmRpc2FibGVkKSB7CiAgICAgICAgcmV0dXJuCiAgICAgIH0KICAgICAgdGhhdC5kaWFsb2dWaXNpYmxlID0gdHJ1ZQogICAgICBpZiAodGhhdC52YWx1ZSAhPSBudWxsKSB7CiAgICAgICAgdGhhdC4kbmV4dFRpY2soKCkgPT4gewogICAgICAgICAgY29uc3QgcmVmcyA9IE9iamVjdC5hc3NpZ24oe30sIHRoYXQuJHJlZnMpCiAgICAgICAgICBjb25zdCB7IGVsVHJlZSB9ID0gcmVmcwogICAgICAgICAgaWYgKHRoYXQubXVsdGlwbGUpIHsKICAgICAgICAgICAgZWxUcmVlLnNldENoZWNrYm94Um93KHRoYXQuc2VsZWN0ZWQsIHRydWUpCiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBlbFRyZWUuc2V0UmFkaW9Sb3codGhhdC5zZWxlY3RlZFswXSkKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICB9CiAgICB9LAogICAgZG9FeHBhbmRQYXJlbnQgKG5vZGUpIHsKICAgICAgaWYgKG5vZGUucGFyZW50ICE9IG51bGwpIHsKICAgICAgICB0aGlzLmRvRXhwYW5kUGFyZW50KG5vZGUucGFyZW50KQogICAgICB9CiAgICAgIG5vZGUuZXhwYW5kZWQgPSB0cnVlCiAgICB9LAogICAgLy8g5aSE55CGdmFsdWUs5piv5ZCm5Li65Y6f55SfdmFsdWXov5jmmK/oh6rlrprkuYl2YWx1ZQogICAgZ2V0VmFsdWVLZXkgKGl0ZW0pIHsKICAgICAgaWYgKHRoaXMuX2VsUHJvcHMucHJvcHMudmFsdWUgIT0gbnVsbCkgewogICAgICAgIHJldHVybiBpdGVtW3RoaXMuX2VsUHJvcHMucHJvcHMudmFsdWVdCiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGl0ZW0udmFsdWUKICAgICAgfQogICAgfSwKICAgIC8vIOWkhOeQhmxhYmVsLOaYr+WQpuS4uuWOn+eUn2xhYmVs6L+Y5piv6Ieq5a6a5LmJbGFiZWwKICAgIGdldFZhbHVlTGFiZWwgKGl0ZW0pIHsKICAgICAgaWYgKHRoaXMuX2VsUHJvcHMucHJvcHMubGFiZWwgIT0gbnVsbCkgewogICAgICAgIHJldHVybiBpdGVtW3RoaXMuX2VsUHJvcHMucHJvcHMubGFiZWxdCiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGl0ZW0ubGFiZWwKICAgICAgfQogICAgfSwKICAgIC8vIOWkhOeQhmNoaWxkcmVuLOaYr+WQpuS4uuWOn+eUn2NoaWxkcmVu6L+Y5piv6Ieq5a6a5LmJY2hpbGRyZW4KICAgIGdldFZhbHVlQ2hpbGRyZW4gKGl0ZW0pIHsKICAgICAgbGV0IGNoaWxkcmVuID0gJ2NoaWxkcmVuJwogICAgICBpZiAodGhpcy5fZWxQcm9wcy5wcm9wcy5jaGlsZHJlbiAhPSBudWxsKSB7CiAgICAgICAgY2hpbGRyZW4gPSB0aGlzLl9lbFByb3BzLnByb3BzLmNoaWxkcmVuCiAgICAgIH0KICAgICAgcmV0dXJuIGl0ZW1bY2hpbGRyZW5dCiAgICB9LAogICAgLy8g56Gu5a6a5oyJ6ZKu5LqL5Lu2CiAgICBzZWxlY3RTdWJtaXQgKCkgewogICAgICBjb25zdCBub2RlcyA9IHRoaXMucmVmcmVzaFNlbGVjdGVkKCkKICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gZmFsc2UKICAgICAgdGhpcy5kb1ZhbHVlSW5wdXRDaGFuZ2VkKG5vZGVzKQogICAgfSwKICAgIC8vIOWwhuWAvOS8oOWHuuWOuwogICAgZG9WYWx1ZUlucHV0Q2hhbmdlZCAobm9kZXMpIHsKICAgICAgbGV0IHZhbHVlcyA9IHRoaXMuZm9ybWF0VmFsdWUobm9kZXMpCiAgICAgIHRoaXMucmVzZXRJbnB1dEhlaWdodCgpCiAgICAgIGlmICghdGhpcy5tdWx0aXBsZSkgewogICAgICAgIHZhbHVlcyA9IHZhbHVlcyAmJiB2YWx1ZXMubGVuZ3RoID4gMCA/IHZhbHVlc1swXSA6IHVuZGVmaW5lZAogICAgICB9CiAgICAgIHRoaXMuY3VycmVudFZhbHVlID0gdmFsdWVzCiAgICAgIGlmICh0aGlzLmRpc3BhdGNoKSB7CiAgICAgICAgdGhpcy5kaXNwYXRjaCgnRWxGb3JtSXRlbScsICdlbC5mb3JtLmJsdXInKQogICAgICB9CiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdmFsdWVzKQogICAgfSwKICAgIGl0ZW1DbG9zZWQgKGl0ZW0pIHsKICAgICAgY29uc3QgbmV3Tm9kZXMgPSBsb2Rhc2gud2l0aG91dCh0aGlzLnNlbGVjdGVkLCBpdGVtKQogICAgICAvLyBjb25zb2xlLmxvZygibmV3IHZhbHVlIiwgaXRlbSwgbmV3Tm9kZXMpOwogICAgICB0aGlzLiRzZXQodGhpcywgJ3NlbGVjdGVkJywgbmV3Tm9kZXMpCiAgICAgIHRoaXMuZG9WYWx1ZUlucHV0Q2hhbmdlZChuZXdOb2RlcykKICAgIH0sCiAgICAvLyDojrflj5bpgInkuK3nmoTooYzmlbDmja4KICAgIHJlZnJlc2hTZWxlY3RlZCAoKSB7CiAgICAgIGxldCBub2RlcyA9IG51bGwKICAgICAgaWYgKHRoaXMubXVsdGlwbGUpIHsKICAgICAgICBub2RlcyA9IHRoaXMuJHJlZnMuZWxUcmVlLmdldENoZWNrYm94UmVjb3JkcygpCiAgICAgIH0gZWxzZSB7CiAgICAgICAgY29uc3Qgbm9kZSA9IHRoaXMuJHJlZnMuZWxUcmVlLmdldFJhZGlvUmVjb3JkKCkKICAgICAgICBpZiAobm9kZSA9PSBudWxsKSB7CiAgICAgICAgICBub2RlcyA9IFtdCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIG5vZGVzID0gW25vZGVdCiAgICAgICAgfQogICAgICB9CgogICAgICBpZiAodGhpcy5pZ25vcmVGdWxsQ2hlY2tlZENoaWxkcmVuKSB7CiAgICAgICAgbm9kZXMgPSB0aGlzLmZpbHRlckZ1bGxDaGVja2VkQ2hpbGRyZW4obm9kZXMpCiAgICAgIH0KICAgICAgaWYgKHRoaXMuZmlsdGVyICE9IG51bGwpIHsKICAgICAgICBub2RlcyA9IHRoaXMuZmlsdGVyKG5vZGVzKQogICAgICB9CiAgICAgIC8vIGxvZy5kYW5nZXIoInNlbGVjdGVkIiwgdGhpcy5zZWxlY3RlZCk7CiAgICAgIHRoaXMuJHNldCh0aGlzLCAnc2VsZWN0ZWQnLCBub2RlcykKICAgICAgcmV0dXJuIG5vZGVzCiAgICB9LAogICAgcmVzZXRJbnB1dEhlaWdodCAoKSB7CiAgICAgIGlmICh0aGlzLmNvbGxhcHNlVGFncyAmJiAhdGhpcy5maWx0ZXJhYmxlKSByZXR1cm4KICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgIGlmICghdGhpcy4kcmVmcy5yZWZlcmVuY2UpIHJldHVybgogICAgICAgIGNvbnN0IGlucHV0Q2hpbGROb2RlcyA9IHRoaXMuJHJlZnMucmVmZXJlbmNlLiRlbC5jaGlsZE5vZGVzCiAgICAgICAgY29uc3QgaW5wdXQgPSBbXS5maWx0ZXIuY2FsbCgKICAgICAgICAgIGlucHV0Q2hpbGROb2RlcywKICAgICAgICAgIChpdGVtKSA9PiBpdGVtLnRhZ05hbWUgPT09ICdJTlBVVCcKICAgICAgICApWzBdCiAgICAgICAgY29uc3QgdGFncyA9IHRoaXMuJHJlZnMudGFncwogICAgICAgIGNvbnN0IHNpemVJbk1hcCA9IHRoaXMuaW5pdGlhbElucHV0SGVpZ2h0IHx8IDQwCiAgICAgICAgY29uc3QgaGVpZ2h0ID0KICAgICAgICAgIHRoaXMuc2VsZWN0ZWQubGVuZ3RoID09PSAwCiAgICAgICAgICAgID8gc2l6ZUluTWFwICsgJ3B4JwogICAgICAgICAgICA6IE1hdGgubWF4KAogICAgICAgICAgICAgIHRhZ3MKICAgICAgICAgICAgICAgID8gdGFncy5jbGllbnRIZWlnaHQgKyAodGFncy5jbGllbnRIZWlnaHQgPiBzaXplSW5NYXAgPyA2IDogMCkKICAgICAgICAgICAgICAgIDogMCwKICAgICAgICAgICAgICBzaXplSW5NYXAKICAgICAgICAgICAgKSArICdweCcKICAgICAgICBpbnB1dC5zdHlsZS5oZWlnaHQgPSBoZWlnaHQKICAgICAgICBpZiAodGhpcy52aXNpYmxlICYmIHRoaXMuZW1wdHlUZXh0ICE9PSBmYWxzZSkgewogICAgICAgICAgdGhpcy5icm9hZGNhc3QoJ0VsU2VsZWN0RHJvcGRvd24nLCAndXBkYXRlUG9wcGVyJykKICAgICAgICB9CiAgICAgIH0pCiAgICB9LAogICAgLy8g6L+H5ruk5Y+25a2Q6IqC54K5CiAgICBmaWx0ZXJGdWxsQ2hlY2tlZENoaWxkcmVuIChub2RlcykgewogICAgICBjb25zdCBpZ25vcmVkID0gbmV3IFNldCgpCiAgICAgIGZvciAoY29uc3QgaXRlbSBvZiBub2RlcykgewogICAgICAgIGNvbnN0IGNoaWxkcmVuID0gdGhpcy5nZXRWYWx1ZUNoaWxkcmVuKGl0ZW0pCiAgICAgICAgaWYgKGNoaWxkcmVuICE9IG51bGwpIHsKICAgICAgICAgIGZvciAoY29uc3QgY2hpbGQgb2YgY2hpbGRyZW4pIHsKICAgICAgICAgICAgaWdub3JlZC5hZGQodGhpcy5nZXRWYWx1ZUtleShjaGlsZCkpCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICAgIGNvbnN0IHZhbHVlcyA9IFtdCiAgICAgIGZvciAoY29uc3QgaXRlbSBvZiBub2RlcykgewogICAgICAgIGNvbnN0IGtleSA9IHRoaXMuZ2V0VmFsdWVLZXkoaXRlbSkKICAgICAgICBpZiAoIWlnbm9yZWQuaGFzKGtleSkpIHsKICAgICAgICAgIHZhbHVlcy5wdXNoKGl0ZW0pCiAgICAgICAgfQogICAgICB9CiAgICAgIHJldHVybiB2YWx1ZXMKICAgIH0sCiAgICBmb3JtYXRWYWx1ZSAobm9kZXMpIHsKICAgICAgY29uc3QgdmFsdWVzID0gW10KICAgICAgZm9yIChjb25zdCBpdGVtIG9mIG5vZGVzKSB7CiAgICAgICAgdmFsdWVzLnB1c2godGhpcy5nZXRWYWx1ZUtleShpdGVtKSkKICAgICAgfQogICAgICByZXR1cm4gdmFsdWVzCiAgICB9LAogICAgZmlsdGVyTm9kZSAodmFsdWUsIGRhdGEpIHsKICAgICAgaWYgKCF2YWx1ZSkgcmV0dXJuIHRydWUKICAgICAgcmV0dXJuIHRoaXMuZ2V0VmFsdWVMYWJlbChkYXRhKS5pbmRleE9mKHZhbHVlKSAhPT0gLTEKICAgIH0sCiAgICBvbkNoYW5nZSAodmFsdWUpIHsKICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlJywgdmFsdWUpCgogICAgICBpZiAodGhpcy5kaXNwYXRjaCkgewogICAgICAgIHRoaXMuZGlzcGF0Y2goJ0VsRm9ybUl0ZW0nLCAnZWwuZm9ybS5ibHVyJykKICAgICAgfQogICAgfSwKICAgIC8vIOWIhumhteS6i+S7tgogICAgaGFuZGxlUGFnZUNoYW5nZSAoewogICAgICBjdXJyZW50UGFnZSwKICAgICAgcGFnZVNpemUKICAgIH0pIHsKICAgICAgY29uc3QgdGhhdCA9IHRoaXMKICAgICAgdGhhdC5fZWxQcm9wcy5wYWdlID0gY3VycmVudFBhZ2UKICAgICAgdGhhdC5fZWxQcm9wcy5saW1pdCA9IHBhZ2VTaXplCiAgICAgIHRoYXQuc2VhcmNoVGFibGVEYXRhKCkKICAgIH0sCiAgICAvLyDojrflj5bmlbDmja7kuovku7YKICAgIHNlYXJjaFRhYmxlRGF0YSAoKSB7CiAgICAgIGNvbnN0IHRoYXQgPSB0aGlzCiAgICAgIGxldCBwYXJhbXMKCiAgICAgIGlmICh0aGF0LnBhZ2luYXRpb24pIHsKICAgICAgICBwYXJhbXMgPSB7CiAgICAgICAgICBwYWdlOiB0aGF0Ll9lbFByb3BzLnBhZ2UsCiAgICAgICAgICBsaW1pdDogdGhhdC5fZWxQcm9wcy5saW1pdCwKICAgICAgICAgIHNlYXJjaDogdGhhdC5maWx0ZXJUZXh0CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHBhcmFtcyA9IHsKICAgICAgICAgIHNlYXJjaDogdGhhdC5maWx0ZXJUZXh0CiAgICAgICAgfQogICAgICB9CiAgICAgIGxldCB1cmwKICAgICAgaWYgKHR5cGVvZiB0aGF0LmRpY3QudXJsID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgY29uc3QgZm9ybSA9IHRoYXQuZDJDcnVkQ29udGV4dC5nZXRGb3JtKCkKICAgICAgICB1cmwgPSB0aGF0LmRpY3QudXJsKHRoYXQuZGljdCwgeyBmb3JtIH0pCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdXJsID0gdGhhdC5kaWN0LnVybAogICAgICB9CiAgICAgIHJlcXVlc3QoewogICAgICAgIHVybDogdXJsLAogICAgICAgIHBhcmFtczogcGFyYW1zCiAgICAgIH0pLnRoZW4oKHJldCkgPT4gewogICAgICAgIHRoYXQuX2VsUHJvcHMucGFnZSA9IHJldC5kYXRhLnBhZ2UKICAgICAgICB0aGF0Ll9lbFByb3BzLmxpbWl0ID0gcmV0LmRhdGEubGltaXQKICAgICAgICB0aGF0Ll9lbFByb3BzLnRvdGFsID0gcmV0LmRhdGEudG90YWwKICAgICAgICB0aGF0LiRzZXQodGhhdCwgJ2RpY3RPcHRpb25zJywgcmV0LmRhdGEuZGF0YSkKICAgICAgfSkKICAgIH0sCiAgICAvKioKICAgICAqIOihqOagvOWNlemAieS6i+S7tgogICAgICovCiAgICByYWRpb0NoYW5nZSAoeyBjaGVja2VkLCByb3csIHJvd0luZGV4LCAkcm93SW5kZXgsIGNvbHVtbiwgY29sdW1uSW5kZXgsICRjb2x1bW5JbmRleCwgJGV2ZW50IH0pIHsKICAgICAgdGhpcy4kZW1pdCgncmFkaW9DaGFuZ2UnLCB7CiAgICAgICAgcm93LAogICAgICAgIHJvd0luZGV4CiAgICAgIH0pCiAgICB9LAogICAgLyoqCiAgICAgKiDooajmoLzlpJrpgInkuovku7YKICAgICAqLwogICAgY2hlY2tib3hDaGFuZ2UgKHsgY2hlY2tlZCwgcm93LCByb3dJbmRleCwgJHJvd0luZGV4LCBjb2x1bW4sIGNvbHVtbkluZGV4LCAkY29sdW1uSW5kZXgsICRldmVudCB9KSB7CiAgICAgIHRoaXMuJGVtaXQoJ2NoZWNrYm94Q2hhbmdlJywgewogICAgICAgIGNoZWNrZWQsIHJvdywgcm93SW5kZXgsICRyb3dJbmRleCwgY29sdW1uLCBjb2x1bW5JbmRleCwgJGNvbHVtbkluZGV4LCAkZXZlbnQKICAgICAgfSkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["table-selector.vue"],"names":[],"mappings":";AAsfile":"table-selector.vue","sourceRoot":"src/components/table-selector","sourcesContent":["<template>\n  <div class=\"d2p-tree-selector\">\n    <div\n      class=\"el-cascader el-cascader--default\"\n      :class=\"{ 'is-disabled': disabled }\"\n      @click=\"openDialog\"\n    >\n      <div\n        class=\"el-input el-input--default el-input--suffix\"\n        :class=\"{ 'is-disabled': disabled }\"\n      >\n        <el-input\n          ref=\"reference\"\n          :disabled=\"disabled\"\n          :placeholder=\"selected.length === 0 ? placeholder : ''\"\n        />\n        <span class=\"el-input__suffix\">\n          <span class=\"el-input__suffix-inner\">\n            <i class=\"el-input__icon el-icon-arrow-down\" @click=\"openDialog\"/>\n          </span>\n        </span>\n      </div>\n      <div class=\"el-cascader__tags\" ref=\"tags\">\n        <transition-group @after-leave=\"resetInputHeight\">\n          <el-tag\n            v-for=\"item in selected\"\n            :key=\"getValueKey(item)\"\n            :closable=\"clearable\"\n            :size=\"collapseTagSize\"\n            :hit=\"false\"\n            type=\"info\"\n            @close=\"itemClosed(item)\"\n            disable-transitions\n          >\n            <span class=\"el-select__tags-text\">{{ getValueLabel(item) }}</span>\n          </el-tag>\n        </transition-group>\n      </div>\n    </div>\n    <el-dialog\n      custom-class=\"d2p-tree-selector-dialog\"\n      :title=\"dialogTitle\"\n      :visible.sync=\"dialogVisible\"\n      width=\"50%\"\n      append-to-body\n    >\n      <div class=\"tree-wrapper\">\n        <div v-if=\"treeFilter\" class=\"filter-bar\" style=\"padding-bottom: 20px\">\n          <el-input\n            prefix-icon=\"el-icon-search\"\n            :placeholder=\"filterPlaceholder\"\n            v-model=\"filterText\"\n            size=\"small\"\n          >\n          </el-input>\n        </div>\n\n        <div class=\"tree-body\">\n          <vxe-grid\n            v-bind=\"_elProps\"\n            :data=\"_options\"\n            ref=\"elTree\"\n            :auto-resize=\"true\"\n            @radio-change=\"radioChange\"\n            @checkbox-change=\"checkboxChange\"\n          >\n            <template #pager>\n              <vxe-pager\n                v-if=\"pagination\"\n                style=\"margin-top: 10px\"\n                :layouts=\"[\n                  'Sizes',\n                  'PrevJump',\n                  'PrevPage',\n                  'Number',\n                  'NextPage',\n                  'NextJump',\n                  'FullJump',\n                  'Total',\n                ]\"\n                :current-page.sync=\"_elProps.page\"\n                :page-size.sync=\"_elProps.limit\"\n                :total=\"_elProps.total\"\n                @page-change=\"handlePageChange\"\n              >\n              </vxe-pager>\n            </template>\n          </vxe-grid>\n        </div>\n      </div>\n\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">{{ cancelText }}</el-button>\n        <el-button type=\"primary\" @click=\"selectSubmit\">{{\n            confirmText\n          }}</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport lodash from 'lodash'\nimport { d2CrudPlus } from 'd2-crud-plus'\nimport { request } from '@/api/service'\n// 表格选择组件\nexport default {\n  name: 'table-selector-input',\n  mixins: [d2CrudPlus.input, d2CrudPlus.inputDict],\n  props: {\n    // 值\n    value: {\n      type: [Number, String, Boolean, Array, Object]\n    },\n    // 过滤，value中的nodes过滤方法 参数为nodes\n    filter: {\n      type: Function,\n      require: false\n    },\n    // 过滤的placeholder\n    filterPlaceholder: {\n      type: String,\n      default: '输入关键字进行过滤'\n    },\n    placeholder: {\n      type: String,\n      default: '请选择'\n    },\n    dialogTitle: {\n      type: String,\n      default: '选择'\n    },\n    cancelText: {\n      type: String,\n      default: '取消'\n    },\n    confirmText: {\n      type: String,\n      default: '确定'\n    },\n    // 树形组件节点过滤，可以配置elProps.filterNodeMethod ，覆盖默认的过滤方法\n    treeFilter: {\n      type: Boolean,\n      require: false,\n      default: true\n    },\n    // 是否多选，传入false为单选\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    // 是否忽略选中节点的子节点\n    ignoreFullCheckedChildren: {\n      type: Boolean,\n      default: true\n    },\n    // 是否只返回叶子节点\n    leafOnly: {\n      type: Boolean,\n      default: false\n    },\n    // 是否包含半选节点\n    includeHalfChecked: {\n      type: Boolean,\n      default: false\n    },\n    // el-tree的属性配置\n    elProps: {\n      type: Object\n    },\n    /**\n     * 是否可以清除\n     */\n    clearable: {\n      type: Boolean,\n      default: true\n    },\n    // 数据字典配置\n    dict: {\n      type: Object,\n      require: false\n    },\n    // 是否开启分页\n    pagination: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    return {\n      currentValue: undefined,\n      collapseTags: false,\n      selected: [],\n      dialogVisible: false,\n      filterText: undefined,\n      requestUrl: null\n    }\n  },\n  created () {\n    // if (this.dict) {\n    //   this.dict = d2CrudPlus.util.dict.mergeDefault(this.dict, true)\n    // }\n    // this.initData()\n    // console.log(this)\n    this.searchTableData()\n  },\n  computed: {\n    _elProps () {\n      const defaultElProps = {\n        // showCheckbox: this.multiple,\n        highlightCurrent: !this.multiple,\n        props: {},\n        columns: [],\n        border: true,\n        resizable: true\n      }\n      if (this.dict != null) {\n        if (this.dict.label != null) {\n          defaultElProps.props.label = this.dict.label\n        }\n        if (this.dict.value != null) {\n          defaultElProps.props.value = this.dict.value\n        }\n        if (this.dict.children != null) {\n          defaultElProps.props.children = this.dict.children\n        }\n        // 加上树形的配置\n        if (this.dict.isTree) {\n          defaultElProps.treeConfig = this.elProps.treeConfig\n        }\n      }\n      defaultElProps.nodeKey = defaultElProps.props.value\n      lodash.merge(defaultElProps, this.elProps)\n\n      if (this.multiple) {\n        defaultElProps.checkboxConfig = this.elProps.checkboxConfig\n          ? this.elProps.checkboxConfig\n          : {}\n        defaultElProps.columns = [\n          {\n            type: 'checkbox',\n            width: 60\n          },\n          ...defaultElProps.columns\n        ]\n      } else {\n        defaultElProps.radioConfig = this.elProps\n          ? this.elProps.radioConfig\n          : {}\n        defaultElProps.columns = [\n          {\n            type: 'radio',\n            width: 60\n          },\n          ...defaultElProps.columns\n        ]\n      }\n\n      return defaultElProps\n    },\n    collapseTagSize () {\n      return ['small', 'mini'].indexOf(this.selectSize) > -1 ? 'mini' : 'small'\n    }\n  },\n  watch: {\n    filterText (val) {\n      // this.$refs.elTree.filter(val);\n      this.searchTableData()\n    }\n  },\n  methods: {\n    // initData () {\n    //   d2CrudPlus.util.dict.get(this.dict).then(ret => {\n    //     this.$set(this, 'data', ret)\n    //     this.setValue(this.value)\n    //   })\n    // },\n    onDictLoaded () {\n      // log.danger(\"onDictLoaded\", this.dict, this.value);\n      this.setValue(this.value)\n    },\n    setValue (value) {\n      // log.danger(\"setValue:\", this.currentValue, this.value, this._options);\n      if (this.currentValue === this.value) {\n        return\n      }\n      let arrValue = value\n      if (value == null) {\n        this.selected = []\n      }\n\n      if (!(arrValue instanceof Array)) {\n        arrValue = [arrValue]\n      }\n      if (this.dict && this.dict.getNodes) {\n        // log.danger(\"getNodes:\", arrValue);\n        this.dict.getNodes(arrValue).then((nodes) => {\n          this.selectedNodes(nodes, value)\n        })\n      } else {\n        const nodes = []\n        if (this._options == null || this._options.length === 0) {\n          return\n        }\n        for (const item of arrValue) {\n          const data = this._options\n          const node = d2CrudPlus.util.dict.getByValue(item, data, this.dict)\n          if (node != null) {\n            nodes.push(node)\n          }\n        }\n        this.selectedNodes(nodes, value)\n      }\n    },\n    selectedNodes (nodes, value) {\n      const selected = []\n      for (const node of nodes) {\n        node.id = node[this.dict.value]\n        selected.push(node)\n      }\n      // log.danger(\"selected:\", selected);\n      this.$set(this, 'selected', selected)\n      this.resetInputHeight()\n    },\n    handleCheckChange (event) {\n      this.$emit('check-change', event)\n    },\n    handleCurrentChange (event) {\n      this.$emit('current-change', event)\n    },\n    openDialog () {\n      const that = this\n      if (that.disabled) {\n        return\n      }\n      that.dialogVisible = true\n      if (that.value != null) {\n        that.$nextTick(() => {\n          const refs = Object.assign({}, that.$refs)\n          const { elTree } = refs\n          if (that.multiple) {\n            elTree.setCheckboxRow(that.selected, true)\n          } else {\n            elTree.setRadioRow(that.selected[0])\n          }\n        })\n      }\n    },\n    doExpandParent (node) {\n      if (node.parent != null) {\n        this.doExpandParent(node.parent)\n      }\n      node.expanded = true\n    },\n    // 处理value,是否为原生value还是自定义value\n    getValueKey (item) {\n      if (this._elProps.props.value != null) {\n        return item[this._elProps.props.value]\n      } else {\n        return item.value\n      }\n    },\n    // 处理label,是否为原生label还是自定义label\n    getValueLabel (item) {\n      if (this._elProps.props.label != null) {\n        return item[this._elProps.props.label]\n      } else {\n        return item.label\n      }\n    },\n    // 处理children,是否为原生children还是自定义children\n    getValueChildren (item) {\n      let children = 'children'\n      if (this._elProps.props.children != null) {\n        children = this._elProps.props.children\n      }\n      return item[children]\n    },\n    // 确定按钮事件\n    selectSubmit () {\n      const nodes = this.refreshSelected()\n      this.dialogVisible = false\n      this.doValueInputChanged(nodes)\n    },\n    // 将值传出去\n    doValueInputChanged (nodes) {\n      let values = this.formatValue(nodes)\n      this.resetInputHeight()\n      if (!this.multiple) {\n        values = values && values.length > 0 ? values[0] : undefined\n      }\n      this.currentValue = values\n      if (this.dispatch) {\n        this.dispatch('ElFormItem', 'el.form.blur')\n      }\n      this.$emit('input', values)\n    },\n    itemClosed (item) {\n      const newNodes = lodash.without(this.selected, item)\n      // console.log(\"new value\", item, newNodes);\n      this.$set(this, 'selected', newNodes)\n      this.doValueInputChanged(newNodes)\n    },\n    // 获取选中的行数据\n    refreshSelected () {\n      let nodes = null\n      if (this.multiple) {\n        nodes = this.$refs.elTree.getCheckboxRecords()\n      } else {\n        const node = this.$refs.elTree.getRadioRecord()\n        if (node == null) {\n          nodes = []\n        } else {\n          nodes = [node]\n        }\n      }\n\n      if (this.ignoreFullCheckedChildren) {\n        nodes = this.filterFullCheckedChildren(nodes)\n      }\n      if (this.filter != null) {\n        nodes = this.filter(nodes)\n      }\n      // log.danger(\"selected\", this.selected);\n      this.$set(this, 'selected', nodes)\n      return nodes\n    },\n    resetInputHeight () {\n      if (this.collapseTags && !this.filterable) return\n      this.$nextTick(() => {\n        if (!this.$refs.reference) return\n        const inputChildNodes = this.$refs.reference.$el.childNodes\n        const input = [].filter.call(\n          inputChildNodes,\n          (item) => item.tagName === 'INPUT'\n        )[0]\n        const tags = this.$refs.tags\n        const sizeInMap = this.initialInputHeight || 40\n        const height =\n          this.selected.length === 0\n            ? sizeInMap + 'px'\n            : Math.max(\n              tags\n                ? tags.clientHeight + (tags.clientHeight > sizeInMap ? 6 : 0)\n                : 0,\n              sizeInMap\n            ) + 'px'\n        input.style.height = height\n        if (this.visible && this.emptyText !== false) {\n          this.broadcast('ElSelectDropdown', 'updatePopper')\n        }\n      })\n    },\n    // 过滤叶子节点\n    filterFullCheckedChildren (nodes) {\n      const ignored = new Set()\n      for (const item of nodes) {\n        const children = this.getValueChildren(item)\n        if (children != null) {\n          for (const child of children) {\n            ignored.add(this.getValueKey(child))\n          }\n        }\n      }\n      const values = []\n      for (const item of nodes) {\n        const key = this.getValueKey(item)\n        if (!ignored.has(key)) {\n          values.push(item)\n        }\n      }\n      return values\n    },\n    formatValue (nodes) {\n      const values = []\n      for (const item of nodes) {\n        values.push(this.getValueKey(item))\n      }\n      return values\n    },\n    filterNode (value, data) {\n      if (!value) return true\n      return this.getValueLabel(data).indexOf(value) !== -1\n    },\n    onChange (value) {\n      this.$emit('change', value)\n\n      if (this.dispatch) {\n        this.dispatch('ElFormItem', 'el.form.blur')\n      }\n    },\n    // 分页事件\n    handlePageChange ({\n      currentPage,\n      pageSize\n    }) {\n      const that = this\n      that._elProps.page = currentPage\n      that._elProps.limit = pageSize\n      that.searchTableData()\n    },\n    // 获取数据事件\n    searchTableData () {\n      const that = this\n      let params\n\n      if (that.pagination) {\n        params = {\n          page: that._elProps.page,\n          limit: that._elProps.limit,\n          search: that.filterText\n        }\n      } else {\n        params = {\n          search: that.filterText\n        }\n      }\n      let url\n      if (typeof that.dict.url === 'function') {\n        const form = that.d2CrudContext.getForm()\n        url = that.dict.url(that.dict, { form })\n      } else {\n        url = that.dict.url\n      }\n      request({\n        url: url,\n        params: params\n      }).then((ret) => {\n        that._elProps.page = ret.data.page\n        that._elProps.limit = ret.data.limit\n        that._elProps.total = ret.data.total\n        that.$set(that, 'dictOptions', ret.data.data)\n      })\n    },\n    /**\n     * 表格单选事件\n     */\n    radioChange ({ checked, row, rowIndex, $rowIndex, column, columnIndex, $columnIndex, $event }) {\n      this.$emit('radioChange', {\n        row,\n        rowIndex\n      })\n    },\n    /**\n     * 表格多选事件\n     */\n    checkboxChange ({ checked, row, rowIndex, $rowIndex, column, columnIndex, $columnIndex, $event }) {\n      this.$emit('checkboxChange', {\n        checked, row, rowIndex, $rowIndex, column, columnIndex, $columnIndex, $event\n      })\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n\n.d2p-tree-selector {\n  width: 100%;\n\n  .el-cascader {\n    width: 100%;\n  }\n\n  .is-disabled .el-tag__close.el-icon-close {\n    display: none;\n  }\n}\n\n.d2p-tree-selector-dialog {\n  &.el-dialog {\n    max-height: 80vh;\n    display: flex;\n    flex-direction: column;\n\n    .el-dialog__body {\n      flex: 1;\n      overflow-y: auto;\n    }\n\n    .el-dialog__header {\n      padding: 20px 20px 20px;\n      border-bottom: 1px solid #eee;\n    }\n\n    .el-dialog__footer {\n      padding: 10px 20px 10px;\n      border-top: 1px solid #eee;\n    }\n  }\n}\n\n</style>\n"]}]}